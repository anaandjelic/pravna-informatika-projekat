([rule1] of defeasible-rule
   (rule-name rule1)
   (original-rule "rule1 ( lc:case ( lc:defendant ?Defendant ) ( lc:steal_type \"robbery\" ) ) ( lc:case ( lc:defendant ?Defendant ) ( lc:steal_way \"standard\" ) ) => ( robbery_lv1 ( defendant ?Defendant ) )")
   (condition-classes)
   (conclusion-class robbery_lv1)
   (negated no)
   (superior)
   (deductive-rule rule1-deductive)
   (overruled-rule rule1-overruled)
   (system no)
   (support-rule rule1-support)
   (defeasibly-rule rule1-defeasibly)
   (defeated-rule nil))

([rule2] of defeasible-rule
   (rule-name rule2)
   (original-rule "rule2 ( lc:case ( lc:defendant ?Defendant ) ( lc:money ?Money ) ) ( lc:case ( lc:defendant ?Defendant ) ( lc:steal_type \"robbery\" ) ) ( test ( > ?Money 3000 ) ) ( lc:case ( lc:defendant ?Defendant ) ( lc:steal_way \"standard\" ) ) => ( robbery_min_imprisonment_lv2_3 ( defendant ?Defendant ) )")
   (condition-classes)
   (conclusion-class robbery_min_imprisonment_lv2_3)
   (negated no)
   (superior)
   (deductive-rule rule2-deductive)
   (overruled-rule rule2-overruled)
   (system no)
   (support-rule rule2-support)
   (defeasibly-rule rule2-defeasibly)
   (defeated-rule nil))

([rule3] of defeasible-rule
   (rule-name rule3)
   (original-rule "rule3 ( lc:case ( lc:defendant ?Defendant ) ( lc:money ?Money ) ) ( lc:case ( lc:defendant ?Defendant ) ( lc:steal_type \"robbery\" ) ) ( test ( > ?Money 3000 ) ) ( test ( <= ?Money 30000 ) ) ( lc:case ( lc:defendant ?Defendant ) ( lc:steal_way \"standard\" ) ) => ( robbery_lv2 ( defendant ?Defendant ) )")
   (condition-classes)
   (conclusion-class robbery_lv2)
   (negated no)
   (superior)
   (deductive-rule rule3-deductive)
   (overruled-rule rule3-overruled)
   (system no)
   (support-rule rule3-support)
   (defeasibly-rule rule3-defeasibly)
   (defeated-rule nil))

([rule4] of defeasible-rule
   (rule-name rule4)
   (original-rule "rule4 ( lc:case ( lc:defendant ?Defendant ) ( lc:money ?Money ) ) ( lc:case ( lc:defendant ?Defendant ) ( lc:steal_type \"robbery\" ) ) ( test ( > ?Money 30000 ) ) ( lc:case ( lc:defendant ?Defendant ) ( lc:steal_way \"standard\" ) ) => ( robbery_lv3 ( defendant ?Defendant ) )")
   (condition-classes)
   (conclusion-class robbery_lv3)
   (negated no)
   (superior)
   (deductive-rule rule4-deductive)
   (overruled-rule rule4-overruled)
   (system no)
   (support-rule rule4-support)
   (defeasibly-rule rule4-defeasibly)
   (defeated-rule nil))

([rule5] of defeasible-rule
   (rule-name rule5)
   (original-rule "rule5 ( robbery_lv2 ( defendant ?Defendant ) ) => ( not ( robbery_lv1 ( defendant ?Defendant ) ) )")
   (condition-classes)
   (conclusion-class robbery_lv1)
   (negated yes)
   (superior)
   (deductive-rule rule5-deductive)
   (overruled-rule rule5-overruled)
   (system no)
   (support-rule rule5-support)
   (defeasibly-rule rule5-defeasibly)
   (defeated-rule nil))

([rule6] of defeasible-rule
   (rule-name rule6)
   (original-rule "rule6 ( robbery_lv3 ( defendant ?Defendant ) ) => ( not ( robbery_lv1 ( defendant ?Defendant ) ) )")
   (condition-classes)
   (conclusion-class robbery_lv1)
   (negated yes)
   (superior)
   (deductive-rule rule6-deductive)
   (overruled-rule rule6-overruled)
   (system no)
   (support-rule rule6-support)
   (defeasibly-rule rule6-defeasibly)
   (defeated-rule nil))

([rule7] of defeasible-rule
   (rule-name rule7)
   (original-rule "rule7 ( lc:case ( lc:defendant ?Defendant ) ( lc:steal_type \"robbery\" ) ) ( lc:case ( lc:defendant ?Defendant ) ( lc:steal_way \"group_or_seriously_injured\" ) ) => ( robbery_lv4 ( defendant ?Defendant ) )")
   (condition-classes)
   (conclusion-class robbery_lv4)
   (negated no)
   (superior)
   (deductive-rule rule7-deductive)
   (overruled-rule rule7-overruled)
   (system no)
   (support-rule rule7-support)
   (defeasibly-rule rule7-defeasibly)
   (defeated-rule nil))

([rule8] of defeasible-rule
   (rule-name rule8)
   (original-rule "rule8 ( lc:case ( lc:defendant ?Defendant ) ( lc:steal_type \"robbery\" ) ) ( lc:case ( lc:defendant ?Defendant ) ( lc:steal_way \"deprived_of_life\" ) ) => ( robbery_lv5 ( defendant ?Defendant ) )")
   (condition-classes)
   (conclusion-class robbery_lv5)
   (negated no)
   (superior)
   (deductive-rule rule8-deductive)
   (overruled-rule rule8-overruled)
   (system no)
   (support-rule rule8-support)
   (defeasibly-rule rule8-defeasibly)
   (defeated-rule nil))

([rule9] of defeasible-rule
   (rule-name rule9)
   (original-rule "rule9 ( lc:case ( lc:defendant ?Defendant ) ( lc:money ?Money ) ) ( lc:case ( lc:defendant ?Defendant ) ( lc:steal_type \"robbery\" ) ) ( lc:case ( lc:defendant ?Defendant ) ( lc:steal_way \"standard\" ) ) ( test ( < ?Money 150 ) ) => ( robbery_lv6 ( defendant ?Defendant ) )")
   (condition-classes)
   (conclusion-class robbery_lv6)
   (negated no)
   (superior)
   (deductive-rule rule9-deductive)
   (overruled-rule rule9-overruled)
   (system no)
   (support-rule rule9-support)
   (defeasibly-rule rule9-defeasibly)
   (defeated-rule nil))

([rule10] of defeasible-rule
   (rule-name rule10)
   (original-rule "rule10 ( robbery_lv6 ( defendant ?Defendant ) ) => ( not ( robbery_lv1 ( defendant ?Defendant ) ) )")
   (condition-classes)
   (conclusion-class robbery_lv1)
   (negated yes)
   (superior)
   (deductive-rule rule10-deductive)
   (overruled-rule rule10-overruled)
   (system no)
   (support-rule rule10-support)
   (defeasibly-rule rule10-defeasibly)
   (defeated-rule nil))

([rule11] of defeasible-rule
   (rule-name rule11)
   (original-rule "rule11 ( lc:case ( lc:defendant ?Defendant ) ( lc:steal_type \"competition_outcome_arrangement\" ) ) => ( competition_outcome_arrangement_lv1 ( defendant ?Defendant ) )")
   (condition-classes)
   (conclusion-class competition_outcome_arrangement_lv1)
   (negated no)
   (superior)
   (deductive-rule rule11-deductive)
   (overruled-rule rule11-overruled)
   (system no)
   (support-rule rule11-support)
   (defeasibly-rule rule11-defeasibly)
   (defeated-rule nil))

([rule12] of defeasible-rule
   (rule-name rule12)
   (original-rule "rule12 ( lc:case ( lc:defendant ?Defendant ) ( lc:money ?Money ) ) ( lc:case ( lc:defendant ?Defendant ) ( lc:steal_type \"competition_outcome_arrangement\" ) ) ( test ( > ?Money 10000 ) ) ( test ( <= ?Money 40000 ) ) => ( competition_outcome_arrangement_lv2 ( defendant ?Defendant ) )")
   (condition-classes)
   (conclusion-class competition_outcome_arrangement_lv2)
   (negated no)
   (superior)
   (deductive-rule rule12-deductive)
   (overruled-rule rule12-overruled)
   (system no)
   (support-rule rule12-support)
   (defeasibly-rule rule12-defeasibly)
   (defeated-rule nil))

([rule13] of defeasible-rule
   (rule-name rule13)
   (original-rule "rule13 ( lc:case ( lc:defendant ?Defendant ) ( lc:money ?Money ) ) ( lc:case ( lc:defendant ?Defendant ) ( lc:steal_type \"competition_outcome_arrangement\" ) ) ( test ( > ?Money 40000 ) ) => ( competition_outcome_arrangement_lv3 ( defendant ?Defendant ) )")
   (condition-classes)
   (conclusion-class competition_outcome_arrangement_lv3)
   (negated no)
   (superior)
   (deductive-rule rule13-deductive)
   (overruled-rule rule13-overruled)
   (system no)
   (support-rule rule13-support)
   (defeasibly-rule rule13-defeasibly)
   (defeated-rule nil))

([rule14] of defeasible-rule
   (rule-name rule14)
   (original-rule "rule14 ( competition_outcome_arrangement_lv2 ( defendant ?Defendant ) ) => ( not ( competition_outcome_arrangement_lv1 ( defendant ?Defendant ) ) )")
   (condition-classes)
   (conclusion-class competition_outcome_arrangement_lv1)
   (negated yes)
   (superior)
   (deductive-rule rule14-deductive)
   (overruled-rule rule14-overruled)
   (system no)
   (support-rule rule14-support)
   (defeasibly-rule rule14-defeasibly)
   (defeated-rule nil))

([rule15] of defeasible-rule
   (rule-name rule15)
   (original-rule "rule15 ( competition_outcome_arrangement_lv3 ( defendant ?Defendant ) ) => ( not ( competition_outcome_arrangement_lv1 ( defendant ?Defendant ) ) )")
   (condition-classes)
   (conclusion-class competition_outcome_arrangement_lv1)
   (negated yes)
   (superior)
   (deductive-rule rule15-deductive)
   (overruled-rule rule15-overruled)
   (system no)
   (support-rule rule15-support)
   (defeasibly-rule rule15-defeasibly)
   (defeated-rule nil))

([pen1] of defeasible-rule
   (rule-name pen1)
   (original-rule "pen1 ( robbery_lv1 ( defendant ?Defendant ) ) => ( min_imprisonment_robbery_1 ( value 1 ) )")
   (condition-classes)
   (conclusion-class min_imprisonment_robbery_1)
   (negated no)
   (superior)
   (deductive-rule pen1-deductive)
   (overruled-rule pen1-overruled)
   (system no)
   (support-rule pen1-support)
   (defeasibly-rule pen1-defeasibly)
   (defeated-rule nil))

([pen2] of defeasible-rule
   (rule-name pen2)
   (original-rule "pen2 ( robbery_lv1 ( defendant ?Defendant ) ) => ( max_imprisonment_robbery_1 ( value 8 ) )")
   (condition-classes)
   (conclusion-class max_imprisonment_robbery_1)
   (negated no)
   (superior)
   (deductive-rule pen2-deductive)
   (overruled-rule pen2-overruled)
   (system no)
   (support-rule pen2-support)
   (defeasibly-rule pen2-defeasibly)
   (defeated-rule nil))

([pen3] of defeasible-rule
   (rule-name pen3)
   (original-rule "pen3 ( robbery_min_imprisonment_lv2_3 ( defendant ?Defendant ) ) => ( min_imprisonment_robbery_2 ( value 2 ) )")
   (condition-classes)
   (conclusion-class min_imprisonment_robbery_2)
   (negated no)
   (superior)
   (deductive-rule pen3-deductive)
   (overruled-rule pen3-overruled)
   (system no)
   (support-rule pen3-support)
   (defeasibly-rule pen3-defeasibly)
   (defeated-rule nil))

([pen4] of defeasible-rule
   (rule-name pen4)
   (original-rule "pen4 ( robbery_lv2 ( defendant ?Defendant ) ) => ( max_imprisonment_robbery_2 ( value 10 ) )")
   (condition-classes)
   (conclusion-class max_imprisonment_robbery_2)
   (negated no)
   (superior)
   (deductive-rule pen4-deductive)
   (overruled-rule pen4-overruled)
   (system no)
   (support-rule pen4-support)
   (defeasibly-rule pen4-defeasibly)
   (defeated-rule nil))

([pen5] of defeasible-rule
   (rule-name pen5)
   (original-rule "pen5 ( robbery_lv3 ( defendant ?Defendant ) ) => ( max_imprisonment_robbery_3 ( value 12 ) )")
   (condition-classes)
   (conclusion-class max_imprisonment_robbery_3)
   (negated no)
   (superior)
   (deductive-rule pen5-deductive)
   (overruled-rule pen5-overruled)
   (system no)
   (support-rule pen5-support)
   (defeasibly-rule pen5-defeasibly)
   (defeated-rule nil))

([pen6] of defeasible-rule
   (rule-name pen6)
   (original-rule "pen6 ( robbery_lv4 ( defendant ?Defendant ) ) => ( min_imprisonment_robbery_3 ( value 3 ) )")
   (condition-classes)
   (conclusion-class min_imprisonment_robbery_3)
   (negated no)
   (superior)
   (deductive-rule pen6-deductive)
   (overruled-rule pen6-overruled)
   (system no)
   (support-rule pen6-support)
   (defeasibly-rule pen6-defeasibly)
   (defeated-rule nil))

([pen7] of defeasible-rule
   (rule-name pen7)
   (original-rule "pen7 ( robbery_lv4 ( defendant ?Defendant ) ) => ( max_imprisonment_robbery_4 ( value 15 ) )")
   (condition-classes)
   (conclusion-class max_imprisonment_robbery_4)
   (negated no)
   (superior)
   (deductive-rule pen7-deductive)
   (overruled-rule pen7-overruled)
   (system no)
   (support-rule pen7-support)
   (defeasibly-rule pen7-defeasibly)
   (defeated-rule nil))

([pen8] of defeasible-rule
   (rule-name pen8)
   (original-rule "pen8 ( robbery_lv5 ( defendant ?Defendant ) ) => ( min_imprisonment_robbery_4 ( value 10 ) )")
   (condition-classes)
   (conclusion-class min_imprisonment_robbery_4)
   (negated no)
   (superior)
   (deductive-rule pen8-deductive)
   (overruled-rule pen8-overruled)
   (system no)
   (support-rule pen8-support)
   (defeasibly-rule pen8-defeasibly)
   (defeated-rule nil))

([pen9] of defeasible-rule
   (rule-name pen9)
   (original-rule "pen9 ( robbery_lv5 ( defendant ?Defendant ) ) => ( max_imprisonment_robbery_5 ( value Forever ) )")
   (condition-classes)
   (conclusion-class max_imprisonment_robbery_5)
   (negated no)
   (superior)
   (deductive-rule pen9-deductive)
   (overruled-rule pen9-overruled)
   (system no)
   (support-rule pen9-support)
   (defeasibly-rule pen9-defeasibly)
   (defeated-rule nil))

([pen10] of defeasible-rule
   (rule-name pen10)
   (original-rule "pen10 ( robbery_lv6 ( defendant ?Defendant ) ) => ( max_imprisonment_robbery_6 ( value 3 ) )")
   (condition-classes)
   (conclusion-class max_imprisonment_robbery_6)
   (negated no)
   (superior)
   (deductive-rule pen10-deductive)
   (overruled-rule pen10-overruled)
   (system no)
   (support-rule pen10-support)
   (defeasibly-rule pen10-defeasibly)
   (defeated-rule nil))

([pen11] of defeasible-rule
   (rule-name pen11)
   (original-rule "pen11 ( competition_outcome_arrangement_lv1 ( defendant ?Defendant ) ) => ( max_imprisonment_competition_outcome_arrangement_1 ( value 3 ) )")
   (condition-classes)
   (conclusion-class max_imprisonment_competition_outcome_arrangement_1)
   (negated no)
   (superior)
   (deductive-rule pen11-deductive)
   (overruled-rule pen11-overruled)
   (system no)
   (support-rule pen11-support)
   (defeasibly-rule pen11-defeasibly)
   (defeated-rule nil))

([pen12] of defeasible-rule
   (rule-name pen12)
   (original-rule "pen12 ( competition_outcome_arrangement_lv2 ( defendant ?Defendant ) ) => ( min_imprisonment_competition_outcome_arrangement_1 ( value 6 ) )")
   (condition-classes)
   (conclusion-class min_imprisonment_competition_outcome_arrangement_1)
   (negated no)
   (superior)
   (deductive-rule pen12-deductive)
   (overruled-rule pen12-overruled)
   (system no)
   (support-rule pen12-support)
   (defeasibly-rule pen12-defeasibly)
   (defeated-rule nil))

([pen13] of defeasible-rule
   (rule-name pen13)
   (original-rule "pen13 ( competition_outcome_arrangement_lv2 ( defendant ?Defendant ) ) => ( max_imprisonment_competition_outcome_arrangement_2 ( value 5 ) )")
   (condition-classes)
   (conclusion-class max_imprisonment_competition_outcome_arrangement_2)
   (negated no)
   (superior)
   (deductive-rule pen13-deductive)
   (overruled-rule pen13-overruled)
   (system no)
   (support-rule pen13-support)
   (defeasibly-rule pen13-defeasibly)
   (defeated-rule nil))

([pen14] of defeasible-rule
   (rule-name pen14)
   (original-rule "pen14 ( competition_outcome_arrangement_lv3 ( defendant ?Defendant ) ) => ( min_imprisonment_competition_outcome_arrangement_2 ( value 1 ) )")
   (condition-classes)
   (conclusion-class min_imprisonment_competition_outcome_arrangement_2)
   (negated no)
   (superior)
   (deductive-rule pen14-deductive)
   (overruled-rule pen14-overruled)
   (system no)
   (support-rule pen14-support)
   (defeasibly-rule pen14-defeasibly)
   (defeated-rule nil))

([pen15] of defeasible-rule
   (rule-name pen15)
   (original-rule "pen15 ( competition_outcome_arrangement_lv3 ( defendant ?Defendant ) ) => ( max_imprisonment_competition_outcome_arrangement_3 ( value 10 ) )")
   (condition-classes)
   (conclusion-class max_imprisonment_competition_outcome_arrangement_3)
   (negated no)
   (superior)
   (deductive-rule pen15-deductive)
   (overruled-rule pen15-overruled)
   (system no)
   (support-rule pen15-support)
   (defeasibly-rule pen15-defeasibly)
   (defeated-rule nil))

