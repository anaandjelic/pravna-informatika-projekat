( defrule rule5-deductive-gen336 ( declare ( salience ( calc-salience robbery_lv1 ) ) ) ( run-deductive-rules ) ( object ( name ?gen76 ) ( is-a robbery_lv2 ) ( defendant ?Defendant ) ) ( not ( object ( is-a robbery_lv1 ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat robbery_lv1 ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat robbery_lv1 ?Defendant ) ) ) ( make-instance ?oid of robbery_lv1 ( defendant ?Defendant ) ) )
( defrule rule6-deductive-gen337 ( declare ( salience ( calc-salience robbery_lv1 ) ) ) ( run-deductive-rules ) ( object ( name ?gen85 ) ( is-a robbery_lv3 ) ( defendant ?Defendant ) ) ( not ( object ( is-a robbery_lv1 ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat robbery_lv1 ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat robbery_lv1 ?Defendant ) ) ) ( make-instance ?oid of robbery_lv1 ( defendant ?Defendant ) ) )
( defrule rule10-deductive-gen341 ( declare ( salience ( calc-salience robbery_lv1 ) ) ) ( run-deductive-rules ) ( object ( name ?gen134 ) ( is-a robbery_lv6 ) ( defendant ?Defendant ) ) ( not ( object ( is-a robbery_lv1 ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat robbery_lv1 ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat robbery_lv1 ?Defendant ) ) ) ( make-instance ?oid of robbery_lv1 ( defendant ?Defendant ) ) )
( defrule rule14-deductive-gen345 ( declare ( salience ( calc-salience competition_outcome_arrangement_lv1 ) ) ) ( run-deductive-rules ) ( object ( name ?gen179 ) ( is-a competition_outcome_arrangement_lv2 ) ( defendant ?Defendant ) ) ( not ( object ( is-a competition_outcome_arrangement_lv1 ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat competition_outcome_arrangement_lv1 ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat competition_outcome_arrangement_lv1 ?Defendant ) ) ) ( make-instance ?oid of competition_outcome_arrangement_lv1 ( defendant ?Defendant ) ) )
( defrule rule15-deductive-gen346 ( declare ( salience ( calc-salience competition_outcome_arrangement_lv1 ) ) ) ( run-deductive-rules ) ( object ( name ?gen188 ) ( is-a competition_outcome_arrangement_lv3 ) ( defendant ?Defendant ) ) ( not ( object ( is-a competition_outcome_arrangement_lv1 ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat competition_outcome_arrangement_lv1 ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat competition_outcome_arrangement_lv1 ?Defendant ) ) ) ( make-instance ?oid of competition_outcome_arrangement_lv1 ( defendant ?Defendant ) ) )
( defrule pen15-defeasibly-dot-gen362 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen15] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen324 ) ( is-a max_imprisonment_competition_outcome_arrangement_3 ) ( value 10 ) ( positive 1 ) ( positive-derivator pen15 $? ) ) ( test ( eq ( class ?gen324 ) max_imprisonment_competition_outcome_arrangement_3 ) ) ( not ( and ( object ( name ?gen331 ) ( is-a competition_outcome_arrangement_lv3 ) ( defendant ?Defendant ) ( positive ?gen330 & : ( >= ?gen330 1 ) ) ) ( object ( name ?gen324 ) ( is-a max_imprisonment_competition_outcome_arrangement_3 ) ( negative ~ 2 ) ( positive-overruled $?gen326 & : ( not ( member$ pen15 $?gen326 ) ) ) ) ) )  ( not ( object ( name ?gen324 ) ( is-a max_imprisonment_competition_outcome_arrangement_3 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen324 ) ) => ( message-modify-instance ?gen324 ( positive 0 ) ) )
( defrule pen15-defeasibly-gen364 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen15] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen331 ) ( is-a competition_outcome_arrangement_lv3 ) ( defendant ?Defendant ) ( positive ?gen330 & : ( >= ?gen330 1 ) ) ) ( object ( name ?gen324 ) ( is-a max_imprisonment_competition_outcome_arrangement_3 ) ( value 10 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen326 & : ( not ( member$ pen15 $?gen326 ) ) ) ) ( test ( eq ( class ?gen324 ) max_imprisonment_competition_outcome_arrangement_3 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen324 ) ( is-a max_imprisonment_competition_outcome_arrangement_3 ) ( positive 1 ) ( positive-derivator pen15 ?gen331 ) ) ) ( test ( instance-existp ?gen324 ) ) => ( message-modify-instance ?gen324 ( positive 1 ) ( positive-derivator pen15 ?gen331 ) ) )
( defrule pen15-overruled-dot-gen366 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen15] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen324 ) ( is-a max_imprisonment_competition_outcome_arrangement_3 ) ( value 10 ) ( negative-support $?gen327 ) ( negative-overruled $?gen328 & : ( subseq-pos ( create$ pen15-overruled $?gen327 $$$ $?gen328 ) ) ) ) ( test ( eq ( class ?gen324 ) max_imprisonment_competition_outcome_arrangement_3 ) ) ( not ( and ( object ( name ?gen331 ) ( is-a competition_outcome_arrangement_lv3 ) ( defendant ?Defendant ) ( positive ?gen330 & : ( >= ?gen330 1 ) ) ) ( object ( name ?gen324 ) ( is-a max_imprisonment_competition_outcome_arrangement_3 ) ( positive-defeated $?gen326 & : ( not ( member$ pen15 $?gen326 ) ) ) ) ) ) ( test ( neq $?gen327 (create$) ) ) ( not ( object ( name ?gen324 ) ( is-a max_imprisonment_competition_outcome_arrangement_3 ) ( negative-overruled $?gen329 & : ( eq $?gen329 ( delete-member$ $?gen328 ( create$ pen15-overruled $?gen327 ) ) ) ) ) ) ( test ( instance-existp ?gen324 ) ) => ( bind $?gen329 ( delete-member$ $?gen328 ( create$ pen15-overruled $?gen327 ) ) ) ( message-modify-instance ?gen324 ( negative-overruled $?gen329 ) ) )
( defrule pen15-overruled-gen368 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen15] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen331 ) ( is-a competition_outcome_arrangement_lv3 ) ( defendant ?Defendant ) ( positive ?gen330 & : ( >= ?gen330 1 ) ) ) ( object ( name ?gen324 ) ( is-a max_imprisonment_competition_outcome_arrangement_3 ) ( value 10 ) ( negative-support $?gen327 ) ( negative-overruled $?gen328 & : ( not ( subseq-pos ( create$ pen15-overruled $?gen327 $$$ $?gen328 ) ) ) ) ( positive-defeated $?gen326 & : ( not ( member$ pen15 $?gen326 ) ) ) ) ( test ( eq ( class ?gen324 ) max_imprisonment_competition_outcome_arrangement_3 ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen327 (create$) ) ) ) ( not ( object ( name ?gen324 ) ( is-a max_imprisonment_competition_outcome_arrangement_3 ) ( negative-overruled $?gen329 & : ( eq $?gen329 ( create$ pen15-overruled $?gen327 $?gen328 ) ) ) ) ) ( test ( instance-existp ?gen324 ) ) => ( bind $?gen329 ( create$ pen15-overruled $?gen327 $?gen328 ) ) ( message-modify-instance ?gen324 ( negative-overruled $?gen329 ) ) )
( defrule pen15-support-gen370 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen15] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen323 ) ( is-a competition_outcome_arrangement_lv3 ) ( defendant ?Defendant ) ) ( object ( name ?gen324 ) ( is-a max_imprisonment_competition_outcome_arrangement_3 ) ( value 10 ) ( positive-support $?gen326 & : ( not ( subseq-pos ( create$ pen15 ?gen323 $$$ $?gen326 ) ) ) ) ) ( test ( eq ( class ?gen324 ) max_imprisonment_competition_outcome_arrangement_3 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen324 ) ( is-a max_imprisonment_competition_outcome_arrangement_3 ) ( positive-support $?gen329 & : ( eq $?gen329 ( create$ pen15 ?gen323 $?gen326 ) ) ) ) ) ( test ( instance-existp ?gen324 ) ) => ( bind $?gen329 ( create$ pen15 ?gen323 $?gen326 ) ) ( message-modify-instance ?gen324 ( positive-support $?gen329 ) ) )
( defrule pen14-defeasibly-dot-gen372 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen14] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen315 ) ( is-a min_imprisonment_competition_outcome_arrangement_2 ) ( value 1 ) ( positive 1 ) ( positive-derivator pen14 $? ) ) ( test ( eq ( class ?gen315 ) min_imprisonment_competition_outcome_arrangement_2 ) ) ( not ( and ( object ( name ?gen322 ) ( is-a competition_outcome_arrangement_lv3 ) ( defendant ?Defendant ) ( positive ?gen321 & : ( >= ?gen321 1 ) ) ) ( object ( name ?gen315 ) ( is-a min_imprisonment_competition_outcome_arrangement_2 ) ( negative ~ 2 ) ( positive-overruled $?gen317 & : ( not ( member$ pen14 $?gen317 ) ) ) ) ) )  ( not ( object ( name ?gen315 ) ( is-a min_imprisonment_competition_outcome_arrangement_2 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen315 ) ) => ( message-modify-instance ?gen315 ( positive 0 ) ) )
( defrule pen14-defeasibly-gen374 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen14] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen322 ) ( is-a competition_outcome_arrangement_lv3 ) ( defendant ?Defendant ) ( positive ?gen321 & : ( >= ?gen321 1 ) ) ) ( object ( name ?gen315 ) ( is-a min_imprisonment_competition_outcome_arrangement_2 ) ( value 1 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen317 & : ( not ( member$ pen14 $?gen317 ) ) ) ) ( test ( eq ( class ?gen315 ) min_imprisonment_competition_outcome_arrangement_2 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen315 ) ( is-a min_imprisonment_competition_outcome_arrangement_2 ) ( positive 1 ) ( positive-derivator pen14 ?gen322 ) ) ) ( test ( instance-existp ?gen315 ) ) => ( message-modify-instance ?gen315 ( positive 1 ) ( positive-derivator pen14 ?gen322 ) ) )
( defrule pen14-overruled-dot-gen376 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen14] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen315 ) ( is-a min_imprisonment_competition_outcome_arrangement_2 ) ( value 1 ) ( negative-support $?gen318 ) ( negative-overruled $?gen319 & : ( subseq-pos ( create$ pen14-overruled $?gen318 $$$ $?gen319 ) ) ) ) ( test ( eq ( class ?gen315 ) min_imprisonment_competition_outcome_arrangement_2 ) ) ( not ( and ( object ( name ?gen322 ) ( is-a competition_outcome_arrangement_lv3 ) ( defendant ?Defendant ) ( positive ?gen321 & : ( >= ?gen321 1 ) ) ) ( object ( name ?gen315 ) ( is-a min_imprisonment_competition_outcome_arrangement_2 ) ( positive-defeated $?gen317 & : ( not ( member$ pen14 $?gen317 ) ) ) ) ) ) ( test ( neq $?gen318 (create$) ) ) ( not ( object ( name ?gen315 ) ( is-a min_imprisonment_competition_outcome_arrangement_2 ) ( negative-overruled $?gen320 & : ( eq $?gen320 ( delete-member$ $?gen319 ( create$ pen14-overruled $?gen318 ) ) ) ) ) ) ( test ( instance-existp ?gen315 ) ) => ( bind $?gen320 ( delete-member$ $?gen319 ( create$ pen14-overruled $?gen318 ) ) ) ( message-modify-instance ?gen315 ( negative-overruled $?gen320 ) ) )
( defrule pen14-overruled-gen378 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen14] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen322 ) ( is-a competition_outcome_arrangement_lv3 ) ( defendant ?Defendant ) ( positive ?gen321 & : ( >= ?gen321 1 ) ) ) ( object ( name ?gen315 ) ( is-a min_imprisonment_competition_outcome_arrangement_2 ) ( value 1 ) ( negative-support $?gen318 ) ( negative-overruled $?gen319 & : ( not ( subseq-pos ( create$ pen14-overruled $?gen318 $$$ $?gen319 ) ) ) ) ( positive-defeated $?gen317 & : ( not ( member$ pen14 $?gen317 ) ) ) ) ( test ( eq ( class ?gen315 ) min_imprisonment_competition_outcome_arrangement_2 ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen318 (create$) ) ) ) ( not ( object ( name ?gen315 ) ( is-a min_imprisonment_competition_outcome_arrangement_2 ) ( negative-overruled $?gen320 & : ( eq $?gen320 ( create$ pen14-overruled $?gen318 $?gen319 ) ) ) ) ) ( test ( instance-existp ?gen315 ) ) => ( bind $?gen320 ( create$ pen14-overruled $?gen318 $?gen319 ) ) ( message-modify-instance ?gen315 ( negative-overruled $?gen320 ) ) )
( defrule pen14-support-gen380 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen14] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen314 ) ( is-a competition_outcome_arrangement_lv3 ) ( defendant ?Defendant ) ) ( object ( name ?gen315 ) ( is-a min_imprisonment_competition_outcome_arrangement_2 ) ( value 1 ) ( positive-support $?gen317 & : ( not ( subseq-pos ( create$ pen14 ?gen314 $$$ $?gen317 ) ) ) ) ) ( test ( eq ( class ?gen315 ) min_imprisonment_competition_outcome_arrangement_2 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen315 ) ( is-a min_imprisonment_competition_outcome_arrangement_2 ) ( positive-support $?gen320 & : ( eq $?gen320 ( create$ pen14 ?gen314 $?gen317 ) ) ) ) ) ( test ( instance-existp ?gen315 ) ) => ( bind $?gen320 ( create$ pen14 ?gen314 $?gen317 ) ) ( message-modify-instance ?gen315 ( positive-support $?gen320 ) ) )
( defrule pen13-defeasibly-dot-gen382 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen13] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen306 ) ( is-a max_imprisonment_competition_outcome_arrangement_2 ) ( value 5 ) ( positive 1 ) ( positive-derivator pen13 $? ) ) ( test ( eq ( class ?gen306 ) max_imprisonment_competition_outcome_arrangement_2 ) ) ( not ( and ( object ( name ?gen313 ) ( is-a competition_outcome_arrangement_lv2 ) ( defendant ?Defendant ) ( positive ?gen312 & : ( >= ?gen312 1 ) ) ) ( object ( name ?gen306 ) ( is-a max_imprisonment_competition_outcome_arrangement_2 ) ( negative ~ 2 ) ( positive-overruled $?gen308 & : ( not ( member$ pen13 $?gen308 ) ) ) ) ) )  ( not ( object ( name ?gen306 ) ( is-a max_imprisonment_competition_outcome_arrangement_2 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen306 ) ) => ( message-modify-instance ?gen306 ( positive 0 ) ) )
( defrule pen13-defeasibly-gen384 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen13] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen313 ) ( is-a competition_outcome_arrangement_lv2 ) ( defendant ?Defendant ) ( positive ?gen312 & : ( >= ?gen312 1 ) ) ) ( object ( name ?gen306 ) ( is-a max_imprisonment_competition_outcome_arrangement_2 ) ( value 5 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen308 & : ( not ( member$ pen13 $?gen308 ) ) ) ) ( test ( eq ( class ?gen306 ) max_imprisonment_competition_outcome_arrangement_2 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen306 ) ( is-a max_imprisonment_competition_outcome_arrangement_2 ) ( positive 1 ) ( positive-derivator pen13 ?gen313 ) ) ) ( test ( instance-existp ?gen306 ) ) => ( message-modify-instance ?gen306 ( positive 1 ) ( positive-derivator pen13 ?gen313 ) ) )
( defrule pen13-overruled-dot-gen386 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen13] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen306 ) ( is-a max_imprisonment_competition_outcome_arrangement_2 ) ( value 5 ) ( negative-support $?gen309 ) ( negative-overruled $?gen310 & : ( subseq-pos ( create$ pen13-overruled $?gen309 $$$ $?gen310 ) ) ) ) ( test ( eq ( class ?gen306 ) max_imprisonment_competition_outcome_arrangement_2 ) ) ( not ( and ( object ( name ?gen313 ) ( is-a competition_outcome_arrangement_lv2 ) ( defendant ?Defendant ) ( positive ?gen312 & : ( >= ?gen312 1 ) ) ) ( object ( name ?gen306 ) ( is-a max_imprisonment_competition_outcome_arrangement_2 ) ( positive-defeated $?gen308 & : ( not ( member$ pen13 $?gen308 ) ) ) ) ) ) ( test ( neq $?gen309 (create$) ) ) ( not ( object ( name ?gen306 ) ( is-a max_imprisonment_competition_outcome_arrangement_2 ) ( negative-overruled $?gen311 & : ( eq $?gen311 ( delete-member$ $?gen310 ( create$ pen13-overruled $?gen309 ) ) ) ) ) ) ( test ( instance-existp ?gen306 ) ) => ( bind $?gen311 ( delete-member$ $?gen310 ( create$ pen13-overruled $?gen309 ) ) ) ( message-modify-instance ?gen306 ( negative-overruled $?gen311 ) ) )
( defrule pen13-overruled-gen388 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen13] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen313 ) ( is-a competition_outcome_arrangement_lv2 ) ( defendant ?Defendant ) ( positive ?gen312 & : ( >= ?gen312 1 ) ) ) ( object ( name ?gen306 ) ( is-a max_imprisonment_competition_outcome_arrangement_2 ) ( value 5 ) ( negative-support $?gen309 ) ( negative-overruled $?gen310 & : ( not ( subseq-pos ( create$ pen13-overruled $?gen309 $$$ $?gen310 ) ) ) ) ( positive-defeated $?gen308 & : ( not ( member$ pen13 $?gen308 ) ) ) ) ( test ( eq ( class ?gen306 ) max_imprisonment_competition_outcome_arrangement_2 ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen309 (create$) ) ) ) ( not ( object ( name ?gen306 ) ( is-a max_imprisonment_competition_outcome_arrangement_2 ) ( negative-overruled $?gen311 & : ( eq $?gen311 ( create$ pen13-overruled $?gen309 $?gen310 ) ) ) ) ) ( test ( instance-existp ?gen306 ) ) => ( bind $?gen311 ( create$ pen13-overruled $?gen309 $?gen310 ) ) ( message-modify-instance ?gen306 ( negative-overruled $?gen311 ) ) )
( defrule pen13-support-gen390 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen13] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen305 ) ( is-a competition_outcome_arrangement_lv2 ) ( defendant ?Defendant ) ) ( object ( name ?gen306 ) ( is-a max_imprisonment_competition_outcome_arrangement_2 ) ( value 5 ) ( positive-support $?gen308 & : ( not ( subseq-pos ( create$ pen13 ?gen305 $$$ $?gen308 ) ) ) ) ) ( test ( eq ( class ?gen306 ) max_imprisonment_competition_outcome_arrangement_2 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen306 ) ( is-a max_imprisonment_competition_outcome_arrangement_2 ) ( positive-support $?gen311 & : ( eq $?gen311 ( create$ pen13 ?gen305 $?gen308 ) ) ) ) ) ( test ( instance-existp ?gen306 ) ) => ( bind $?gen311 ( create$ pen13 ?gen305 $?gen308 ) ) ( message-modify-instance ?gen306 ( positive-support $?gen311 ) ) )
( defrule pen12-defeasibly-dot-gen392 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen12] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen297 ) ( is-a min_imprisonment_competition_outcome_arrangement_1 ) ( value 6 ) ( positive 1 ) ( positive-derivator pen12 $? ) ) ( test ( eq ( class ?gen297 ) min_imprisonment_competition_outcome_arrangement_1 ) ) ( not ( and ( object ( name ?gen304 ) ( is-a competition_outcome_arrangement_lv2 ) ( defendant ?Defendant ) ( positive ?gen303 & : ( >= ?gen303 1 ) ) ) ( object ( name ?gen297 ) ( is-a min_imprisonment_competition_outcome_arrangement_1 ) ( negative ~ 2 ) ( positive-overruled $?gen299 & : ( not ( member$ pen12 $?gen299 ) ) ) ) ) )  ( not ( object ( name ?gen297 ) ( is-a min_imprisonment_competition_outcome_arrangement_1 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen297 ) ) => ( message-modify-instance ?gen297 ( positive 0 ) ) )
( defrule pen12-defeasibly-gen394 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen12] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen304 ) ( is-a competition_outcome_arrangement_lv2 ) ( defendant ?Defendant ) ( positive ?gen303 & : ( >= ?gen303 1 ) ) ) ( object ( name ?gen297 ) ( is-a min_imprisonment_competition_outcome_arrangement_1 ) ( value 6 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen299 & : ( not ( member$ pen12 $?gen299 ) ) ) ) ( test ( eq ( class ?gen297 ) min_imprisonment_competition_outcome_arrangement_1 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen297 ) ( is-a min_imprisonment_competition_outcome_arrangement_1 ) ( positive 1 ) ( positive-derivator pen12 ?gen304 ) ) ) ( test ( instance-existp ?gen297 ) ) => ( message-modify-instance ?gen297 ( positive 1 ) ( positive-derivator pen12 ?gen304 ) ) )
( defrule pen12-overruled-dot-gen396 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen12] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen297 ) ( is-a min_imprisonment_competition_outcome_arrangement_1 ) ( value 6 ) ( negative-support $?gen300 ) ( negative-overruled $?gen301 & : ( subseq-pos ( create$ pen12-overruled $?gen300 $$$ $?gen301 ) ) ) ) ( test ( eq ( class ?gen297 ) min_imprisonment_competition_outcome_arrangement_1 ) ) ( not ( and ( object ( name ?gen304 ) ( is-a competition_outcome_arrangement_lv2 ) ( defendant ?Defendant ) ( positive ?gen303 & : ( >= ?gen303 1 ) ) ) ( object ( name ?gen297 ) ( is-a min_imprisonment_competition_outcome_arrangement_1 ) ( positive-defeated $?gen299 & : ( not ( member$ pen12 $?gen299 ) ) ) ) ) ) ( test ( neq $?gen300 (create$) ) ) ( not ( object ( name ?gen297 ) ( is-a min_imprisonment_competition_outcome_arrangement_1 ) ( negative-overruled $?gen302 & : ( eq $?gen302 ( delete-member$ $?gen301 ( create$ pen12-overruled $?gen300 ) ) ) ) ) ) ( test ( instance-existp ?gen297 ) ) => ( bind $?gen302 ( delete-member$ $?gen301 ( create$ pen12-overruled $?gen300 ) ) ) ( message-modify-instance ?gen297 ( negative-overruled $?gen302 ) ) )
( defrule pen12-overruled-gen398 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen12] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen304 ) ( is-a competition_outcome_arrangement_lv2 ) ( defendant ?Defendant ) ( positive ?gen303 & : ( >= ?gen303 1 ) ) ) ( object ( name ?gen297 ) ( is-a min_imprisonment_competition_outcome_arrangement_1 ) ( value 6 ) ( negative-support $?gen300 ) ( negative-overruled $?gen301 & : ( not ( subseq-pos ( create$ pen12-overruled $?gen300 $$$ $?gen301 ) ) ) ) ( positive-defeated $?gen299 & : ( not ( member$ pen12 $?gen299 ) ) ) ) ( test ( eq ( class ?gen297 ) min_imprisonment_competition_outcome_arrangement_1 ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen300 (create$) ) ) ) ( not ( object ( name ?gen297 ) ( is-a min_imprisonment_competition_outcome_arrangement_1 ) ( negative-overruled $?gen302 & : ( eq $?gen302 ( create$ pen12-overruled $?gen300 $?gen301 ) ) ) ) ) ( test ( instance-existp ?gen297 ) ) => ( bind $?gen302 ( create$ pen12-overruled $?gen300 $?gen301 ) ) ( message-modify-instance ?gen297 ( negative-overruled $?gen302 ) ) )
( defrule pen12-support-gen400 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen12] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen296 ) ( is-a competition_outcome_arrangement_lv2 ) ( defendant ?Defendant ) ) ( object ( name ?gen297 ) ( is-a min_imprisonment_competition_outcome_arrangement_1 ) ( value 6 ) ( positive-support $?gen299 & : ( not ( subseq-pos ( create$ pen12 ?gen296 $$$ $?gen299 ) ) ) ) ) ( test ( eq ( class ?gen297 ) min_imprisonment_competition_outcome_arrangement_1 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen297 ) ( is-a min_imprisonment_competition_outcome_arrangement_1 ) ( positive-support $?gen302 & : ( eq $?gen302 ( create$ pen12 ?gen296 $?gen299 ) ) ) ) ) ( test ( instance-existp ?gen297 ) ) => ( bind $?gen302 ( create$ pen12 ?gen296 $?gen299 ) ) ( message-modify-instance ?gen297 ( positive-support $?gen302 ) ) )
( defrule pen11-defeasibly-dot-gen402 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen11] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen288 ) ( is-a max_imprisonment_competition_outcome_arrangement_1 ) ( value 3 ) ( positive 1 ) ( positive-derivator pen11 $? ) ) ( test ( eq ( class ?gen288 ) max_imprisonment_competition_outcome_arrangement_1 ) ) ( not ( and ( object ( name ?gen295 ) ( is-a competition_outcome_arrangement_lv1 ) ( defendant ?Defendant ) ( positive ?gen294 & : ( >= ?gen294 1 ) ) ) ( object ( name ?gen288 ) ( is-a max_imprisonment_competition_outcome_arrangement_1 ) ( negative ~ 2 ) ( positive-overruled $?gen290 & : ( not ( member$ pen11 $?gen290 ) ) ) ) ) )  ( not ( object ( name ?gen288 ) ( is-a max_imprisonment_competition_outcome_arrangement_1 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen288 ) ) => ( message-modify-instance ?gen288 ( positive 0 ) ) )
( defrule pen11-defeasibly-gen404 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen11] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen295 ) ( is-a competition_outcome_arrangement_lv1 ) ( defendant ?Defendant ) ( positive ?gen294 & : ( >= ?gen294 1 ) ) ) ( object ( name ?gen288 ) ( is-a max_imprisonment_competition_outcome_arrangement_1 ) ( value 3 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen290 & : ( not ( member$ pen11 $?gen290 ) ) ) ) ( test ( eq ( class ?gen288 ) max_imprisonment_competition_outcome_arrangement_1 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen288 ) ( is-a max_imprisonment_competition_outcome_arrangement_1 ) ( positive 1 ) ( positive-derivator pen11 ?gen295 ) ) ) ( test ( instance-existp ?gen288 ) ) => ( message-modify-instance ?gen288 ( positive 1 ) ( positive-derivator pen11 ?gen295 ) ) )
( defrule pen11-overruled-dot-gen406 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen11] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen288 ) ( is-a max_imprisonment_competition_outcome_arrangement_1 ) ( value 3 ) ( negative-support $?gen291 ) ( negative-overruled $?gen292 & : ( subseq-pos ( create$ pen11-overruled $?gen291 $$$ $?gen292 ) ) ) ) ( test ( eq ( class ?gen288 ) max_imprisonment_competition_outcome_arrangement_1 ) ) ( not ( and ( object ( name ?gen295 ) ( is-a competition_outcome_arrangement_lv1 ) ( defendant ?Defendant ) ( positive ?gen294 & : ( >= ?gen294 1 ) ) ) ( object ( name ?gen288 ) ( is-a max_imprisonment_competition_outcome_arrangement_1 ) ( positive-defeated $?gen290 & : ( not ( member$ pen11 $?gen290 ) ) ) ) ) ) ( test ( neq $?gen291 (create$) ) ) ( not ( object ( name ?gen288 ) ( is-a max_imprisonment_competition_outcome_arrangement_1 ) ( negative-overruled $?gen293 & : ( eq $?gen293 ( delete-member$ $?gen292 ( create$ pen11-overruled $?gen291 ) ) ) ) ) ) ( test ( instance-existp ?gen288 ) ) => ( bind $?gen293 ( delete-member$ $?gen292 ( create$ pen11-overruled $?gen291 ) ) ) ( message-modify-instance ?gen288 ( negative-overruled $?gen293 ) ) )
( defrule pen11-overruled-gen408 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen11] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen295 ) ( is-a competition_outcome_arrangement_lv1 ) ( defendant ?Defendant ) ( positive ?gen294 & : ( >= ?gen294 1 ) ) ) ( object ( name ?gen288 ) ( is-a max_imprisonment_competition_outcome_arrangement_1 ) ( value 3 ) ( negative-support $?gen291 ) ( negative-overruled $?gen292 & : ( not ( subseq-pos ( create$ pen11-overruled $?gen291 $$$ $?gen292 ) ) ) ) ( positive-defeated $?gen290 & : ( not ( member$ pen11 $?gen290 ) ) ) ) ( test ( eq ( class ?gen288 ) max_imprisonment_competition_outcome_arrangement_1 ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen291 (create$) ) ) ) ( not ( object ( name ?gen288 ) ( is-a max_imprisonment_competition_outcome_arrangement_1 ) ( negative-overruled $?gen293 & : ( eq $?gen293 ( create$ pen11-overruled $?gen291 $?gen292 ) ) ) ) ) ( test ( instance-existp ?gen288 ) ) => ( bind $?gen293 ( create$ pen11-overruled $?gen291 $?gen292 ) ) ( message-modify-instance ?gen288 ( negative-overruled $?gen293 ) ) )
( defrule pen11-support-gen410 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen11] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen287 ) ( is-a competition_outcome_arrangement_lv1 ) ( defendant ?Defendant ) ) ( object ( name ?gen288 ) ( is-a max_imprisonment_competition_outcome_arrangement_1 ) ( value 3 ) ( positive-support $?gen290 & : ( not ( subseq-pos ( create$ pen11 ?gen287 $$$ $?gen290 ) ) ) ) ) ( test ( eq ( class ?gen288 ) max_imprisonment_competition_outcome_arrangement_1 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen288 ) ( is-a max_imprisonment_competition_outcome_arrangement_1 ) ( positive-support $?gen293 & : ( eq $?gen293 ( create$ pen11 ?gen287 $?gen290 ) ) ) ) ) ( test ( instance-existp ?gen288 ) ) => ( bind $?gen293 ( create$ pen11 ?gen287 $?gen290 ) ) ( message-modify-instance ?gen288 ( positive-support $?gen293 ) ) )
( defrule pen10-defeasibly-dot-gen412 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen10] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen279 ) ( is-a max_imprisonment_robbery_6 ) ( value 3 ) ( positive 1 ) ( positive-derivator pen10 $? ) ) ( test ( eq ( class ?gen279 ) max_imprisonment_robbery_6 ) ) ( not ( and ( object ( name ?gen286 ) ( is-a robbery_lv6 ) ( defendant ?Defendant ) ( positive ?gen285 & : ( >= ?gen285 1 ) ) ) ( object ( name ?gen279 ) ( is-a max_imprisonment_robbery_6 ) ( negative ~ 2 ) ( positive-overruled $?gen281 & : ( not ( member$ pen10 $?gen281 ) ) ) ) ) )  ( not ( object ( name ?gen279 ) ( is-a max_imprisonment_robbery_6 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen279 ) ) => ( message-modify-instance ?gen279 ( positive 0 ) ) )
( defrule pen10-defeasibly-gen414 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen10] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen286 ) ( is-a robbery_lv6 ) ( defendant ?Defendant ) ( positive ?gen285 & : ( >= ?gen285 1 ) ) ) ( object ( name ?gen279 ) ( is-a max_imprisonment_robbery_6 ) ( value 3 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen281 & : ( not ( member$ pen10 $?gen281 ) ) ) ) ( test ( eq ( class ?gen279 ) max_imprisonment_robbery_6 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen279 ) ( is-a max_imprisonment_robbery_6 ) ( positive 1 ) ( positive-derivator pen10 ?gen286 ) ) ) ( test ( instance-existp ?gen279 ) ) => ( message-modify-instance ?gen279 ( positive 1 ) ( positive-derivator pen10 ?gen286 ) ) )
( defrule pen10-overruled-dot-gen416 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen10] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen279 ) ( is-a max_imprisonment_robbery_6 ) ( value 3 ) ( negative-support $?gen282 ) ( negative-overruled $?gen283 & : ( subseq-pos ( create$ pen10-overruled $?gen282 $$$ $?gen283 ) ) ) ) ( test ( eq ( class ?gen279 ) max_imprisonment_robbery_6 ) ) ( not ( and ( object ( name ?gen286 ) ( is-a robbery_lv6 ) ( defendant ?Defendant ) ( positive ?gen285 & : ( >= ?gen285 1 ) ) ) ( object ( name ?gen279 ) ( is-a max_imprisonment_robbery_6 ) ( positive-defeated $?gen281 & : ( not ( member$ pen10 $?gen281 ) ) ) ) ) ) ( test ( neq $?gen282 (create$) ) ) ( not ( object ( name ?gen279 ) ( is-a max_imprisonment_robbery_6 ) ( negative-overruled $?gen284 & : ( eq $?gen284 ( delete-member$ $?gen283 ( create$ pen10-overruled $?gen282 ) ) ) ) ) ) ( test ( instance-existp ?gen279 ) ) => ( bind $?gen284 ( delete-member$ $?gen283 ( create$ pen10-overruled $?gen282 ) ) ) ( message-modify-instance ?gen279 ( negative-overruled $?gen284 ) ) )
( defrule pen10-overruled-gen418 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen10] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen286 ) ( is-a robbery_lv6 ) ( defendant ?Defendant ) ( positive ?gen285 & : ( >= ?gen285 1 ) ) ) ( object ( name ?gen279 ) ( is-a max_imprisonment_robbery_6 ) ( value 3 ) ( negative-support $?gen282 ) ( negative-overruled $?gen283 & : ( not ( subseq-pos ( create$ pen10-overruled $?gen282 $$$ $?gen283 ) ) ) ) ( positive-defeated $?gen281 & : ( not ( member$ pen10 $?gen281 ) ) ) ) ( test ( eq ( class ?gen279 ) max_imprisonment_robbery_6 ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen282 (create$) ) ) ) ( not ( object ( name ?gen279 ) ( is-a max_imprisonment_robbery_6 ) ( negative-overruled $?gen284 & : ( eq $?gen284 ( create$ pen10-overruled $?gen282 $?gen283 ) ) ) ) ) ( test ( instance-existp ?gen279 ) ) => ( bind $?gen284 ( create$ pen10-overruled $?gen282 $?gen283 ) ) ( message-modify-instance ?gen279 ( negative-overruled $?gen284 ) ) )
( defrule pen10-support-gen420 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen10] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen278 ) ( is-a robbery_lv6 ) ( defendant ?Defendant ) ) ( object ( name ?gen279 ) ( is-a max_imprisonment_robbery_6 ) ( value 3 ) ( positive-support $?gen281 & : ( not ( subseq-pos ( create$ pen10 ?gen278 $$$ $?gen281 ) ) ) ) ) ( test ( eq ( class ?gen279 ) max_imprisonment_robbery_6 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen279 ) ( is-a max_imprisonment_robbery_6 ) ( positive-support $?gen284 & : ( eq $?gen284 ( create$ pen10 ?gen278 $?gen281 ) ) ) ) ) ( test ( instance-existp ?gen279 ) ) => ( bind $?gen284 ( create$ pen10 ?gen278 $?gen281 ) ) ( message-modify-instance ?gen279 ( positive-support $?gen284 ) ) )
( defrule pen9-defeasibly-dot-gen422 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen9] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen270 ) ( is-a max_imprisonment_robbery_5 ) ( value Forever ) ( positive 1 ) ( positive-derivator pen9 $? ) ) ( test ( eq ( class ?gen270 ) max_imprisonment_robbery_5 ) ) ( not ( and ( object ( name ?gen277 ) ( is-a robbery_lv5 ) ( defendant ?Defendant ) ( positive ?gen276 & : ( >= ?gen276 1 ) ) ) ( object ( name ?gen270 ) ( is-a max_imprisonment_robbery_5 ) ( negative ~ 2 ) ( positive-overruled $?gen272 & : ( not ( member$ pen9 $?gen272 ) ) ) ) ) )  ( not ( object ( name ?gen270 ) ( is-a max_imprisonment_robbery_5 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen270 ) ) => ( message-modify-instance ?gen270 ( positive 0 ) ) )
( defrule pen9-defeasibly-gen424 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen9] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen277 ) ( is-a robbery_lv5 ) ( defendant ?Defendant ) ( positive ?gen276 & : ( >= ?gen276 1 ) ) ) ( object ( name ?gen270 ) ( is-a max_imprisonment_robbery_5 ) ( value Forever ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen272 & : ( not ( member$ pen9 $?gen272 ) ) ) ) ( test ( eq ( class ?gen270 ) max_imprisonment_robbery_5 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen270 ) ( is-a max_imprisonment_robbery_5 ) ( positive 1 ) ( positive-derivator pen9 ?gen277 ) ) ) ( test ( instance-existp ?gen270 ) ) => ( message-modify-instance ?gen270 ( positive 1 ) ( positive-derivator pen9 ?gen277 ) ) )
( defrule pen9-overruled-dot-gen426 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen9] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen270 ) ( is-a max_imprisonment_robbery_5 ) ( value Forever ) ( negative-support $?gen273 ) ( negative-overruled $?gen274 & : ( subseq-pos ( create$ pen9-overruled $?gen273 $$$ $?gen274 ) ) ) ) ( test ( eq ( class ?gen270 ) max_imprisonment_robbery_5 ) ) ( not ( and ( object ( name ?gen277 ) ( is-a robbery_lv5 ) ( defendant ?Defendant ) ( positive ?gen276 & : ( >= ?gen276 1 ) ) ) ( object ( name ?gen270 ) ( is-a max_imprisonment_robbery_5 ) ( positive-defeated $?gen272 & : ( not ( member$ pen9 $?gen272 ) ) ) ) ) ) ( test ( neq $?gen273 (create$) ) ) ( not ( object ( name ?gen270 ) ( is-a max_imprisonment_robbery_5 ) ( negative-overruled $?gen275 & : ( eq $?gen275 ( delete-member$ $?gen274 ( create$ pen9-overruled $?gen273 ) ) ) ) ) ) ( test ( instance-existp ?gen270 ) ) => ( bind $?gen275 ( delete-member$ $?gen274 ( create$ pen9-overruled $?gen273 ) ) ) ( message-modify-instance ?gen270 ( negative-overruled $?gen275 ) ) )
( defrule pen9-overruled-gen428 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen9] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen277 ) ( is-a robbery_lv5 ) ( defendant ?Defendant ) ( positive ?gen276 & : ( >= ?gen276 1 ) ) ) ( object ( name ?gen270 ) ( is-a max_imprisonment_robbery_5 ) ( value Forever ) ( negative-support $?gen273 ) ( negative-overruled $?gen274 & : ( not ( subseq-pos ( create$ pen9-overruled $?gen273 $$$ $?gen274 ) ) ) ) ( positive-defeated $?gen272 & : ( not ( member$ pen9 $?gen272 ) ) ) ) ( test ( eq ( class ?gen270 ) max_imprisonment_robbery_5 ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen273 (create$) ) ) ) ( not ( object ( name ?gen270 ) ( is-a max_imprisonment_robbery_5 ) ( negative-overruled $?gen275 & : ( eq $?gen275 ( create$ pen9-overruled $?gen273 $?gen274 ) ) ) ) ) ( test ( instance-existp ?gen270 ) ) => ( bind $?gen275 ( create$ pen9-overruled $?gen273 $?gen274 ) ) ( message-modify-instance ?gen270 ( negative-overruled $?gen275 ) ) )
( defrule pen9-support-gen430 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen9] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen269 ) ( is-a robbery_lv5 ) ( defendant ?Defendant ) ) ( object ( name ?gen270 ) ( is-a max_imprisonment_robbery_5 ) ( value Forever ) ( positive-support $?gen272 & : ( not ( subseq-pos ( create$ pen9 ?gen269 $$$ $?gen272 ) ) ) ) ) ( test ( eq ( class ?gen270 ) max_imprisonment_robbery_5 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen270 ) ( is-a max_imprisonment_robbery_5 ) ( positive-support $?gen275 & : ( eq $?gen275 ( create$ pen9 ?gen269 $?gen272 ) ) ) ) ) ( test ( instance-existp ?gen270 ) ) => ( bind $?gen275 ( create$ pen9 ?gen269 $?gen272 ) ) ( message-modify-instance ?gen270 ( positive-support $?gen275 ) ) )
( defrule pen8-defeasibly-dot-gen432 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen8] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen261 ) ( is-a min_imprisonment_robbery_4 ) ( value 10 ) ( positive 1 ) ( positive-derivator pen8 $? ) ) ( test ( eq ( class ?gen261 ) min_imprisonment_robbery_4 ) ) ( not ( and ( object ( name ?gen268 ) ( is-a robbery_lv5 ) ( defendant ?Defendant ) ( positive ?gen267 & : ( >= ?gen267 1 ) ) ) ( object ( name ?gen261 ) ( is-a min_imprisonment_robbery_4 ) ( negative ~ 2 ) ( positive-overruled $?gen263 & : ( not ( member$ pen8 $?gen263 ) ) ) ) ) )  ( not ( object ( name ?gen261 ) ( is-a min_imprisonment_robbery_4 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen261 ) ) => ( message-modify-instance ?gen261 ( positive 0 ) ) )
( defrule pen8-defeasibly-gen434 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen8] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen268 ) ( is-a robbery_lv5 ) ( defendant ?Defendant ) ( positive ?gen267 & : ( >= ?gen267 1 ) ) ) ( object ( name ?gen261 ) ( is-a min_imprisonment_robbery_4 ) ( value 10 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen263 & : ( not ( member$ pen8 $?gen263 ) ) ) ) ( test ( eq ( class ?gen261 ) min_imprisonment_robbery_4 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen261 ) ( is-a min_imprisonment_robbery_4 ) ( positive 1 ) ( positive-derivator pen8 ?gen268 ) ) ) ( test ( instance-existp ?gen261 ) ) => ( message-modify-instance ?gen261 ( positive 1 ) ( positive-derivator pen8 ?gen268 ) ) )
( defrule pen8-overruled-dot-gen436 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen8] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen261 ) ( is-a min_imprisonment_robbery_4 ) ( value 10 ) ( negative-support $?gen264 ) ( negative-overruled $?gen265 & : ( subseq-pos ( create$ pen8-overruled $?gen264 $$$ $?gen265 ) ) ) ) ( test ( eq ( class ?gen261 ) min_imprisonment_robbery_4 ) ) ( not ( and ( object ( name ?gen268 ) ( is-a robbery_lv5 ) ( defendant ?Defendant ) ( positive ?gen267 & : ( >= ?gen267 1 ) ) ) ( object ( name ?gen261 ) ( is-a min_imprisonment_robbery_4 ) ( positive-defeated $?gen263 & : ( not ( member$ pen8 $?gen263 ) ) ) ) ) ) ( test ( neq $?gen264 (create$) ) ) ( not ( object ( name ?gen261 ) ( is-a min_imprisonment_robbery_4 ) ( negative-overruled $?gen266 & : ( eq $?gen266 ( delete-member$ $?gen265 ( create$ pen8-overruled $?gen264 ) ) ) ) ) ) ( test ( instance-existp ?gen261 ) ) => ( bind $?gen266 ( delete-member$ $?gen265 ( create$ pen8-overruled $?gen264 ) ) ) ( message-modify-instance ?gen261 ( negative-overruled $?gen266 ) ) )
( defrule pen8-overruled-gen438 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen8] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen268 ) ( is-a robbery_lv5 ) ( defendant ?Defendant ) ( positive ?gen267 & : ( >= ?gen267 1 ) ) ) ( object ( name ?gen261 ) ( is-a min_imprisonment_robbery_4 ) ( value 10 ) ( negative-support $?gen264 ) ( negative-overruled $?gen265 & : ( not ( subseq-pos ( create$ pen8-overruled $?gen264 $$$ $?gen265 ) ) ) ) ( positive-defeated $?gen263 & : ( not ( member$ pen8 $?gen263 ) ) ) ) ( test ( eq ( class ?gen261 ) min_imprisonment_robbery_4 ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen264 (create$) ) ) ) ( not ( object ( name ?gen261 ) ( is-a min_imprisonment_robbery_4 ) ( negative-overruled $?gen266 & : ( eq $?gen266 ( create$ pen8-overruled $?gen264 $?gen265 ) ) ) ) ) ( test ( instance-existp ?gen261 ) ) => ( bind $?gen266 ( create$ pen8-overruled $?gen264 $?gen265 ) ) ( message-modify-instance ?gen261 ( negative-overruled $?gen266 ) ) )
( defrule pen8-support-gen440 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen8] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen260 ) ( is-a robbery_lv5 ) ( defendant ?Defendant ) ) ( object ( name ?gen261 ) ( is-a min_imprisonment_robbery_4 ) ( value 10 ) ( positive-support $?gen263 & : ( not ( subseq-pos ( create$ pen8 ?gen260 $$$ $?gen263 ) ) ) ) ) ( test ( eq ( class ?gen261 ) min_imprisonment_robbery_4 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen261 ) ( is-a min_imprisonment_robbery_4 ) ( positive-support $?gen266 & : ( eq $?gen266 ( create$ pen8 ?gen260 $?gen263 ) ) ) ) ) ( test ( instance-existp ?gen261 ) ) => ( bind $?gen266 ( create$ pen8 ?gen260 $?gen263 ) ) ( message-modify-instance ?gen261 ( positive-support $?gen266 ) ) )
( defrule pen7-defeasibly-dot-gen442 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen252 ) ( is-a max_imprisonment_robbery_4 ) ( value 15 ) ( positive 1 ) ( positive-derivator pen7 $? ) ) ( test ( eq ( class ?gen252 ) max_imprisonment_robbery_4 ) ) ( not ( and ( object ( name ?gen259 ) ( is-a robbery_lv4 ) ( defendant ?Defendant ) ( positive ?gen258 & : ( >= ?gen258 1 ) ) ) ( object ( name ?gen252 ) ( is-a max_imprisonment_robbery_4 ) ( negative ~ 2 ) ( positive-overruled $?gen254 & : ( not ( member$ pen7 $?gen254 ) ) ) ) ) )  ( not ( object ( name ?gen252 ) ( is-a max_imprisonment_robbery_4 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen252 ) ) => ( message-modify-instance ?gen252 ( positive 0 ) ) )
( defrule pen7-defeasibly-gen444 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen259 ) ( is-a robbery_lv4 ) ( defendant ?Defendant ) ( positive ?gen258 & : ( >= ?gen258 1 ) ) ) ( object ( name ?gen252 ) ( is-a max_imprisonment_robbery_4 ) ( value 15 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen254 & : ( not ( member$ pen7 $?gen254 ) ) ) ) ( test ( eq ( class ?gen252 ) max_imprisonment_robbery_4 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen252 ) ( is-a max_imprisonment_robbery_4 ) ( positive 1 ) ( positive-derivator pen7 ?gen259 ) ) ) ( test ( instance-existp ?gen252 ) ) => ( message-modify-instance ?gen252 ( positive 1 ) ( positive-derivator pen7 ?gen259 ) ) )
( defrule pen7-overruled-dot-gen446 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen252 ) ( is-a max_imprisonment_robbery_4 ) ( value 15 ) ( negative-support $?gen255 ) ( negative-overruled $?gen256 & : ( subseq-pos ( create$ pen7-overruled $?gen255 $$$ $?gen256 ) ) ) ) ( test ( eq ( class ?gen252 ) max_imprisonment_robbery_4 ) ) ( not ( and ( object ( name ?gen259 ) ( is-a robbery_lv4 ) ( defendant ?Defendant ) ( positive ?gen258 & : ( >= ?gen258 1 ) ) ) ( object ( name ?gen252 ) ( is-a max_imprisonment_robbery_4 ) ( positive-defeated $?gen254 & : ( not ( member$ pen7 $?gen254 ) ) ) ) ) ) ( test ( neq $?gen255 (create$) ) ) ( not ( object ( name ?gen252 ) ( is-a max_imprisonment_robbery_4 ) ( negative-overruled $?gen257 & : ( eq $?gen257 ( delete-member$ $?gen256 ( create$ pen7-overruled $?gen255 ) ) ) ) ) ) ( test ( instance-existp ?gen252 ) ) => ( bind $?gen257 ( delete-member$ $?gen256 ( create$ pen7-overruled $?gen255 ) ) ) ( message-modify-instance ?gen252 ( negative-overruled $?gen257 ) ) )
( defrule pen7-overruled-gen448 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen259 ) ( is-a robbery_lv4 ) ( defendant ?Defendant ) ( positive ?gen258 & : ( >= ?gen258 1 ) ) ) ( object ( name ?gen252 ) ( is-a max_imprisonment_robbery_4 ) ( value 15 ) ( negative-support $?gen255 ) ( negative-overruled $?gen256 & : ( not ( subseq-pos ( create$ pen7-overruled $?gen255 $$$ $?gen256 ) ) ) ) ( positive-defeated $?gen254 & : ( not ( member$ pen7 $?gen254 ) ) ) ) ( test ( eq ( class ?gen252 ) max_imprisonment_robbery_4 ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen255 (create$) ) ) ) ( not ( object ( name ?gen252 ) ( is-a max_imprisonment_robbery_4 ) ( negative-overruled $?gen257 & : ( eq $?gen257 ( create$ pen7-overruled $?gen255 $?gen256 ) ) ) ) ) ( test ( instance-existp ?gen252 ) ) => ( bind $?gen257 ( create$ pen7-overruled $?gen255 $?gen256 ) ) ( message-modify-instance ?gen252 ( negative-overruled $?gen257 ) ) )
( defrule pen7-support-gen450 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen251 ) ( is-a robbery_lv4 ) ( defendant ?Defendant ) ) ( object ( name ?gen252 ) ( is-a max_imprisonment_robbery_4 ) ( value 15 ) ( positive-support $?gen254 & : ( not ( subseq-pos ( create$ pen7 ?gen251 $$$ $?gen254 ) ) ) ) ) ( test ( eq ( class ?gen252 ) max_imprisonment_robbery_4 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen252 ) ( is-a max_imprisonment_robbery_4 ) ( positive-support $?gen257 & : ( eq $?gen257 ( create$ pen7 ?gen251 $?gen254 ) ) ) ) ) ( test ( instance-existp ?gen252 ) ) => ( bind $?gen257 ( create$ pen7 ?gen251 $?gen254 ) ) ( message-modify-instance ?gen252 ( positive-support $?gen257 ) ) )
( defrule pen6-defeasibly-dot-gen452 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen6] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen243 ) ( is-a min_imprisonment_robbery_3 ) ( value 3 ) ( positive 1 ) ( positive-derivator pen6 $? ) ) ( test ( eq ( class ?gen243 ) min_imprisonment_robbery_3 ) ) ( not ( and ( object ( name ?gen250 ) ( is-a robbery_lv4 ) ( defendant ?Defendant ) ( positive ?gen249 & : ( >= ?gen249 1 ) ) ) ( object ( name ?gen243 ) ( is-a min_imprisonment_robbery_3 ) ( negative ~ 2 ) ( positive-overruled $?gen245 & : ( not ( member$ pen6 $?gen245 ) ) ) ) ) )  ( not ( object ( name ?gen243 ) ( is-a min_imprisonment_robbery_3 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen243 ) ) => ( message-modify-instance ?gen243 ( positive 0 ) ) )
( defrule pen6-defeasibly-gen454 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen6] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen250 ) ( is-a robbery_lv4 ) ( defendant ?Defendant ) ( positive ?gen249 & : ( >= ?gen249 1 ) ) ) ( object ( name ?gen243 ) ( is-a min_imprisonment_robbery_3 ) ( value 3 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen245 & : ( not ( member$ pen6 $?gen245 ) ) ) ) ( test ( eq ( class ?gen243 ) min_imprisonment_robbery_3 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen243 ) ( is-a min_imprisonment_robbery_3 ) ( positive 1 ) ( positive-derivator pen6 ?gen250 ) ) ) ( test ( instance-existp ?gen243 ) ) => ( message-modify-instance ?gen243 ( positive 1 ) ( positive-derivator pen6 ?gen250 ) ) )
( defrule pen6-overruled-dot-gen456 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen6] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen243 ) ( is-a min_imprisonment_robbery_3 ) ( value 3 ) ( negative-support $?gen246 ) ( negative-overruled $?gen247 & : ( subseq-pos ( create$ pen6-overruled $?gen246 $$$ $?gen247 ) ) ) ) ( test ( eq ( class ?gen243 ) min_imprisonment_robbery_3 ) ) ( not ( and ( object ( name ?gen250 ) ( is-a robbery_lv4 ) ( defendant ?Defendant ) ( positive ?gen249 & : ( >= ?gen249 1 ) ) ) ( object ( name ?gen243 ) ( is-a min_imprisonment_robbery_3 ) ( positive-defeated $?gen245 & : ( not ( member$ pen6 $?gen245 ) ) ) ) ) ) ( test ( neq $?gen246 (create$) ) ) ( not ( object ( name ?gen243 ) ( is-a min_imprisonment_robbery_3 ) ( negative-overruled $?gen248 & : ( eq $?gen248 ( delete-member$ $?gen247 ( create$ pen6-overruled $?gen246 ) ) ) ) ) ) ( test ( instance-existp ?gen243 ) ) => ( bind $?gen248 ( delete-member$ $?gen247 ( create$ pen6-overruled $?gen246 ) ) ) ( message-modify-instance ?gen243 ( negative-overruled $?gen248 ) ) )
( defrule pen6-overruled-gen458 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen6] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen250 ) ( is-a robbery_lv4 ) ( defendant ?Defendant ) ( positive ?gen249 & : ( >= ?gen249 1 ) ) ) ( object ( name ?gen243 ) ( is-a min_imprisonment_robbery_3 ) ( value 3 ) ( negative-support $?gen246 ) ( negative-overruled $?gen247 & : ( not ( subseq-pos ( create$ pen6-overruled $?gen246 $$$ $?gen247 ) ) ) ) ( positive-defeated $?gen245 & : ( not ( member$ pen6 $?gen245 ) ) ) ) ( test ( eq ( class ?gen243 ) min_imprisonment_robbery_3 ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen246 (create$) ) ) ) ( not ( object ( name ?gen243 ) ( is-a min_imprisonment_robbery_3 ) ( negative-overruled $?gen248 & : ( eq $?gen248 ( create$ pen6-overruled $?gen246 $?gen247 ) ) ) ) ) ( test ( instance-existp ?gen243 ) ) => ( bind $?gen248 ( create$ pen6-overruled $?gen246 $?gen247 ) ) ( message-modify-instance ?gen243 ( negative-overruled $?gen248 ) ) )
( defrule pen6-support-gen460 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen6] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen242 ) ( is-a robbery_lv4 ) ( defendant ?Defendant ) ) ( object ( name ?gen243 ) ( is-a min_imprisonment_robbery_3 ) ( value 3 ) ( positive-support $?gen245 & : ( not ( subseq-pos ( create$ pen6 ?gen242 $$$ $?gen245 ) ) ) ) ) ( test ( eq ( class ?gen243 ) min_imprisonment_robbery_3 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen243 ) ( is-a min_imprisonment_robbery_3 ) ( positive-support $?gen248 & : ( eq $?gen248 ( create$ pen6 ?gen242 $?gen245 ) ) ) ) ) ( test ( instance-existp ?gen243 ) ) => ( bind $?gen248 ( create$ pen6 ?gen242 $?gen245 ) ) ( message-modify-instance ?gen243 ( positive-support $?gen248 ) ) )
( defrule pen5-defeasibly-dot-gen462 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen5] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen234 ) ( is-a max_imprisonment_robbery_3 ) ( value 12 ) ( positive 1 ) ( positive-derivator pen5 $? ) ) ( test ( eq ( class ?gen234 ) max_imprisonment_robbery_3 ) ) ( not ( and ( object ( name ?gen241 ) ( is-a robbery_lv3 ) ( defendant ?Defendant ) ( positive ?gen240 & : ( >= ?gen240 1 ) ) ) ( object ( name ?gen234 ) ( is-a max_imprisonment_robbery_3 ) ( negative ~ 2 ) ( positive-overruled $?gen236 & : ( not ( member$ pen5 $?gen236 ) ) ) ) ) )  ( not ( object ( name ?gen234 ) ( is-a max_imprisonment_robbery_3 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen234 ) ) => ( message-modify-instance ?gen234 ( positive 0 ) ) )
( defrule pen5-defeasibly-gen464 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen5] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen241 ) ( is-a robbery_lv3 ) ( defendant ?Defendant ) ( positive ?gen240 & : ( >= ?gen240 1 ) ) ) ( object ( name ?gen234 ) ( is-a max_imprisonment_robbery_3 ) ( value 12 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen236 & : ( not ( member$ pen5 $?gen236 ) ) ) ) ( test ( eq ( class ?gen234 ) max_imprisonment_robbery_3 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen234 ) ( is-a max_imprisonment_robbery_3 ) ( positive 1 ) ( positive-derivator pen5 ?gen241 ) ) ) ( test ( instance-existp ?gen234 ) ) => ( message-modify-instance ?gen234 ( positive 1 ) ( positive-derivator pen5 ?gen241 ) ) )
( defrule pen5-overruled-dot-gen466 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen5] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen234 ) ( is-a max_imprisonment_robbery_3 ) ( value 12 ) ( negative-support $?gen237 ) ( negative-overruled $?gen238 & : ( subseq-pos ( create$ pen5-overruled $?gen237 $$$ $?gen238 ) ) ) ) ( test ( eq ( class ?gen234 ) max_imprisonment_robbery_3 ) ) ( not ( and ( object ( name ?gen241 ) ( is-a robbery_lv3 ) ( defendant ?Defendant ) ( positive ?gen240 & : ( >= ?gen240 1 ) ) ) ( object ( name ?gen234 ) ( is-a max_imprisonment_robbery_3 ) ( positive-defeated $?gen236 & : ( not ( member$ pen5 $?gen236 ) ) ) ) ) ) ( test ( neq $?gen237 (create$) ) ) ( not ( object ( name ?gen234 ) ( is-a max_imprisonment_robbery_3 ) ( negative-overruled $?gen239 & : ( eq $?gen239 ( delete-member$ $?gen238 ( create$ pen5-overruled $?gen237 ) ) ) ) ) ) ( test ( instance-existp ?gen234 ) ) => ( bind $?gen239 ( delete-member$ $?gen238 ( create$ pen5-overruled $?gen237 ) ) ) ( message-modify-instance ?gen234 ( negative-overruled $?gen239 ) ) )
( defrule pen5-overruled-gen468 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen5] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen241 ) ( is-a robbery_lv3 ) ( defendant ?Defendant ) ( positive ?gen240 & : ( >= ?gen240 1 ) ) ) ( object ( name ?gen234 ) ( is-a max_imprisonment_robbery_3 ) ( value 12 ) ( negative-support $?gen237 ) ( negative-overruled $?gen238 & : ( not ( subseq-pos ( create$ pen5-overruled $?gen237 $$$ $?gen238 ) ) ) ) ( positive-defeated $?gen236 & : ( not ( member$ pen5 $?gen236 ) ) ) ) ( test ( eq ( class ?gen234 ) max_imprisonment_robbery_3 ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen237 (create$) ) ) ) ( not ( object ( name ?gen234 ) ( is-a max_imprisonment_robbery_3 ) ( negative-overruled $?gen239 & : ( eq $?gen239 ( create$ pen5-overruled $?gen237 $?gen238 ) ) ) ) ) ( test ( instance-existp ?gen234 ) ) => ( bind $?gen239 ( create$ pen5-overruled $?gen237 $?gen238 ) ) ( message-modify-instance ?gen234 ( negative-overruled $?gen239 ) ) )
( defrule pen5-support-gen470 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen5] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen233 ) ( is-a robbery_lv3 ) ( defendant ?Defendant ) ) ( object ( name ?gen234 ) ( is-a max_imprisonment_robbery_3 ) ( value 12 ) ( positive-support $?gen236 & : ( not ( subseq-pos ( create$ pen5 ?gen233 $$$ $?gen236 ) ) ) ) ) ( test ( eq ( class ?gen234 ) max_imprisonment_robbery_3 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen234 ) ( is-a max_imprisonment_robbery_3 ) ( positive-support $?gen239 & : ( eq $?gen239 ( create$ pen5 ?gen233 $?gen236 ) ) ) ) ) ( test ( instance-existp ?gen234 ) ) => ( bind $?gen239 ( create$ pen5 ?gen233 $?gen236 ) ) ( message-modify-instance ?gen234 ( positive-support $?gen239 ) ) )
( defrule pen4-defeasibly-dot-gen472 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen225 ) ( is-a max_imprisonment_robbery_2 ) ( value 10 ) ( positive 1 ) ( positive-derivator pen4 $? ) ) ( test ( eq ( class ?gen225 ) max_imprisonment_robbery_2 ) ) ( not ( and ( object ( name ?gen232 ) ( is-a robbery_lv2 ) ( defendant ?Defendant ) ( positive ?gen231 & : ( >= ?gen231 1 ) ) ) ( object ( name ?gen225 ) ( is-a max_imprisonment_robbery_2 ) ( negative ~ 2 ) ( positive-overruled $?gen227 & : ( not ( member$ pen4 $?gen227 ) ) ) ) ) )  ( not ( object ( name ?gen225 ) ( is-a max_imprisonment_robbery_2 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen225 ) ) => ( message-modify-instance ?gen225 ( positive 0 ) ) )
( defrule pen4-defeasibly-gen474 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen232 ) ( is-a robbery_lv2 ) ( defendant ?Defendant ) ( positive ?gen231 & : ( >= ?gen231 1 ) ) ) ( object ( name ?gen225 ) ( is-a max_imprisonment_robbery_2 ) ( value 10 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen227 & : ( not ( member$ pen4 $?gen227 ) ) ) ) ( test ( eq ( class ?gen225 ) max_imprisonment_robbery_2 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen225 ) ( is-a max_imprisonment_robbery_2 ) ( positive 1 ) ( positive-derivator pen4 ?gen232 ) ) ) ( test ( instance-existp ?gen225 ) ) => ( message-modify-instance ?gen225 ( positive 1 ) ( positive-derivator pen4 ?gen232 ) ) )
( defrule pen4-overruled-dot-gen476 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen225 ) ( is-a max_imprisonment_robbery_2 ) ( value 10 ) ( negative-support $?gen228 ) ( negative-overruled $?gen229 & : ( subseq-pos ( create$ pen4-overruled $?gen228 $$$ $?gen229 ) ) ) ) ( test ( eq ( class ?gen225 ) max_imprisonment_robbery_2 ) ) ( not ( and ( object ( name ?gen232 ) ( is-a robbery_lv2 ) ( defendant ?Defendant ) ( positive ?gen231 & : ( >= ?gen231 1 ) ) ) ( object ( name ?gen225 ) ( is-a max_imprisonment_robbery_2 ) ( positive-defeated $?gen227 & : ( not ( member$ pen4 $?gen227 ) ) ) ) ) ) ( test ( neq $?gen228 (create$) ) ) ( not ( object ( name ?gen225 ) ( is-a max_imprisonment_robbery_2 ) ( negative-overruled $?gen230 & : ( eq $?gen230 ( delete-member$ $?gen229 ( create$ pen4-overruled $?gen228 ) ) ) ) ) ) ( test ( instance-existp ?gen225 ) ) => ( bind $?gen230 ( delete-member$ $?gen229 ( create$ pen4-overruled $?gen228 ) ) ) ( message-modify-instance ?gen225 ( negative-overruled $?gen230 ) ) )
( defrule pen4-overruled-gen478 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen232 ) ( is-a robbery_lv2 ) ( defendant ?Defendant ) ( positive ?gen231 & : ( >= ?gen231 1 ) ) ) ( object ( name ?gen225 ) ( is-a max_imprisonment_robbery_2 ) ( value 10 ) ( negative-support $?gen228 ) ( negative-overruled $?gen229 & : ( not ( subseq-pos ( create$ pen4-overruled $?gen228 $$$ $?gen229 ) ) ) ) ( positive-defeated $?gen227 & : ( not ( member$ pen4 $?gen227 ) ) ) ) ( test ( eq ( class ?gen225 ) max_imprisonment_robbery_2 ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen228 (create$) ) ) ) ( not ( object ( name ?gen225 ) ( is-a max_imprisonment_robbery_2 ) ( negative-overruled $?gen230 & : ( eq $?gen230 ( create$ pen4-overruled $?gen228 $?gen229 ) ) ) ) ) ( test ( instance-existp ?gen225 ) ) => ( bind $?gen230 ( create$ pen4-overruled $?gen228 $?gen229 ) ) ( message-modify-instance ?gen225 ( negative-overruled $?gen230 ) ) )
( defrule pen4-support-gen480 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen224 ) ( is-a robbery_lv2 ) ( defendant ?Defendant ) ) ( object ( name ?gen225 ) ( is-a max_imprisonment_robbery_2 ) ( value 10 ) ( positive-support $?gen227 & : ( not ( subseq-pos ( create$ pen4 ?gen224 $$$ $?gen227 ) ) ) ) ) ( test ( eq ( class ?gen225 ) max_imprisonment_robbery_2 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen225 ) ( is-a max_imprisonment_robbery_2 ) ( positive-support $?gen230 & : ( eq $?gen230 ( create$ pen4 ?gen224 $?gen227 ) ) ) ) ) ( test ( instance-existp ?gen225 ) ) => ( bind $?gen230 ( create$ pen4 ?gen224 $?gen227 ) ) ( message-modify-instance ?gen225 ( positive-support $?gen230 ) ) )
( defrule pen3-defeasibly-dot-gen482 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen3] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen216 ) ( is-a min_imprisonment_robbery_2 ) ( value 2 ) ( positive 1 ) ( positive-derivator pen3 $? ) ) ( test ( eq ( class ?gen216 ) min_imprisonment_robbery_2 ) ) ( not ( and ( object ( name ?gen223 ) ( is-a robbery_min_imprisonment_lv2_3 ) ( defendant ?Defendant ) ( positive ?gen222 & : ( >= ?gen222 1 ) ) ) ( object ( name ?gen216 ) ( is-a min_imprisonment_robbery_2 ) ( negative ~ 2 ) ( positive-overruled $?gen218 & : ( not ( member$ pen3 $?gen218 ) ) ) ) ) )  ( not ( object ( name ?gen216 ) ( is-a min_imprisonment_robbery_2 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen216 ) ) => ( message-modify-instance ?gen216 ( positive 0 ) ) )
( defrule pen3-defeasibly-gen484 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen3] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen223 ) ( is-a robbery_min_imprisonment_lv2_3 ) ( defendant ?Defendant ) ( positive ?gen222 & : ( >= ?gen222 1 ) ) ) ( object ( name ?gen216 ) ( is-a min_imprisonment_robbery_2 ) ( value 2 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen218 & : ( not ( member$ pen3 $?gen218 ) ) ) ) ( test ( eq ( class ?gen216 ) min_imprisonment_robbery_2 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen216 ) ( is-a min_imprisonment_robbery_2 ) ( positive 1 ) ( positive-derivator pen3 ?gen223 ) ) ) ( test ( instance-existp ?gen216 ) ) => ( message-modify-instance ?gen216 ( positive 1 ) ( positive-derivator pen3 ?gen223 ) ) )
( defrule pen3-overruled-dot-gen486 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen3] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen216 ) ( is-a min_imprisonment_robbery_2 ) ( value 2 ) ( negative-support $?gen219 ) ( negative-overruled $?gen220 & : ( subseq-pos ( create$ pen3-overruled $?gen219 $$$ $?gen220 ) ) ) ) ( test ( eq ( class ?gen216 ) min_imprisonment_robbery_2 ) ) ( not ( and ( object ( name ?gen223 ) ( is-a robbery_min_imprisonment_lv2_3 ) ( defendant ?Defendant ) ( positive ?gen222 & : ( >= ?gen222 1 ) ) ) ( object ( name ?gen216 ) ( is-a min_imprisonment_robbery_2 ) ( positive-defeated $?gen218 & : ( not ( member$ pen3 $?gen218 ) ) ) ) ) ) ( test ( neq $?gen219 (create$) ) ) ( not ( object ( name ?gen216 ) ( is-a min_imprisonment_robbery_2 ) ( negative-overruled $?gen221 & : ( eq $?gen221 ( delete-member$ $?gen220 ( create$ pen3-overruled $?gen219 ) ) ) ) ) ) ( test ( instance-existp ?gen216 ) ) => ( bind $?gen221 ( delete-member$ $?gen220 ( create$ pen3-overruled $?gen219 ) ) ) ( message-modify-instance ?gen216 ( negative-overruled $?gen221 ) ) )
( defrule pen3-overruled-gen488 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen3] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen223 ) ( is-a robbery_min_imprisonment_lv2_3 ) ( defendant ?Defendant ) ( positive ?gen222 & : ( >= ?gen222 1 ) ) ) ( object ( name ?gen216 ) ( is-a min_imprisonment_robbery_2 ) ( value 2 ) ( negative-support $?gen219 ) ( negative-overruled $?gen220 & : ( not ( subseq-pos ( create$ pen3-overruled $?gen219 $$$ $?gen220 ) ) ) ) ( positive-defeated $?gen218 & : ( not ( member$ pen3 $?gen218 ) ) ) ) ( test ( eq ( class ?gen216 ) min_imprisonment_robbery_2 ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen219 (create$) ) ) ) ( not ( object ( name ?gen216 ) ( is-a min_imprisonment_robbery_2 ) ( negative-overruled $?gen221 & : ( eq $?gen221 ( create$ pen3-overruled $?gen219 $?gen220 ) ) ) ) ) ( test ( instance-existp ?gen216 ) ) => ( bind $?gen221 ( create$ pen3-overruled $?gen219 $?gen220 ) ) ( message-modify-instance ?gen216 ( negative-overruled $?gen221 ) ) )
( defrule pen3-support-gen490 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen3] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen215 ) ( is-a robbery_min_imprisonment_lv2_3 ) ( defendant ?Defendant ) ) ( object ( name ?gen216 ) ( is-a min_imprisonment_robbery_2 ) ( value 2 ) ( positive-support $?gen218 & : ( not ( subseq-pos ( create$ pen3 ?gen215 $$$ $?gen218 ) ) ) ) ) ( test ( eq ( class ?gen216 ) min_imprisonment_robbery_2 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen216 ) ( is-a min_imprisonment_robbery_2 ) ( positive-support $?gen221 & : ( eq $?gen221 ( create$ pen3 ?gen215 $?gen218 ) ) ) ) ) ( test ( instance-existp ?gen216 ) ) => ( bind $?gen221 ( create$ pen3 ?gen215 $?gen218 ) ) ( message-modify-instance ?gen216 ( positive-support $?gen221 ) ) )
( defrule pen2-defeasibly-dot-gen492 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen207 ) ( is-a max_imprisonment_robbery_1 ) ( value 8 ) ( positive 1 ) ( positive-derivator pen2 $? ) ) ( test ( eq ( class ?gen207 ) max_imprisonment_robbery_1 ) ) ( not ( and ( object ( name ?gen214 ) ( is-a robbery_lv1 ) ( defendant ?Defendant ) ( positive ?gen213 & : ( >= ?gen213 1 ) ) ) ( object ( name ?gen207 ) ( is-a max_imprisonment_robbery_1 ) ( negative ~ 2 ) ( positive-overruled $?gen209 & : ( not ( member$ pen2 $?gen209 ) ) ) ) ) )  ( not ( object ( name ?gen207 ) ( is-a max_imprisonment_robbery_1 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen207 ) ) => ( message-modify-instance ?gen207 ( positive 0 ) ) )
( defrule pen2-defeasibly-gen494 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen214 ) ( is-a robbery_lv1 ) ( defendant ?Defendant ) ( positive ?gen213 & : ( >= ?gen213 1 ) ) ) ( object ( name ?gen207 ) ( is-a max_imprisonment_robbery_1 ) ( value 8 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen209 & : ( not ( member$ pen2 $?gen209 ) ) ) ) ( test ( eq ( class ?gen207 ) max_imprisonment_robbery_1 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen207 ) ( is-a max_imprisonment_robbery_1 ) ( positive 1 ) ( positive-derivator pen2 ?gen214 ) ) ) ( test ( instance-existp ?gen207 ) ) => ( message-modify-instance ?gen207 ( positive 1 ) ( positive-derivator pen2 ?gen214 ) ) )
( defrule pen2-overruled-dot-gen496 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen207 ) ( is-a max_imprisonment_robbery_1 ) ( value 8 ) ( negative-support $?gen210 ) ( negative-overruled $?gen211 & : ( subseq-pos ( create$ pen2-overruled $?gen210 $$$ $?gen211 ) ) ) ) ( test ( eq ( class ?gen207 ) max_imprisonment_robbery_1 ) ) ( not ( and ( object ( name ?gen214 ) ( is-a robbery_lv1 ) ( defendant ?Defendant ) ( positive ?gen213 & : ( >= ?gen213 1 ) ) ) ( object ( name ?gen207 ) ( is-a max_imprisonment_robbery_1 ) ( positive-defeated $?gen209 & : ( not ( member$ pen2 $?gen209 ) ) ) ) ) ) ( test ( neq $?gen210 (create$) ) ) ( not ( object ( name ?gen207 ) ( is-a max_imprisonment_robbery_1 ) ( negative-overruled $?gen212 & : ( eq $?gen212 ( delete-member$ $?gen211 ( create$ pen2-overruled $?gen210 ) ) ) ) ) ) ( test ( instance-existp ?gen207 ) ) => ( bind $?gen212 ( delete-member$ $?gen211 ( create$ pen2-overruled $?gen210 ) ) ) ( message-modify-instance ?gen207 ( negative-overruled $?gen212 ) ) )
( defrule pen2-overruled-gen498 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen214 ) ( is-a robbery_lv1 ) ( defendant ?Defendant ) ( positive ?gen213 & : ( >= ?gen213 1 ) ) ) ( object ( name ?gen207 ) ( is-a max_imprisonment_robbery_1 ) ( value 8 ) ( negative-support $?gen210 ) ( negative-overruled $?gen211 & : ( not ( subseq-pos ( create$ pen2-overruled $?gen210 $$$ $?gen211 ) ) ) ) ( positive-defeated $?gen209 & : ( not ( member$ pen2 $?gen209 ) ) ) ) ( test ( eq ( class ?gen207 ) max_imprisonment_robbery_1 ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen210 (create$) ) ) ) ( not ( object ( name ?gen207 ) ( is-a max_imprisonment_robbery_1 ) ( negative-overruled $?gen212 & : ( eq $?gen212 ( create$ pen2-overruled $?gen210 $?gen211 ) ) ) ) ) ( test ( instance-existp ?gen207 ) ) => ( bind $?gen212 ( create$ pen2-overruled $?gen210 $?gen211 ) ) ( message-modify-instance ?gen207 ( negative-overruled $?gen212 ) ) )
( defrule pen2-support-gen500 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen206 ) ( is-a robbery_lv1 ) ( defendant ?Defendant ) ) ( object ( name ?gen207 ) ( is-a max_imprisonment_robbery_1 ) ( value 8 ) ( positive-support $?gen209 & : ( not ( subseq-pos ( create$ pen2 ?gen206 $$$ $?gen209 ) ) ) ) ) ( test ( eq ( class ?gen207 ) max_imprisonment_robbery_1 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen207 ) ( is-a max_imprisonment_robbery_1 ) ( positive-support $?gen212 & : ( eq $?gen212 ( create$ pen2 ?gen206 $?gen209 ) ) ) ) ) ( test ( instance-existp ?gen207 ) ) => ( bind $?gen212 ( create$ pen2 ?gen206 $?gen209 ) ) ( message-modify-instance ?gen207 ( positive-support $?gen212 ) ) )
( defrule pen1-defeasibly-dot-gen502 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [pen1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen198 ) ( is-a min_imprisonment_robbery_1 ) ( value 1 ) ( positive 1 ) ( positive-derivator pen1 $? ) ) ( test ( eq ( class ?gen198 ) min_imprisonment_robbery_1 ) ) ( not ( and ( object ( name ?gen205 ) ( is-a robbery_lv1 ) ( defendant ?Defendant ) ( positive ?gen204 & : ( >= ?gen204 1 ) ) ) ( object ( name ?gen198 ) ( is-a min_imprisonment_robbery_1 ) ( negative ~ 2 ) ( positive-overruled $?gen200 & : ( not ( member$ pen1 $?gen200 ) ) ) ) ) )  ( not ( object ( name ?gen198 ) ( is-a min_imprisonment_robbery_1 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen198 ) ) => ( message-modify-instance ?gen198 ( positive 0 ) ) )
( defrule pen1-defeasibly-gen504 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [pen1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen205 ) ( is-a robbery_lv1 ) ( defendant ?Defendant ) ( positive ?gen204 & : ( >= ?gen204 1 ) ) ) ( object ( name ?gen198 ) ( is-a min_imprisonment_robbery_1 ) ( value 1 ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen200 & : ( not ( member$ pen1 $?gen200 ) ) ) ) ( test ( eq ( class ?gen198 ) min_imprisonment_robbery_1 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen198 ) ( is-a min_imprisonment_robbery_1 ) ( positive 1 ) ( positive-derivator pen1 ?gen205 ) ) ) ( test ( instance-existp ?gen198 ) ) => ( message-modify-instance ?gen198 ( positive 1 ) ( positive-derivator pen1 ?gen205 ) ) )
( defrule pen1-overruled-dot-gen506 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [pen1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen198 ) ( is-a min_imprisonment_robbery_1 ) ( value 1 ) ( negative-support $?gen201 ) ( negative-overruled $?gen202 & : ( subseq-pos ( create$ pen1-overruled $?gen201 $$$ $?gen202 ) ) ) ) ( test ( eq ( class ?gen198 ) min_imprisonment_robbery_1 ) ) ( not ( and ( object ( name ?gen205 ) ( is-a robbery_lv1 ) ( defendant ?Defendant ) ( positive ?gen204 & : ( >= ?gen204 1 ) ) ) ( object ( name ?gen198 ) ( is-a min_imprisonment_robbery_1 ) ( positive-defeated $?gen200 & : ( not ( member$ pen1 $?gen200 ) ) ) ) ) ) ( test ( neq $?gen201 (create$) ) ) ( not ( object ( name ?gen198 ) ( is-a min_imprisonment_robbery_1 ) ( negative-overruled $?gen203 & : ( eq $?gen203 ( delete-member$ $?gen202 ( create$ pen1-overruled $?gen201 ) ) ) ) ) ) ( test ( instance-existp ?gen198 ) ) => ( bind $?gen203 ( delete-member$ $?gen202 ( create$ pen1-overruled $?gen201 ) ) ) ( message-modify-instance ?gen198 ( negative-overruled $?gen203 ) ) )
( defrule pen1-overruled-gen508 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [pen1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen205 ) ( is-a robbery_lv1 ) ( defendant ?Defendant ) ( positive ?gen204 & : ( >= ?gen204 1 ) ) ) ( object ( name ?gen198 ) ( is-a min_imprisonment_robbery_1 ) ( value 1 ) ( negative-support $?gen201 ) ( negative-overruled $?gen202 & : ( not ( subseq-pos ( create$ pen1-overruled $?gen201 $$$ $?gen202 ) ) ) ) ( positive-defeated $?gen200 & : ( not ( member$ pen1 $?gen200 ) ) ) ) ( test ( eq ( class ?gen198 ) min_imprisonment_robbery_1 ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen201 (create$) ) ) ) ( not ( object ( name ?gen198 ) ( is-a min_imprisonment_robbery_1 ) ( negative-overruled $?gen203 & : ( eq $?gen203 ( create$ pen1-overruled $?gen201 $?gen202 ) ) ) ) ) ( test ( instance-existp ?gen198 ) ) => ( bind $?gen203 ( create$ pen1-overruled $?gen201 $?gen202 ) ) ( message-modify-instance ?gen198 ( negative-overruled $?gen203 ) ) )
( defrule pen1-support-gen510 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [pen1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen197 ) ( is-a robbery_lv1 ) ( defendant ?Defendant ) ) ( object ( name ?gen198 ) ( is-a min_imprisonment_robbery_1 ) ( value 1 ) ( positive-support $?gen200 & : ( not ( subseq-pos ( create$ pen1 ?gen197 $$$ $?gen200 ) ) ) ) ) ( test ( eq ( class ?gen198 ) min_imprisonment_robbery_1 ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen198 ) ( is-a min_imprisonment_robbery_1 ) ( positive-support $?gen203 & : ( eq $?gen203 ( create$ pen1 ?gen197 $?gen200 ) ) ) ) ) ( test ( instance-existp ?gen198 ) ) => ( bind $?gen203 ( create$ pen1 ?gen197 $?gen200 ) ) ( message-modify-instance ?gen198 ( positive-support $?gen203 ) ) )
( defrule rule15-defeasibly-dot-gen512 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule15] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen189 ) ( is-a competition_outcome_arrangement_lv1 ) ( defendant ?Defendant ) ( negative 1 ) ( negative-derivator rule15 $? ) ) ( test ( eq ( class ?gen189 ) competition_outcome_arrangement_lv1 ) ) ( not ( and ( object ( name ?gen196 ) ( is-a competition_outcome_arrangement_lv3 ) ( defendant ?Defendant ) ( positive ?gen195 & : ( >= ?gen195 1 ) ) ) ( object ( name ?gen189 ) ( is-a competition_outcome_arrangement_lv1 ) ( positive ~ 2 ) ( negative-overruled $?gen191 & : ( not ( member$ rule15 $?gen191 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen189 ) ( is-a competition_outcome_arrangement_lv1 ) ( negative 0 ) ) ) ( test ( instance-existp ?gen189 ) ) => ( message-modify-instance ?gen189 ( negative 0 ) ) )
( defrule rule15-defeasibly-gen514 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule15] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen196 ) ( is-a competition_outcome_arrangement_lv3 ) ( defendant ?Defendant ) ( positive ?gen195 & : ( >= ?gen195 1 ) ) ) ( object ( name ?gen189 ) ( is-a competition_outcome_arrangement_lv1 ) ( defendant ?Defendant ) ( negative 0 ) ( positive ~ 2 ) ( negative-overruled $?gen191 & : ( not ( member$ rule15 $?gen191 ) ) ) ) ( test ( eq ( class ?gen189 ) competition_outcome_arrangement_lv1 ) ) ( test ( and ( neq ?Defendant nil ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen189 ) ( is-a competition_outcome_arrangement_lv1 ) ( negative 1 ) ( negative-derivator rule15 ?gen196 ) ) ) ( test ( instance-existp ?gen189 ) ) => ( message-modify-instance ?gen189 ( negative 1 ) ( negative-derivator rule15 ?gen196 ) ) )
( defrule rule15-overruled-dot-gen516 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule15] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen189 ) ( is-a competition_outcome_arrangement_lv1 ) ( defendant ?Defendant ) ( positive-support $?gen192 ) ( positive-overruled $?gen193 & : ( subseq-pos ( create$ rule15-overruled $?gen192 $$$ $?gen193 ) ) ) ) ( test ( eq ( class ?gen189 ) competition_outcome_arrangement_lv1 ) ) ( not ( and ( object ( name ?gen196 ) ( is-a competition_outcome_arrangement_lv3 ) ( defendant ?Defendant ) ( positive ?gen195 & : ( >= ?gen195 1 ) ) ) ( object ( name ?gen189 ) ( is-a competition_outcome_arrangement_lv1 ) ( negative-defeated $?gen191 & : ( not ( member$ rule15 $?gen191 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen192 (create$) ) ) ) ( not ( object ( name ?gen189 ) ( is-a competition_outcome_arrangement_lv1 ) ( positive-overruled $?gen194 & : ( eq $?gen194 ( delete-member$ $?gen193 ( create$ rule15-overruled $?gen192 ) ) ) ) ) ) ( test ( instance-existp ?gen189 ) ) => ( bind $?gen194 ( delete-member$ $?gen193 ( create$ rule15-overruled $?gen192 ) ) ) ( message-modify-instance ?gen189 ( positive-overruled $?gen194 ) ) )
( defrule rule15-overruled-gen518 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule15] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen196 ) ( is-a competition_outcome_arrangement_lv3 ) ( defendant ?Defendant ) ( positive ?gen195 & : ( >= ?gen195 1 ) ) ) ( object ( name ?gen189 ) ( is-a competition_outcome_arrangement_lv1 ) ( defendant ?Defendant ) ( positive-support $?gen192 ) ( positive-overruled $?gen193 & : ( not ( subseq-pos ( create$ rule15-overruled $?gen192 $$$ $?gen193 ) ) ) ) ( negative-defeated $?gen191 & : ( not ( member$ rule15 $?gen191 ) ) ) ) ( test ( eq ( class ?gen189 ) competition_outcome_arrangement_lv1 ) ) ( test ( and ( neq ?Defendant nil ) ( neq ?Defendant nil ) ( neq $?gen192 (create$) ) ) ) ( not ( object ( name ?gen189 ) ( is-a competition_outcome_arrangement_lv1 ) ( positive-overruled $?gen194 & : ( eq $?gen194 ( create$ rule15-overruled $?gen192 $?gen193 ) ) ) ) ) ( test ( instance-existp ?gen189 ) ) => ( bind $?gen194 ( create$ rule15-overruled $?gen192 $?gen193 ) ) ( message-modify-instance ?gen189 ( positive-overruled $?gen194 ) ) )
( defrule rule15-support-gen520 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule15] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen188 ) ( is-a competition_outcome_arrangement_lv3 ) ( defendant ?Defendant ) ) ( object ( name ?gen189 ) ( is-a competition_outcome_arrangement_lv1 ) ( defendant ?Defendant ) ( negative-support $?gen191 & : ( not ( subseq-pos ( create$ rule15 ?gen188 $$$ $?gen191 ) ) ) ) ) ( test ( eq ( class ?gen189 ) competition_outcome_arrangement_lv1 ) ) ( test ( and ( neq ?Defendant nil ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen189 ) ( is-a competition_outcome_arrangement_lv1 ) ( negative-support $?gen194 & : ( eq $?gen194 ( create$ rule15 ?gen188 $?gen191 ) ) ) ) ) ( test ( instance-existp ?gen189 ) ) => ( bind $?gen194 ( create$ rule15 ?gen188 $?gen191 ) ) ( message-modify-instance ?gen189 ( negative-support $?gen194 ) ) )
( defrule rule14-defeasibly-dot-gen522 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule14] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen180 ) ( is-a competition_outcome_arrangement_lv1 ) ( defendant ?Defendant ) ( negative 1 ) ( negative-derivator rule14 $? ) ) ( test ( eq ( class ?gen180 ) competition_outcome_arrangement_lv1 ) ) ( not ( and ( object ( name ?gen187 ) ( is-a competition_outcome_arrangement_lv2 ) ( defendant ?Defendant ) ( positive ?gen186 & : ( >= ?gen186 1 ) ) ) ( object ( name ?gen180 ) ( is-a competition_outcome_arrangement_lv1 ) ( positive ~ 2 ) ( negative-overruled $?gen182 & : ( not ( member$ rule14 $?gen182 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen180 ) ( is-a competition_outcome_arrangement_lv1 ) ( negative 0 ) ) ) ( test ( instance-existp ?gen180 ) ) => ( message-modify-instance ?gen180 ( negative 0 ) ) )
( defrule rule14-defeasibly-gen524 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule14] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen187 ) ( is-a competition_outcome_arrangement_lv2 ) ( defendant ?Defendant ) ( positive ?gen186 & : ( >= ?gen186 1 ) ) ) ( object ( name ?gen180 ) ( is-a competition_outcome_arrangement_lv1 ) ( defendant ?Defendant ) ( negative 0 ) ( positive ~ 2 ) ( negative-overruled $?gen182 & : ( not ( member$ rule14 $?gen182 ) ) ) ) ( test ( eq ( class ?gen180 ) competition_outcome_arrangement_lv1 ) ) ( test ( and ( neq ?Defendant nil ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen180 ) ( is-a competition_outcome_arrangement_lv1 ) ( negative 1 ) ( negative-derivator rule14 ?gen187 ) ) ) ( test ( instance-existp ?gen180 ) ) => ( message-modify-instance ?gen180 ( negative 1 ) ( negative-derivator rule14 ?gen187 ) ) )
( defrule rule14-overruled-dot-gen526 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule14] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen180 ) ( is-a competition_outcome_arrangement_lv1 ) ( defendant ?Defendant ) ( positive-support $?gen183 ) ( positive-overruled $?gen184 & : ( subseq-pos ( create$ rule14-overruled $?gen183 $$$ $?gen184 ) ) ) ) ( test ( eq ( class ?gen180 ) competition_outcome_arrangement_lv1 ) ) ( not ( and ( object ( name ?gen187 ) ( is-a competition_outcome_arrangement_lv2 ) ( defendant ?Defendant ) ( positive ?gen186 & : ( >= ?gen186 1 ) ) ) ( object ( name ?gen180 ) ( is-a competition_outcome_arrangement_lv1 ) ( negative-defeated $?gen182 & : ( not ( member$ rule14 $?gen182 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen183 (create$) ) ) ) ( not ( object ( name ?gen180 ) ( is-a competition_outcome_arrangement_lv1 ) ( positive-overruled $?gen185 & : ( eq $?gen185 ( delete-member$ $?gen184 ( create$ rule14-overruled $?gen183 ) ) ) ) ) ) ( test ( instance-existp ?gen180 ) ) => ( bind $?gen185 ( delete-member$ $?gen184 ( create$ rule14-overruled $?gen183 ) ) ) ( message-modify-instance ?gen180 ( positive-overruled $?gen185 ) ) )
( defrule rule14-overruled-gen528 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule14] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen187 ) ( is-a competition_outcome_arrangement_lv2 ) ( defendant ?Defendant ) ( positive ?gen186 & : ( >= ?gen186 1 ) ) ) ( object ( name ?gen180 ) ( is-a competition_outcome_arrangement_lv1 ) ( defendant ?Defendant ) ( positive-support $?gen183 ) ( positive-overruled $?gen184 & : ( not ( subseq-pos ( create$ rule14-overruled $?gen183 $$$ $?gen184 ) ) ) ) ( negative-defeated $?gen182 & : ( not ( member$ rule14 $?gen182 ) ) ) ) ( test ( eq ( class ?gen180 ) competition_outcome_arrangement_lv1 ) ) ( test ( and ( neq ?Defendant nil ) ( neq ?Defendant nil ) ( neq $?gen183 (create$) ) ) ) ( not ( object ( name ?gen180 ) ( is-a competition_outcome_arrangement_lv1 ) ( positive-overruled $?gen185 & : ( eq $?gen185 ( create$ rule14-overruled $?gen183 $?gen184 ) ) ) ) ) ( test ( instance-existp ?gen180 ) ) => ( bind $?gen185 ( create$ rule14-overruled $?gen183 $?gen184 ) ) ( message-modify-instance ?gen180 ( positive-overruled $?gen185 ) ) )
( defrule rule14-support-gen530 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule14] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen179 ) ( is-a competition_outcome_arrangement_lv2 ) ( defendant ?Defendant ) ) ( object ( name ?gen180 ) ( is-a competition_outcome_arrangement_lv1 ) ( defendant ?Defendant ) ( negative-support $?gen182 & : ( not ( subseq-pos ( create$ rule14 ?gen179 $$$ $?gen182 ) ) ) ) ) ( test ( eq ( class ?gen180 ) competition_outcome_arrangement_lv1 ) ) ( test ( and ( neq ?Defendant nil ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen180 ) ( is-a competition_outcome_arrangement_lv1 ) ( negative-support $?gen185 & : ( eq $?gen185 ( create$ rule14 ?gen179 $?gen182 ) ) ) ) ) ( test ( instance-existp ?gen180 ) ) => ( bind $?gen185 ( create$ rule14 ?gen179 $?gen182 ) ) ( message-modify-instance ?gen180 ( negative-support $?gen185 ) ) )
( defrule rule13-defeasibly-dot-gen532 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule13] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen169 ) ( is-a competition_outcome_arrangement_lv3 ) ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule13 $? ) ) ( test ( eq ( class ?gen169 ) competition_outcome_arrangement_lv3 ) ) ( not ( and ( object ( name ?gen176 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:money ?Money ) ( positive ?gen175 & : ( >= ?gen175 1 ) ) ) ( object ( name ?gen178 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "competition_outcome_arrangement" ) ( positive ?gen177 & : ( >= ?gen177 1 ) ) ) ( test ( > ?Money 40000 ) ) ( object ( name ?gen169 ) ( is-a competition_outcome_arrangement_lv3 ) ( negative ~ 2 ) ( positive-overruled $?gen171 & : ( not ( member$ rule13 $?gen171 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen169 ) ( is-a competition_outcome_arrangement_lv3 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen169 ) ) => ( message-modify-instance ?gen169 ( positive 0 ) ) )
( defrule rule13-defeasibly-gen534 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule13] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen176 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:money ?Money ) ( positive ?gen175 & : ( >= ?gen175 1 ) ) ) ( object ( name ?gen178 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "competition_outcome_arrangement" ) ( positive ?gen177 & : ( >= ?gen177 1 ) ) ) ( test ( > ?Money 40000 ) ) ( object ( name ?gen169 ) ( is-a competition_outcome_arrangement_lv3 ) ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen171 & : ( not ( member$ rule13 $?gen171 ) ) ) ) ( test ( eq ( class ?gen169 ) competition_outcome_arrangement_lv3 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Money (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen169 ) ( is-a competition_outcome_arrangement_lv3 ) ( positive 1 ) ( positive-derivator rule13 ?gen176 ?gen178 ) ) ) ( test ( instance-existp ?gen169 ) ) => ( message-modify-instance ?gen169 ( positive 1 ) ( positive-derivator rule13 ?gen176 ?gen178 ) ) )
( defrule rule13-overruled-dot-gen536 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule13] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen169 ) ( is-a competition_outcome_arrangement_lv3 ) ( defendant ?Defendant ) ( negative-support $?gen172 ) ( negative-overruled $?gen173 & : ( subseq-pos ( create$ rule13-overruled $?gen172 $$$ $?gen173 ) ) ) ) ( test ( eq ( class ?gen169 ) competition_outcome_arrangement_lv3 ) ) ( not ( and ( object ( name ?gen176 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:money ?Money ) ( positive ?gen175 & : ( >= ?gen175 1 ) ) ) ( object ( name ?gen178 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "competition_outcome_arrangement" ) ( positive ?gen177 & : ( >= ?gen177 1 ) ) ) ( test ( > ?Money 40000 ) ) ( object ( name ?gen169 ) ( is-a competition_outcome_arrangement_lv3 ) ( positive-defeated $?gen171 & : ( not ( member$ rule13 $?gen171 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen172 (create$) ) ) ) ( not ( object ( name ?gen169 ) ( is-a competition_outcome_arrangement_lv3 ) ( negative-overruled $?gen174 & : ( eq $?gen174 ( delete-member$ $?gen173 ( create$ rule13-overruled $?gen172 ) ) ) ) ) ) ( test ( instance-existp ?gen169 ) ) => ( bind $?gen174 ( delete-member$ $?gen173 ( create$ rule13-overruled $?gen172 ) ) ) ( message-modify-instance ?gen169 ( negative-overruled $?gen174 ) ) )
( defrule rule13-overruled-gen538 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule13] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen176 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:money ?Money ) ( positive ?gen175 & : ( >= ?gen175 1 ) ) ) ( object ( name ?gen178 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "competition_outcome_arrangement" ) ( positive ?gen177 & : ( >= ?gen177 1 ) ) ) ( test ( > ?Money 40000 ) ) ( object ( name ?gen169 ) ( is-a competition_outcome_arrangement_lv3 ) ( defendant ?Defendant ) ( negative-support $?gen172 ) ( negative-overruled $?gen173 & : ( not ( subseq-pos ( create$ rule13-overruled $?gen172 $$$ $?gen173 ) ) ) ) ( positive-defeated $?gen171 & : ( not ( member$ rule13 $?gen171 ) ) ) ) ( test ( eq ( class ?gen169 ) competition_outcome_arrangement_lv3 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Money (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ( neq $?gen172 (create$) ) ) ) ( not ( object ( name ?gen169 ) ( is-a competition_outcome_arrangement_lv3 ) ( negative-overruled $?gen174 & : ( eq $?gen174 ( create$ rule13-overruled $?gen172 $?gen173 ) ) ) ) ) ( test ( instance-existp ?gen169 ) ) => ( bind $?gen174 ( create$ rule13-overruled $?gen172 $?gen173 ) ) ( message-modify-instance ?gen169 ( negative-overruled $?gen174 ) ) )
( defrule rule13-support-gen540 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule13] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen166 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:money ?Money ) ) ( object ( name ?gen167 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "competition_outcome_arrangement" ) ) ( test ( > ?Money 40000 ) ) ( object ( name ?gen169 ) ( is-a competition_outcome_arrangement_lv3 ) ( defendant ?Defendant ) ( positive-support $?gen171 & : ( not ( subseq-pos ( create$ rule13 ?gen166 ?gen167 $$$ $?gen171 ) ) ) ) ) ( test ( eq ( class ?gen169 ) competition_outcome_arrangement_lv3 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Money (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen169 ) ( is-a competition_outcome_arrangement_lv3 ) ( positive-support $?gen174 & : ( eq $?gen174 ( create$ rule13 ?gen166 ?gen167 $?gen171 ) ) ) ) ) ( test ( instance-existp ?gen169 ) ) => ( bind $?gen174 ( create$ rule13 ?gen166 ?gen167 $?gen171 ) ) ( message-modify-instance ?gen169 ( positive-support $?gen174 ) ) )
( defrule rule12-defeasibly-dot-gen542 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule12] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen156 ) ( is-a competition_outcome_arrangement_lv2 ) ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule12 $? ) ) ( test ( eq ( class ?gen156 ) competition_outcome_arrangement_lv2 ) ) ( not ( and ( object ( name ?gen163 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:money ?Money ) ( positive ?gen162 & : ( >= ?gen162 1 ) ) ) ( object ( name ?gen165 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "competition_outcome_arrangement" ) ( positive ?gen164 & : ( >= ?gen164 1 ) ) ) ( test ( > ?Money 10000 ) ) ( test ( <= ?Money 40000 ) ) ( object ( name ?gen156 ) ( is-a competition_outcome_arrangement_lv2 ) ( negative ~ 2 ) ( positive-overruled $?gen158 & : ( not ( member$ rule12 $?gen158 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen156 ) ( is-a competition_outcome_arrangement_lv2 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen156 ) ) => ( message-modify-instance ?gen156 ( positive 0 ) ) )
( defrule rule12-defeasibly-gen544 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule12] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen163 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:money ?Money ) ( positive ?gen162 & : ( >= ?gen162 1 ) ) ) ( object ( name ?gen165 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "competition_outcome_arrangement" ) ( positive ?gen164 & : ( >= ?gen164 1 ) ) ) ( test ( > ?Money 10000 ) ) ( test ( <= ?Money 40000 ) ) ( object ( name ?gen156 ) ( is-a competition_outcome_arrangement_lv2 ) ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen158 & : ( not ( member$ rule12 $?gen158 ) ) ) ) ( test ( eq ( class ?gen156 ) competition_outcome_arrangement_lv2 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Money (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen156 ) ( is-a competition_outcome_arrangement_lv2 ) ( positive 1 ) ( positive-derivator rule12 ?gen163 ?gen165 ) ) ) ( test ( instance-existp ?gen156 ) ) => ( message-modify-instance ?gen156 ( positive 1 ) ( positive-derivator rule12 ?gen163 ?gen165 ) ) )
( defrule rule12-overruled-dot-gen546 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule12] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen156 ) ( is-a competition_outcome_arrangement_lv2 ) ( defendant ?Defendant ) ( negative-support $?gen159 ) ( negative-overruled $?gen160 & : ( subseq-pos ( create$ rule12-overruled $?gen159 $$$ $?gen160 ) ) ) ) ( test ( eq ( class ?gen156 ) competition_outcome_arrangement_lv2 ) ) ( not ( and ( object ( name ?gen163 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:money ?Money ) ( positive ?gen162 & : ( >= ?gen162 1 ) ) ) ( object ( name ?gen165 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "competition_outcome_arrangement" ) ( positive ?gen164 & : ( >= ?gen164 1 ) ) ) ( test ( > ?Money 10000 ) ) ( test ( <= ?Money 40000 ) ) ( object ( name ?gen156 ) ( is-a competition_outcome_arrangement_lv2 ) ( positive-defeated $?gen158 & : ( not ( member$ rule12 $?gen158 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen159 (create$) ) ) ) ( not ( object ( name ?gen156 ) ( is-a competition_outcome_arrangement_lv2 ) ( negative-overruled $?gen161 & : ( eq $?gen161 ( delete-member$ $?gen160 ( create$ rule12-overruled $?gen159 ) ) ) ) ) ) ( test ( instance-existp ?gen156 ) ) => ( bind $?gen161 ( delete-member$ $?gen160 ( create$ rule12-overruled $?gen159 ) ) ) ( message-modify-instance ?gen156 ( negative-overruled $?gen161 ) ) )
( defrule rule12-overruled-gen548 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule12] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen163 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:money ?Money ) ( positive ?gen162 & : ( >= ?gen162 1 ) ) ) ( object ( name ?gen165 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "competition_outcome_arrangement" ) ( positive ?gen164 & : ( >= ?gen164 1 ) ) ) ( test ( > ?Money 10000 ) ) ( test ( <= ?Money 40000 ) ) ( object ( name ?gen156 ) ( is-a competition_outcome_arrangement_lv2 ) ( defendant ?Defendant ) ( negative-support $?gen159 ) ( negative-overruled $?gen160 & : ( not ( subseq-pos ( create$ rule12-overruled $?gen159 $$$ $?gen160 ) ) ) ) ( positive-defeated $?gen158 & : ( not ( member$ rule12 $?gen158 ) ) ) ) ( test ( eq ( class ?gen156 ) competition_outcome_arrangement_lv2 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Money (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ( neq $?gen159 (create$) ) ) ) ( not ( object ( name ?gen156 ) ( is-a competition_outcome_arrangement_lv2 ) ( negative-overruled $?gen161 & : ( eq $?gen161 ( create$ rule12-overruled $?gen159 $?gen160 ) ) ) ) ) ( test ( instance-existp ?gen156 ) ) => ( bind $?gen161 ( create$ rule12-overruled $?gen159 $?gen160 ) ) ( message-modify-instance ?gen156 ( negative-overruled $?gen161 ) ) )
( defrule rule12-support-gen550 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule12] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen152 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:money ?Money ) ) ( object ( name ?gen153 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "competition_outcome_arrangement" ) ) ( test ( > ?Money 10000 ) ) ( test ( <= ?Money 40000 ) ) ( object ( name ?gen156 ) ( is-a competition_outcome_arrangement_lv2 ) ( defendant ?Defendant ) ( positive-support $?gen158 & : ( not ( subseq-pos ( create$ rule12 ?gen152 ?gen153 $$$ $?gen158 ) ) ) ) ) ( test ( eq ( class ?gen156 ) competition_outcome_arrangement_lv2 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Money (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen156 ) ( is-a competition_outcome_arrangement_lv2 ) ( positive-support $?gen161 & : ( eq $?gen161 ( create$ rule12 ?gen152 ?gen153 $?gen158 ) ) ) ) ) ( test ( instance-existp ?gen156 ) ) => ( bind $?gen161 ( create$ rule12 ?gen152 ?gen153 $?gen158 ) ) ( message-modify-instance ?gen156 ( positive-support $?gen161 ) ) )
( defrule rule11-defeasibly-dot-gen552 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule11] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen144 ) ( is-a competition_outcome_arrangement_lv1 ) ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule11 $? ) ) ( test ( eq ( class ?gen144 ) competition_outcome_arrangement_lv1 ) ) ( not ( and ( object ( name ?gen151 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "competition_outcome_arrangement" ) ( positive ?gen150 & : ( >= ?gen150 1 ) ) ) ( object ( name ?gen144 ) ( is-a competition_outcome_arrangement_lv1 ) ( negative ~ 2 ) ( positive-overruled $?gen146 & : ( not ( member$ rule11 $?gen146 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen144 ) ( is-a competition_outcome_arrangement_lv1 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen144 ) ) => ( message-modify-instance ?gen144 ( positive 0 ) ) )
( defrule rule11-defeasibly-gen554 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule11] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen151 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "competition_outcome_arrangement" ) ( positive ?gen150 & : ( >= ?gen150 1 ) ) ) ( object ( name ?gen144 ) ( is-a competition_outcome_arrangement_lv1 ) ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen146 & : ( not ( member$ rule11 $?gen146 ) ) ) ) ( test ( eq ( class ?gen144 ) competition_outcome_arrangement_lv1 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen144 ) ( is-a competition_outcome_arrangement_lv1 ) ( positive 1 ) ( positive-derivator rule11 ?gen151 ) ) ) ( test ( instance-existp ?gen144 ) ) => ( message-modify-instance ?gen144 ( positive 1 ) ( positive-derivator rule11 ?gen151 ) ) )
( defrule rule11-overruled-dot-gen556 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule11] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen144 ) ( is-a competition_outcome_arrangement_lv1 ) ( defendant ?Defendant ) ( negative-support $?gen147 ) ( negative-overruled $?gen148 & : ( subseq-pos ( create$ rule11-overruled $?gen147 $$$ $?gen148 ) ) ) ) ( test ( eq ( class ?gen144 ) competition_outcome_arrangement_lv1 ) ) ( not ( and ( object ( name ?gen151 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "competition_outcome_arrangement" ) ( positive ?gen150 & : ( >= ?gen150 1 ) ) ) ( object ( name ?gen144 ) ( is-a competition_outcome_arrangement_lv1 ) ( positive-defeated $?gen146 & : ( not ( member$ rule11 $?gen146 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen147 (create$) ) ) ) ( not ( object ( name ?gen144 ) ( is-a competition_outcome_arrangement_lv1 ) ( negative-overruled $?gen149 & : ( eq $?gen149 ( delete-member$ $?gen148 ( create$ rule11-overruled $?gen147 ) ) ) ) ) ) ( test ( instance-existp ?gen144 ) ) => ( bind $?gen149 ( delete-member$ $?gen148 ( create$ rule11-overruled $?gen147 ) ) ) ( message-modify-instance ?gen144 ( negative-overruled $?gen149 ) ) )
( defrule rule11-overruled-gen558 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule11] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen151 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "competition_outcome_arrangement" ) ( positive ?gen150 & : ( >= ?gen150 1 ) ) ) ( object ( name ?gen144 ) ( is-a competition_outcome_arrangement_lv1 ) ( defendant ?Defendant ) ( negative-support $?gen147 ) ( negative-overruled $?gen148 & : ( not ( subseq-pos ( create$ rule11-overruled $?gen147 $$$ $?gen148 ) ) ) ) ( positive-defeated $?gen146 & : ( not ( member$ rule11 $?gen146 ) ) ) ) ( test ( eq ( class ?gen144 ) competition_outcome_arrangement_lv1 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ( neq $?gen147 (create$) ) ) ) ( not ( object ( name ?gen144 ) ( is-a competition_outcome_arrangement_lv1 ) ( negative-overruled $?gen149 & : ( eq $?gen149 ( create$ rule11-overruled $?gen147 $?gen148 ) ) ) ) ) ( test ( instance-existp ?gen144 ) ) => ( bind $?gen149 ( create$ rule11-overruled $?gen147 $?gen148 ) ) ( message-modify-instance ?gen144 ( negative-overruled $?gen149 ) ) )
( defrule rule11-support-gen560 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule11] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen143 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "competition_outcome_arrangement" ) ) ( object ( name ?gen144 ) ( is-a competition_outcome_arrangement_lv1 ) ( defendant ?Defendant ) ( positive-support $?gen146 & : ( not ( subseq-pos ( create$ rule11 ?gen143 $$$ $?gen146 ) ) ) ) ) ( test ( eq ( class ?gen144 ) competition_outcome_arrangement_lv1 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen144 ) ( is-a competition_outcome_arrangement_lv1 ) ( positive-support $?gen149 & : ( eq $?gen149 ( create$ rule11 ?gen143 $?gen146 ) ) ) ) ) ( test ( instance-existp ?gen144 ) ) => ( bind $?gen149 ( create$ rule11 ?gen143 $?gen146 ) ) ( message-modify-instance ?gen144 ( positive-support $?gen149 ) ) )
( defrule rule10-defeasibly-dot-gen562 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule10] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen135 ) ( is-a robbery_lv1 ) ( defendant ?Defendant ) ( negative 1 ) ( negative-derivator rule10 $? ) ) ( test ( eq ( class ?gen135 ) robbery_lv1 ) ) ( not ( and ( object ( name ?gen142 ) ( is-a robbery_lv6 ) ( defendant ?Defendant ) ( positive ?gen141 & : ( >= ?gen141 1 ) ) ) ( object ( name ?gen135 ) ( is-a robbery_lv1 ) ( positive ~ 2 ) ( negative-overruled $?gen137 & : ( not ( member$ rule10 $?gen137 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen135 ) ( is-a robbery_lv1 ) ( negative 0 ) ) ) ( test ( instance-existp ?gen135 ) ) => ( message-modify-instance ?gen135 ( negative 0 ) ) )
( defrule rule10-defeasibly-gen564 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule10] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen142 ) ( is-a robbery_lv6 ) ( defendant ?Defendant ) ( positive ?gen141 & : ( >= ?gen141 1 ) ) ) ( object ( name ?gen135 ) ( is-a robbery_lv1 ) ( defendant ?Defendant ) ( negative 0 ) ( positive ~ 2 ) ( negative-overruled $?gen137 & : ( not ( member$ rule10 $?gen137 ) ) ) ) ( test ( eq ( class ?gen135 ) robbery_lv1 ) ) ( test ( and ( neq ?Defendant nil ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen135 ) ( is-a robbery_lv1 ) ( negative 1 ) ( negative-derivator rule10 ?gen142 ) ) ) ( test ( instance-existp ?gen135 ) ) => ( message-modify-instance ?gen135 ( negative 1 ) ( negative-derivator rule10 ?gen142 ) ) )
( defrule rule10-overruled-dot-gen566 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule10] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen135 ) ( is-a robbery_lv1 ) ( defendant ?Defendant ) ( positive-support $?gen138 ) ( positive-overruled $?gen139 & : ( subseq-pos ( create$ rule10-overruled $?gen138 $$$ $?gen139 ) ) ) ) ( test ( eq ( class ?gen135 ) robbery_lv1 ) ) ( not ( and ( object ( name ?gen142 ) ( is-a robbery_lv6 ) ( defendant ?Defendant ) ( positive ?gen141 & : ( >= ?gen141 1 ) ) ) ( object ( name ?gen135 ) ( is-a robbery_lv1 ) ( negative-defeated $?gen137 & : ( not ( member$ rule10 $?gen137 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen138 (create$) ) ) ) ( not ( object ( name ?gen135 ) ( is-a robbery_lv1 ) ( positive-overruled $?gen140 & : ( eq $?gen140 ( delete-member$ $?gen139 ( create$ rule10-overruled $?gen138 ) ) ) ) ) ) ( test ( instance-existp ?gen135 ) ) => ( bind $?gen140 ( delete-member$ $?gen139 ( create$ rule10-overruled $?gen138 ) ) ) ( message-modify-instance ?gen135 ( positive-overruled $?gen140 ) ) )
( defrule rule10-overruled-gen568 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule10] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen142 ) ( is-a robbery_lv6 ) ( defendant ?Defendant ) ( positive ?gen141 & : ( >= ?gen141 1 ) ) ) ( object ( name ?gen135 ) ( is-a robbery_lv1 ) ( defendant ?Defendant ) ( positive-support $?gen138 ) ( positive-overruled $?gen139 & : ( not ( subseq-pos ( create$ rule10-overruled $?gen138 $$$ $?gen139 ) ) ) ) ( negative-defeated $?gen137 & : ( not ( member$ rule10 $?gen137 ) ) ) ) ( test ( eq ( class ?gen135 ) robbery_lv1 ) ) ( test ( and ( neq ?Defendant nil ) ( neq ?Defendant nil ) ( neq $?gen138 (create$) ) ) ) ( not ( object ( name ?gen135 ) ( is-a robbery_lv1 ) ( positive-overruled $?gen140 & : ( eq $?gen140 ( create$ rule10-overruled $?gen138 $?gen139 ) ) ) ) ) ( test ( instance-existp ?gen135 ) ) => ( bind $?gen140 ( create$ rule10-overruled $?gen138 $?gen139 ) ) ( message-modify-instance ?gen135 ( positive-overruled $?gen140 ) ) )
( defrule rule10-support-gen570 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule10] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen134 ) ( is-a robbery_lv6 ) ( defendant ?Defendant ) ) ( object ( name ?gen135 ) ( is-a robbery_lv1 ) ( defendant ?Defendant ) ( negative-support $?gen137 & : ( not ( subseq-pos ( create$ rule10 ?gen134 $$$ $?gen137 ) ) ) ) ) ( test ( eq ( class ?gen135 ) robbery_lv1 ) ) ( test ( and ( neq ?Defendant nil ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen135 ) ( is-a robbery_lv1 ) ( negative-support $?gen140 & : ( eq $?gen140 ( create$ rule10 ?gen134 $?gen137 ) ) ) ) ) ( test ( instance-existp ?gen135 ) ) => ( bind $?gen140 ( create$ rule10 ?gen134 $?gen137 ) ) ( message-modify-instance ?gen135 ( negative-support $?gen140 ) ) )
( defrule rule9-defeasibly-dot-gen572 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule9] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen122 ) ( is-a robbery_lv6 ) ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule9 $? ) ) ( test ( eq ( class ?gen122 ) robbery_lv6 ) ) ( not ( and ( object ( name ?gen129 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:money ?Money ) ( positive ?gen128 & : ( >= ?gen128 1 ) ) ) ( object ( name ?gen131 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ( positive ?gen130 & : ( >= ?gen130 1 ) ) ) ( object ( name ?gen133 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "standard" ) ( positive ?gen132 & : ( >= ?gen132 1 ) ) ) ( test ( < ?Money 150 ) ) ( object ( name ?gen122 ) ( is-a robbery_lv6 ) ( negative ~ 2 ) ( positive-overruled $?gen124 & : ( not ( member$ rule9 $?gen124 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen122 ) ( is-a robbery_lv6 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen122 ) ) => ( message-modify-instance ?gen122 ( positive 0 ) ) )
( defrule rule9-defeasibly-gen574 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule9] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen129 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:money ?Money ) ( positive ?gen128 & : ( >= ?gen128 1 ) ) ) ( object ( name ?gen131 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ( positive ?gen130 & : ( >= ?gen130 1 ) ) ) ( object ( name ?gen133 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "standard" ) ( positive ?gen132 & : ( >= ?gen132 1 ) ) ) ( test ( < ?Money 150 ) ) ( object ( name ?gen122 ) ( is-a robbery_lv6 ) ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen124 & : ( not ( member$ rule9 $?gen124 ) ) ) ) ( test ( eq ( class ?gen122 ) robbery_lv6 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Money (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen122 ) ( is-a robbery_lv6 ) ( positive 1 ) ( positive-derivator rule9 ?gen129 ?gen131 ?gen133 ) ) ) ( test ( instance-existp ?gen122 ) ) => ( message-modify-instance ?gen122 ( positive 1 ) ( positive-derivator rule9 ?gen129 ?gen131 ?gen133 ) ) )
( defrule rule9-overruled-dot-gen576 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule9] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen122 ) ( is-a robbery_lv6 ) ( defendant ?Defendant ) ( negative-support $?gen125 ) ( negative-overruled $?gen126 & : ( subseq-pos ( create$ rule9-overruled $?gen125 $$$ $?gen126 ) ) ) ) ( test ( eq ( class ?gen122 ) robbery_lv6 ) ) ( not ( and ( object ( name ?gen129 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:money ?Money ) ( positive ?gen128 & : ( >= ?gen128 1 ) ) ) ( object ( name ?gen131 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ( positive ?gen130 & : ( >= ?gen130 1 ) ) ) ( object ( name ?gen133 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "standard" ) ( positive ?gen132 & : ( >= ?gen132 1 ) ) ) ( test ( < ?Money 150 ) ) ( object ( name ?gen122 ) ( is-a robbery_lv6 ) ( positive-defeated $?gen124 & : ( not ( member$ rule9 $?gen124 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen125 (create$) ) ) ) ( not ( object ( name ?gen122 ) ( is-a robbery_lv6 ) ( negative-overruled $?gen127 & : ( eq $?gen127 ( delete-member$ $?gen126 ( create$ rule9-overruled $?gen125 ) ) ) ) ) ) ( test ( instance-existp ?gen122 ) ) => ( bind $?gen127 ( delete-member$ $?gen126 ( create$ rule9-overruled $?gen125 ) ) ) ( message-modify-instance ?gen122 ( negative-overruled $?gen127 ) ) )
( defrule rule9-overruled-gen578 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule9] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen129 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:money ?Money ) ( positive ?gen128 & : ( >= ?gen128 1 ) ) ) ( object ( name ?gen131 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ( positive ?gen130 & : ( >= ?gen130 1 ) ) ) ( object ( name ?gen133 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "standard" ) ( positive ?gen132 & : ( >= ?gen132 1 ) ) ) ( test ( < ?Money 150 ) ) ( object ( name ?gen122 ) ( is-a robbery_lv6 ) ( defendant ?Defendant ) ( negative-support $?gen125 ) ( negative-overruled $?gen126 & : ( not ( subseq-pos ( create$ rule9-overruled $?gen125 $$$ $?gen126 ) ) ) ) ( positive-defeated $?gen124 & : ( not ( member$ rule9 $?gen124 ) ) ) ) ( test ( eq ( class ?gen122 ) robbery_lv6 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Money (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ( neq $?gen125 (create$) ) ) ) ( not ( object ( name ?gen122 ) ( is-a robbery_lv6 ) ( negative-overruled $?gen127 & : ( eq $?gen127 ( create$ rule9-overruled $?gen125 $?gen126 ) ) ) ) ) ( test ( instance-existp ?gen122 ) ) => ( bind $?gen127 ( create$ rule9-overruled $?gen125 $?gen126 ) ) ( message-modify-instance ?gen122 ( negative-overruled $?gen127 ) ) )
( defrule rule9-support-gen580 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule9] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen118 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:money ?Money ) ) ( object ( name ?gen119 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ) ( object ( name ?gen120 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "standard" ) ) ( test ( < ?Money 150 ) ) ( object ( name ?gen122 ) ( is-a robbery_lv6 ) ( defendant ?Defendant ) ( positive-support $?gen124 & : ( not ( subseq-pos ( create$ rule9 ?gen118 ?gen119 ?gen120 $$$ $?gen124 ) ) ) ) ) ( test ( eq ( class ?gen122 ) robbery_lv6 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Money (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen122 ) ( is-a robbery_lv6 ) ( positive-support $?gen127 & : ( eq $?gen127 ( create$ rule9 ?gen118 ?gen119 ?gen120 $?gen124 ) ) ) ) ) ( test ( instance-existp ?gen122 ) ) => ( bind $?gen127 ( create$ rule9 ?gen118 ?gen119 ?gen120 $?gen124 ) ) ( message-modify-instance ?gen122 ( positive-support $?gen127 ) ) )
( defrule rule8-defeasibly-dot-gen582 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule8] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen108 ) ( is-a robbery_lv5 ) ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule8 $? ) ) ( test ( eq ( class ?gen108 ) robbery_lv5 ) ) ( not ( and ( object ( name ?gen115 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ( positive ?gen114 & : ( >= ?gen114 1 ) ) ) ( object ( name ?gen117 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "deprived_of_life" ) ( positive ?gen116 & : ( >= ?gen116 1 ) ) ) ( object ( name ?gen108 ) ( is-a robbery_lv5 ) ( negative ~ 2 ) ( positive-overruled $?gen110 & : ( not ( member$ rule8 $?gen110 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen108 ) ( is-a robbery_lv5 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen108 ) ) => ( message-modify-instance ?gen108 ( positive 0 ) ) )
( defrule rule8-defeasibly-gen584 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule8] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen115 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ( positive ?gen114 & : ( >= ?gen114 1 ) ) ) ( object ( name ?gen117 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "deprived_of_life" ) ( positive ?gen116 & : ( >= ?gen116 1 ) ) ) ( object ( name ?gen108 ) ( is-a robbery_lv5 ) ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen110 & : ( not ( member$ rule8 $?gen110 ) ) ) ) ( test ( eq ( class ?gen108 ) robbery_lv5 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen108 ) ( is-a robbery_lv5 ) ( positive 1 ) ( positive-derivator rule8 ?gen115 ?gen117 ) ) ) ( test ( instance-existp ?gen108 ) ) => ( message-modify-instance ?gen108 ( positive 1 ) ( positive-derivator rule8 ?gen115 ?gen117 ) ) )
( defrule rule8-overruled-dot-gen586 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule8] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen108 ) ( is-a robbery_lv5 ) ( defendant ?Defendant ) ( negative-support $?gen111 ) ( negative-overruled $?gen112 & : ( subseq-pos ( create$ rule8-overruled $?gen111 $$$ $?gen112 ) ) ) ) ( test ( eq ( class ?gen108 ) robbery_lv5 ) ) ( not ( and ( object ( name ?gen115 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ( positive ?gen114 & : ( >= ?gen114 1 ) ) ) ( object ( name ?gen117 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "deprived_of_life" ) ( positive ?gen116 & : ( >= ?gen116 1 ) ) ) ( object ( name ?gen108 ) ( is-a robbery_lv5 ) ( positive-defeated $?gen110 & : ( not ( member$ rule8 $?gen110 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen111 (create$) ) ) ) ( not ( object ( name ?gen108 ) ( is-a robbery_lv5 ) ( negative-overruled $?gen113 & : ( eq $?gen113 ( delete-member$ $?gen112 ( create$ rule8-overruled $?gen111 ) ) ) ) ) ) ( test ( instance-existp ?gen108 ) ) => ( bind $?gen113 ( delete-member$ $?gen112 ( create$ rule8-overruled $?gen111 ) ) ) ( message-modify-instance ?gen108 ( negative-overruled $?gen113 ) ) )
( defrule rule8-overruled-gen588 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule8] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen115 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ( positive ?gen114 & : ( >= ?gen114 1 ) ) ) ( object ( name ?gen117 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "deprived_of_life" ) ( positive ?gen116 & : ( >= ?gen116 1 ) ) ) ( object ( name ?gen108 ) ( is-a robbery_lv5 ) ( defendant ?Defendant ) ( negative-support $?gen111 ) ( negative-overruled $?gen112 & : ( not ( subseq-pos ( create$ rule8-overruled $?gen111 $$$ $?gen112 ) ) ) ) ( positive-defeated $?gen110 & : ( not ( member$ rule8 $?gen110 ) ) ) ) ( test ( eq ( class ?gen108 ) robbery_lv5 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ( neq $?gen111 (create$) ) ) ) ( not ( object ( name ?gen108 ) ( is-a robbery_lv5 ) ( negative-overruled $?gen113 & : ( eq $?gen113 ( create$ rule8-overruled $?gen111 $?gen112 ) ) ) ) ) ( test ( instance-existp ?gen108 ) ) => ( bind $?gen113 ( create$ rule8-overruled $?gen111 $?gen112 ) ) ( message-modify-instance ?gen108 ( negative-overruled $?gen113 ) ) )
( defrule rule8-support-gen590 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule8] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen106 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ) ( object ( name ?gen107 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "deprived_of_life" ) ) ( object ( name ?gen108 ) ( is-a robbery_lv5 ) ( defendant ?Defendant ) ( positive-support $?gen110 & : ( not ( subseq-pos ( create$ rule8 ?gen106 ?gen107 $$$ $?gen110 ) ) ) ) ) ( test ( eq ( class ?gen108 ) robbery_lv5 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen108 ) ( is-a robbery_lv5 ) ( positive-support $?gen113 & : ( eq $?gen113 ( create$ rule8 ?gen106 ?gen107 $?gen110 ) ) ) ) ) ( test ( instance-existp ?gen108 ) ) => ( bind $?gen113 ( create$ rule8 ?gen106 ?gen107 $?gen110 ) ) ( message-modify-instance ?gen108 ( positive-support $?gen113 ) ) )
( defrule rule7-defeasibly-dot-gen592 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen96 ) ( is-a robbery_lv4 ) ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule7 $? ) ) ( test ( eq ( class ?gen96 ) robbery_lv4 ) ) ( not ( and ( object ( name ?gen103 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ( positive ?gen102 & : ( >= ?gen102 1 ) ) ) ( object ( name ?gen105 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "group_or_seriously_injured" ) ( positive ?gen104 & : ( >= ?gen104 1 ) ) ) ( object ( name ?gen96 ) ( is-a robbery_lv4 ) ( negative ~ 2 ) ( positive-overruled $?gen98 & : ( not ( member$ rule7 $?gen98 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen96 ) ( is-a robbery_lv4 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen96 ) ) => ( message-modify-instance ?gen96 ( positive 0 ) ) )
( defrule rule7-defeasibly-gen594 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen103 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ( positive ?gen102 & : ( >= ?gen102 1 ) ) ) ( object ( name ?gen105 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "group_or_seriously_injured" ) ( positive ?gen104 & : ( >= ?gen104 1 ) ) ) ( object ( name ?gen96 ) ( is-a robbery_lv4 ) ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen98 & : ( not ( member$ rule7 $?gen98 ) ) ) ) ( test ( eq ( class ?gen96 ) robbery_lv4 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen96 ) ( is-a robbery_lv4 ) ( positive 1 ) ( positive-derivator rule7 ?gen103 ?gen105 ) ) ) ( test ( instance-existp ?gen96 ) ) => ( message-modify-instance ?gen96 ( positive 1 ) ( positive-derivator rule7 ?gen103 ?gen105 ) ) )
( defrule rule7-overruled-dot-gen596 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen96 ) ( is-a robbery_lv4 ) ( defendant ?Defendant ) ( negative-support $?gen99 ) ( negative-overruled $?gen100 & : ( subseq-pos ( create$ rule7-overruled $?gen99 $$$ $?gen100 ) ) ) ) ( test ( eq ( class ?gen96 ) robbery_lv4 ) ) ( not ( and ( object ( name ?gen103 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ( positive ?gen102 & : ( >= ?gen102 1 ) ) ) ( object ( name ?gen105 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "group_or_seriously_injured" ) ( positive ?gen104 & : ( >= ?gen104 1 ) ) ) ( object ( name ?gen96 ) ( is-a robbery_lv4 ) ( positive-defeated $?gen98 & : ( not ( member$ rule7 $?gen98 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen99 (create$) ) ) ) ( not ( object ( name ?gen96 ) ( is-a robbery_lv4 ) ( negative-overruled $?gen101 & : ( eq $?gen101 ( delete-member$ $?gen100 ( create$ rule7-overruled $?gen99 ) ) ) ) ) ) ( test ( instance-existp ?gen96 ) ) => ( bind $?gen101 ( delete-member$ $?gen100 ( create$ rule7-overruled $?gen99 ) ) ) ( message-modify-instance ?gen96 ( negative-overruled $?gen101 ) ) )
( defrule rule7-overruled-gen598 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen103 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ( positive ?gen102 & : ( >= ?gen102 1 ) ) ) ( object ( name ?gen105 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "group_or_seriously_injured" ) ( positive ?gen104 & : ( >= ?gen104 1 ) ) ) ( object ( name ?gen96 ) ( is-a robbery_lv4 ) ( defendant ?Defendant ) ( negative-support $?gen99 ) ( negative-overruled $?gen100 & : ( not ( subseq-pos ( create$ rule7-overruled $?gen99 $$$ $?gen100 ) ) ) ) ( positive-defeated $?gen98 & : ( not ( member$ rule7 $?gen98 ) ) ) ) ( test ( eq ( class ?gen96 ) robbery_lv4 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ( neq $?gen99 (create$) ) ) ) ( not ( object ( name ?gen96 ) ( is-a robbery_lv4 ) ( negative-overruled $?gen101 & : ( eq $?gen101 ( create$ rule7-overruled $?gen99 $?gen100 ) ) ) ) ) ( test ( instance-existp ?gen96 ) ) => ( bind $?gen101 ( create$ rule7-overruled $?gen99 $?gen100 ) ) ( message-modify-instance ?gen96 ( negative-overruled $?gen101 ) ) )
( defrule rule7-support-gen600 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule7] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen94 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ) ( object ( name ?gen95 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "group_or_seriously_injured" ) ) ( object ( name ?gen96 ) ( is-a robbery_lv4 ) ( defendant ?Defendant ) ( positive-support $?gen98 & : ( not ( subseq-pos ( create$ rule7 ?gen94 ?gen95 $$$ $?gen98 ) ) ) ) ) ( test ( eq ( class ?gen96 ) robbery_lv4 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen96 ) ( is-a robbery_lv4 ) ( positive-support $?gen101 & : ( eq $?gen101 ( create$ rule7 ?gen94 ?gen95 $?gen98 ) ) ) ) ) ( test ( instance-existp ?gen96 ) ) => ( bind $?gen101 ( create$ rule7 ?gen94 ?gen95 $?gen98 ) ) ( message-modify-instance ?gen96 ( positive-support $?gen101 ) ) )
( defrule rule6-defeasibly-dot-gen602 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule6] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen86 ) ( is-a robbery_lv1 ) ( defendant ?Defendant ) ( negative 1 ) ( negative-derivator rule6 $? ) ) ( test ( eq ( class ?gen86 ) robbery_lv1 ) ) ( not ( and ( object ( name ?gen93 ) ( is-a robbery_lv3 ) ( defendant ?Defendant ) ( positive ?gen92 & : ( >= ?gen92 1 ) ) ) ( object ( name ?gen86 ) ( is-a robbery_lv1 ) ( positive ~ 2 ) ( negative-overruled $?gen88 & : ( not ( member$ rule6 $?gen88 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen86 ) ( is-a robbery_lv1 ) ( negative 0 ) ) ) ( test ( instance-existp ?gen86 ) ) => ( message-modify-instance ?gen86 ( negative 0 ) ) )
( defrule rule6-defeasibly-gen604 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule6] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen93 ) ( is-a robbery_lv3 ) ( defendant ?Defendant ) ( positive ?gen92 & : ( >= ?gen92 1 ) ) ) ( object ( name ?gen86 ) ( is-a robbery_lv1 ) ( defendant ?Defendant ) ( negative 0 ) ( positive ~ 2 ) ( negative-overruled $?gen88 & : ( not ( member$ rule6 $?gen88 ) ) ) ) ( test ( eq ( class ?gen86 ) robbery_lv1 ) ) ( test ( and ( neq ?Defendant nil ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen86 ) ( is-a robbery_lv1 ) ( negative 1 ) ( negative-derivator rule6 ?gen93 ) ) ) ( test ( instance-existp ?gen86 ) ) => ( message-modify-instance ?gen86 ( negative 1 ) ( negative-derivator rule6 ?gen93 ) ) )
( defrule rule6-overruled-dot-gen606 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule6] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen86 ) ( is-a robbery_lv1 ) ( defendant ?Defendant ) ( positive-support $?gen89 ) ( positive-overruled $?gen90 & : ( subseq-pos ( create$ rule6-overruled $?gen89 $$$ $?gen90 ) ) ) ) ( test ( eq ( class ?gen86 ) robbery_lv1 ) ) ( not ( and ( object ( name ?gen93 ) ( is-a robbery_lv3 ) ( defendant ?Defendant ) ( positive ?gen92 & : ( >= ?gen92 1 ) ) ) ( object ( name ?gen86 ) ( is-a robbery_lv1 ) ( negative-defeated $?gen88 & : ( not ( member$ rule6 $?gen88 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen89 (create$) ) ) ) ( not ( object ( name ?gen86 ) ( is-a robbery_lv1 ) ( positive-overruled $?gen91 & : ( eq $?gen91 ( delete-member$ $?gen90 ( create$ rule6-overruled $?gen89 ) ) ) ) ) ) ( test ( instance-existp ?gen86 ) ) => ( bind $?gen91 ( delete-member$ $?gen90 ( create$ rule6-overruled $?gen89 ) ) ) ( message-modify-instance ?gen86 ( positive-overruled $?gen91 ) ) )
( defrule rule6-overruled-gen608 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule6] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen93 ) ( is-a robbery_lv3 ) ( defendant ?Defendant ) ( positive ?gen92 & : ( >= ?gen92 1 ) ) ) ( object ( name ?gen86 ) ( is-a robbery_lv1 ) ( defendant ?Defendant ) ( positive-support $?gen89 ) ( positive-overruled $?gen90 & : ( not ( subseq-pos ( create$ rule6-overruled $?gen89 $$$ $?gen90 ) ) ) ) ( negative-defeated $?gen88 & : ( not ( member$ rule6 $?gen88 ) ) ) ) ( test ( eq ( class ?gen86 ) robbery_lv1 ) ) ( test ( and ( neq ?Defendant nil ) ( neq ?Defendant nil ) ( neq $?gen89 (create$) ) ) ) ( not ( object ( name ?gen86 ) ( is-a robbery_lv1 ) ( positive-overruled $?gen91 & : ( eq $?gen91 ( create$ rule6-overruled $?gen89 $?gen90 ) ) ) ) ) ( test ( instance-existp ?gen86 ) ) => ( bind $?gen91 ( create$ rule6-overruled $?gen89 $?gen90 ) ) ( message-modify-instance ?gen86 ( positive-overruled $?gen91 ) ) )
( defrule rule6-support-gen610 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule6] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen85 ) ( is-a robbery_lv3 ) ( defendant ?Defendant ) ) ( object ( name ?gen86 ) ( is-a robbery_lv1 ) ( defendant ?Defendant ) ( negative-support $?gen88 & : ( not ( subseq-pos ( create$ rule6 ?gen85 $$$ $?gen88 ) ) ) ) ) ( test ( eq ( class ?gen86 ) robbery_lv1 ) ) ( test ( and ( neq ?Defendant nil ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen86 ) ( is-a robbery_lv1 ) ( negative-support $?gen91 & : ( eq $?gen91 ( create$ rule6 ?gen85 $?gen88 ) ) ) ) ) ( test ( instance-existp ?gen86 ) ) => ( bind $?gen91 ( create$ rule6 ?gen85 $?gen88 ) ) ( message-modify-instance ?gen86 ( negative-support $?gen91 ) ) )
( defrule rule5-defeasibly-dot-gen612 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule5] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen77 ) ( is-a robbery_lv1 ) ( defendant ?Defendant ) ( negative 1 ) ( negative-derivator rule5 $? ) ) ( test ( eq ( class ?gen77 ) robbery_lv1 ) ) ( not ( and ( object ( name ?gen84 ) ( is-a robbery_lv2 ) ( defendant ?Defendant ) ( positive ?gen83 & : ( >= ?gen83 1 ) ) ) ( object ( name ?gen77 ) ( is-a robbery_lv1 ) ( positive ~ 2 ) ( negative-overruled $?gen79 & : ( not ( member$ rule5 $?gen79 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen77 ) ( is-a robbery_lv1 ) ( negative 0 ) ) ) ( test ( instance-existp ?gen77 ) ) => ( message-modify-instance ?gen77 ( negative 0 ) ) )
( defrule rule5-defeasibly-gen614 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule5] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen84 ) ( is-a robbery_lv2 ) ( defendant ?Defendant ) ( positive ?gen83 & : ( >= ?gen83 1 ) ) ) ( object ( name ?gen77 ) ( is-a robbery_lv1 ) ( defendant ?Defendant ) ( negative 0 ) ( positive ~ 2 ) ( negative-overruled $?gen79 & : ( not ( member$ rule5 $?gen79 ) ) ) ) ( test ( eq ( class ?gen77 ) robbery_lv1 ) ) ( test ( and ( neq ?Defendant nil ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen77 ) ( is-a robbery_lv1 ) ( negative 1 ) ( negative-derivator rule5 ?gen84 ) ) ) ( test ( instance-existp ?gen77 ) ) => ( message-modify-instance ?gen77 ( negative 1 ) ( negative-derivator rule5 ?gen84 ) ) )
( defrule rule5-overruled-dot-gen616 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule5] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen77 ) ( is-a robbery_lv1 ) ( defendant ?Defendant ) ( positive-support $?gen80 ) ( positive-overruled $?gen81 & : ( subseq-pos ( create$ rule5-overruled $?gen80 $$$ $?gen81 ) ) ) ) ( test ( eq ( class ?gen77 ) robbery_lv1 ) ) ( not ( and ( object ( name ?gen84 ) ( is-a robbery_lv2 ) ( defendant ?Defendant ) ( positive ?gen83 & : ( >= ?gen83 1 ) ) ) ( object ( name ?gen77 ) ( is-a robbery_lv1 ) ( negative-defeated $?gen79 & : ( not ( member$ rule5 $?gen79 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen80 (create$) ) ) ) ( not ( object ( name ?gen77 ) ( is-a robbery_lv1 ) ( positive-overruled $?gen82 & : ( eq $?gen82 ( delete-member$ $?gen81 ( create$ rule5-overruled $?gen80 ) ) ) ) ) ) ( test ( instance-existp ?gen77 ) ) => ( bind $?gen82 ( delete-member$ $?gen81 ( create$ rule5-overruled $?gen80 ) ) ) ( message-modify-instance ?gen77 ( positive-overruled $?gen82 ) ) )
( defrule rule5-overruled-gen618 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule5] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen84 ) ( is-a robbery_lv2 ) ( defendant ?Defendant ) ( positive ?gen83 & : ( >= ?gen83 1 ) ) ) ( object ( name ?gen77 ) ( is-a robbery_lv1 ) ( defendant ?Defendant ) ( positive-support $?gen80 ) ( positive-overruled $?gen81 & : ( not ( subseq-pos ( create$ rule5-overruled $?gen80 $$$ $?gen81 ) ) ) ) ( negative-defeated $?gen79 & : ( not ( member$ rule5 $?gen79 ) ) ) ) ( test ( eq ( class ?gen77 ) robbery_lv1 ) ) ( test ( and ( neq ?Defendant nil ) ( neq ?Defendant nil ) ( neq $?gen80 (create$) ) ) ) ( not ( object ( name ?gen77 ) ( is-a robbery_lv1 ) ( positive-overruled $?gen82 & : ( eq $?gen82 ( create$ rule5-overruled $?gen80 $?gen81 ) ) ) ) ) ( test ( instance-existp ?gen77 ) ) => ( bind $?gen82 ( create$ rule5-overruled $?gen80 $?gen81 ) ) ( message-modify-instance ?gen77 ( positive-overruled $?gen82 ) ) )
( defrule rule5-support-gen620 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule5] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen76 ) ( is-a robbery_lv2 ) ( defendant ?Defendant ) ) ( object ( name ?gen77 ) ( is-a robbery_lv1 ) ( defendant ?Defendant ) ( negative-support $?gen79 & : ( not ( subseq-pos ( create$ rule5 ?gen76 $$$ $?gen79 ) ) ) ) ) ( test ( eq ( class ?gen77 ) robbery_lv1 ) ) ( test ( and ( neq ?Defendant nil ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen77 ) ( is-a robbery_lv1 ) ( negative-support $?gen82 & : ( eq $?gen82 ( create$ rule5 ?gen76 $?gen79 ) ) ) ) ) ( test ( instance-existp ?gen77 ) ) => ( bind $?gen82 ( create$ rule5 ?gen76 $?gen79 ) ) ( message-modify-instance ?gen77 ( negative-support $?gen82 ) ) )
( defrule rule4-defeasibly-dot-gen622 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen64 ) ( is-a robbery_lv3 ) ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule4 $? ) ) ( test ( eq ( class ?gen64 ) robbery_lv3 ) ) ( not ( and ( object ( name ?gen71 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:money ?Money ) ( positive ?gen70 & : ( >= ?gen70 1 ) ) ) ( object ( name ?gen73 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ( positive ?gen72 & : ( >= ?gen72 1 ) ) ) ( test ( > ?Money 30000 ) ) ( object ( name ?gen75 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "standard" ) ( positive ?gen74 & : ( >= ?gen74 1 ) ) ) ( object ( name ?gen64 ) ( is-a robbery_lv3 ) ( negative ~ 2 ) ( positive-overruled $?gen66 & : ( not ( member$ rule4 $?gen66 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen64 ) ( is-a robbery_lv3 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen64 ) ) => ( message-modify-instance ?gen64 ( positive 0 ) ) )
( defrule rule4-defeasibly-gen624 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen71 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:money ?Money ) ( positive ?gen70 & : ( >= ?gen70 1 ) ) ) ( object ( name ?gen73 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ( positive ?gen72 & : ( >= ?gen72 1 ) ) ) ( test ( > ?Money 30000 ) ) ( object ( name ?gen75 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "standard" ) ( positive ?gen74 & : ( >= ?gen74 1 ) ) ) ( object ( name ?gen64 ) ( is-a robbery_lv3 ) ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen66 & : ( not ( member$ rule4 $?gen66 ) ) ) ) ( test ( eq ( class ?gen64 ) robbery_lv3 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Money (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen64 ) ( is-a robbery_lv3 ) ( positive 1 ) ( positive-derivator rule4 ?gen71 ?gen73 ?gen75 ) ) ) ( test ( instance-existp ?gen64 ) ) => ( message-modify-instance ?gen64 ( positive 1 ) ( positive-derivator rule4 ?gen71 ?gen73 ?gen75 ) ) )
( defrule rule4-overruled-dot-gen626 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen64 ) ( is-a robbery_lv3 ) ( defendant ?Defendant ) ( negative-support $?gen67 ) ( negative-overruled $?gen68 & : ( subseq-pos ( create$ rule4-overruled $?gen67 $$$ $?gen68 ) ) ) ) ( test ( eq ( class ?gen64 ) robbery_lv3 ) ) ( not ( and ( object ( name ?gen71 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:money ?Money ) ( positive ?gen70 & : ( >= ?gen70 1 ) ) ) ( object ( name ?gen73 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ( positive ?gen72 & : ( >= ?gen72 1 ) ) ) ( test ( > ?Money 30000 ) ) ( object ( name ?gen75 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "standard" ) ( positive ?gen74 & : ( >= ?gen74 1 ) ) ) ( object ( name ?gen64 ) ( is-a robbery_lv3 ) ( positive-defeated $?gen66 & : ( not ( member$ rule4 $?gen66 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen67 (create$) ) ) ) ( not ( object ( name ?gen64 ) ( is-a robbery_lv3 ) ( negative-overruled $?gen69 & : ( eq $?gen69 ( delete-member$ $?gen68 ( create$ rule4-overruled $?gen67 ) ) ) ) ) ) ( test ( instance-existp ?gen64 ) ) => ( bind $?gen69 ( delete-member$ $?gen68 ( create$ rule4-overruled $?gen67 ) ) ) ( message-modify-instance ?gen64 ( negative-overruled $?gen69 ) ) )
( defrule rule4-overruled-gen628 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen71 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:money ?Money ) ( positive ?gen70 & : ( >= ?gen70 1 ) ) ) ( object ( name ?gen73 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ( positive ?gen72 & : ( >= ?gen72 1 ) ) ) ( test ( > ?Money 30000 ) ) ( object ( name ?gen75 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "standard" ) ( positive ?gen74 & : ( >= ?gen74 1 ) ) ) ( object ( name ?gen64 ) ( is-a robbery_lv3 ) ( defendant ?Defendant ) ( negative-support $?gen67 ) ( negative-overruled $?gen68 & : ( not ( subseq-pos ( create$ rule4-overruled $?gen67 $$$ $?gen68 ) ) ) ) ( positive-defeated $?gen66 & : ( not ( member$ rule4 $?gen66 ) ) ) ) ( test ( eq ( class ?gen64 ) robbery_lv3 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Money (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ( neq $?gen67 (create$) ) ) ) ( not ( object ( name ?gen64 ) ( is-a robbery_lv3 ) ( negative-overruled $?gen69 & : ( eq $?gen69 ( create$ rule4-overruled $?gen67 $?gen68 ) ) ) ) ) ( test ( instance-existp ?gen64 ) ) => ( bind $?gen69 ( create$ rule4-overruled $?gen67 $?gen68 ) ) ( message-modify-instance ?gen64 ( negative-overruled $?gen69 ) ) )
( defrule rule4-support-gen630 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule4] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen60 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:money ?Money ) ) ( object ( name ?gen61 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ) ( test ( > ?Money 30000 ) ) ( object ( name ?gen63 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "standard" ) ) ( object ( name ?gen64 ) ( is-a robbery_lv3 ) ( defendant ?Defendant ) ( positive-support $?gen66 & : ( not ( subseq-pos ( create$ rule4 ?gen60 ?gen61 ?gen63 $$$ $?gen66 ) ) ) ) ) ( test ( eq ( class ?gen64 ) robbery_lv3 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Money (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen64 ) ( is-a robbery_lv3 ) ( positive-support $?gen69 & : ( eq $?gen69 ( create$ rule4 ?gen60 ?gen61 ?gen63 $?gen66 ) ) ) ) ) ( test ( instance-existp ?gen64 ) ) => ( bind $?gen69 ( create$ rule4 ?gen60 ?gen61 ?gen63 $?gen66 ) ) ( message-modify-instance ?gen64 ( positive-support $?gen69 ) ) )
( defrule rule3-defeasibly-dot-gen632 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule3] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen48 ) ( is-a robbery_lv2 ) ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule3 $? ) ) ( test ( eq ( class ?gen48 ) robbery_lv2 ) ) ( not ( and ( object ( name ?gen55 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:money ?Money ) ( positive ?gen54 & : ( >= ?gen54 1 ) ) ) ( object ( name ?gen57 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ( positive ?gen56 & : ( >= ?gen56 1 ) ) ) ( test ( > ?Money 3000 ) ) ( test ( <= ?Money 30000 ) ) ( object ( name ?gen59 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "standard" ) ( positive ?gen58 & : ( >= ?gen58 1 ) ) ) ( object ( name ?gen48 ) ( is-a robbery_lv2 ) ( negative ~ 2 ) ( positive-overruled $?gen50 & : ( not ( member$ rule3 $?gen50 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen48 ) ( is-a robbery_lv2 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen48 ) ) => ( message-modify-instance ?gen48 ( positive 0 ) ) )
( defrule rule3-defeasibly-gen634 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule3] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen55 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:money ?Money ) ( positive ?gen54 & : ( >= ?gen54 1 ) ) ) ( object ( name ?gen57 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ( positive ?gen56 & : ( >= ?gen56 1 ) ) ) ( test ( > ?Money 3000 ) ) ( test ( <= ?Money 30000 ) ) ( object ( name ?gen59 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "standard" ) ( positive ?gen58 & : ( >= ?gen58 1 ) ) ) ( object ( name ?gen48 ) ( is-a robbery_lv2 ) ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen50 & : ( not ( member$ rule3 $?gen50 ) ) ) ) ( test ( eq ( class ?gen48 ) robbery_lv2 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Money (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen48 ) ( is-a robbery_lv2 ) ( positive 1 ) ( positive-derivator rule3 ?gen55 ?gen57 ?gen59 ) ) ) ( test ( instance-existp ?gen48 ) ) => ( message-modify-instance ?gen48 ( positive 1 ) ( positive-derivator rule3 ?gen55 ?gen57 ?gen59 ) ) )
( defrule rule3-overruled-dot-gen636 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule3] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen48 ) ( is-a robbery_lv2 ) ( defendant ?Defendant ) ( negative-support $?gen51 ) ( negative-overruled $?gen52 & : ( subseq-pos ( create$ rule3-overruled $?gen51 $$$ $?gen52 ) ) ) ) ( test ( eq ( class ?gen48 ) robbery_lv2 ) ) ( not ( and ( object ( name ?gen55 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:money ?Money ) ( positive ?gen54 & : ( >= ?gen54 1 ) ) ) ( object ( name ?gen57 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ( positive ?gen56 & : ( >= ?gen56 1 ) ) ) ( test ( > ?Money 3000 ) ) ( test ( <= ?Money 30000 ) ) ( object ( name ?gen59 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "standard" ) ( positive ?gen58 & : ( >= ?gen58 1 ) ) ) ( object ( name ?gen48 ) ( is-a robbery_lv2 ) ( positive-defeated $?gen50 & : ( not ( member$ rule3 $?gen50 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen51 (create$) ) ) ) ( not ( object ( name ?gen48 ) ( is-a robbery_lv2 ) ( negative-overruled $?gen53 & : ( eq $?gen53 ( delete-member$ $?gen52 ( create$ rule3-overruled $?gen51 ) ) ) ) ) ) ( test ( instance-existp ?gen48 ) ) => ( bind $?gen53 ( delete-member$ $?gen52 ( create$ rule3-overruled $?gen51 ) ) ) ( message-modify-instance ?gen48 ( negative-overruled $?gen53 ) ) )
( defrule rule3-overruled-gen638 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule3] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen55 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:money ?Money ) ( positive ?gen54 & : ( >= ?gen54 1 ) ) ) ( object ( name ?gen57 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ( positive ?gen56 & : ( >= ?gen56 1 ) ) ) ( test ( > ?Money 3000 ) ) ( test ( <= ?Money 30000 ) ) ( object ( name ?gen59 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "standard" ) ( positive ?gen58 & : ( >= ?gen58 1 ) ) ) ( object ( name ?gen48 ) ( is-a robbery_lv2 ) ( defendant ?Defendant ) ( negative-support $?gen51 ) ( negative-overruled $?gen52 & : ( not ( subseq-pos ( create$ rule3-overruled $?gen51 $$$ $?gen52 ) ) ) ) ( positive-defeated $?gen50 & : ( not ( member$ rule3 $?gen50 ) ) ) ) ( test ( eq ( class ?gen48 ) robbery_lv2 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Money (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ( neq $?gen51 (create$) ) ) ) ( not ( object ( name ?gen48 ) ( is-a robbery_lv2 ) ( negative-overruled $?gen53 & : ( eq $?gen53 ( create$ rule3-overruled $?gen51 $?gen52 ) ) ) ) ) ( test ( instance-existp ?gen48 ) ) => ( bind $?gen53 ( create$ rule3-overruled $?gen51 $?gen52 ) ) ( message-modify-instance ?gen48 ( negative-overruled $?gen53 ) ) )
( defrule rule3-support-gen640 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule3] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen43 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:money ?Money ) ) ( object ( name ?gen44 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ) ( test ( > ?Money 3000 ) ) ( test ( <= ?Money 30000 ) ) ( object ( name ?gen47 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "standard" ) ) ( object ( name ?gen48 ) ( is-a robbery_lv2 ) ( defendant ?Defendant ) ( positive-support $?gen50 & : ( not ( subseq-pos ( create$ rule3 ?gen43 ?gen44 ?gen47 $$$ $?gen50 ) ) ) ) ) ( test ( eq ( class ?gen48 ) robbery_lv2 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Money (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen48 ) ( is-a robbery_lv2 ) ( positive-support $?gen53 & : ( eq $?gen53 ( create$ rule3 ?gen43 ?gen44 ?gen47 $?gen50 ) ) ) ) ) ( test ( instance-existp ?gen48 ) ) => ( bind $?gen53 ( create$ rule3 ?gen43 ?gen44 ?gen47 $?gen50 ) ) ( message-modify-instance ?gen48 ( positive-support $?gen53 ) ) )
( defrule rule2-defeasibly-dot-gen642 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen31 ) ( is-a robbery_min_imprisonment_lv2_3 ) ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule2 $? ) ) ( test ( eq ( class ?gen31 ) robbery_min_imprisonment_lv2_3 ) ) ( not ( and ( object ( name ?gen38 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:money ?Money ) ( positive ?gen37 & : ( >= ?gen37 1 ) ) ) ( object ( name ?gen40 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ( positive ?gen39 & : ( >= ?gen39 1 ) ) ) ( test ( > ?Money 3000 ) ) ( object ( name ?gen42 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "standard" ) ( positive ?gen41 & : ( >= ?gen41 1 ) ) ) ( object ( name ?gen31 ) ( is-a robbery_min_imprisonment_lv2_3 ) ( negative ~ 2 ) ( positive-overruled $?gen33 & : ( not ( member$ rule2 $?gen33 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen31 ) ( is-a robbery_min_imprisonment_lv2_3 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen31 ) ) => ( message-modify-instance ?gen31 ( positive 0 ) ) )
( defrule rule2-defeasibly-gen644 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen38 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:money ?Money ) ( positive ?gen37 & : ( >= ?gen37 1 ) ) ) ( object ( name ?gen40 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ( positive ?gen39 & : ( >= ?gen39 1 ) ) ) ( test ( > ?Money 3000 ) ) ( object ( name ?gen42 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "standard" ) ( positive ?gen41 & : ( >= ?gen41 1 ) ) ) ( object ( name ?gen31 ) ( is-a robbery_min_imprisonment_lv2_3 ) ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen33 & : ( not ( member$ rule2 $?gen33 ) ) ) ) ( test ( eq ( class ?gen31 ) robbery_min_imprisonment_lv2_3 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Money (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen31 ) ( is-a robbery_min_imprisonment_lv2_3 ) ( positive 1 ) ( positive-derivator rule2 ?gen38 ?gen40 ?gen42 ) ) ) ( test ( instance-existp ?gen31 ) ) => ( message-modify-instance ?gen31 ( positive 1 ) ( positive-derivator rule2 ?gen38 ?gen40 ?gen42 ) ) )
( defrule rule2-overruled-dot-gen646 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen31 ) ( is-a robbery_min_imprisonment_lv2_3 ) ( defendant ?Defendant ) ( negative-support $?gen34 ) ( negative-overruled $?gen35 & : ( subseq-pos ( create$ rule2-overruled $?gen34 $$$ $?gen35 ) ) ) ) ( test ( eq ( class ?gen31 ) robbery_min_imprisonment_lv2_3 ) ) ( not ( and ( object ( name ?gen38 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:money ?Money ) ( positive ?gen37 & : ( >= ?gen37 1 ) ) ) ( object ( name ?gen40 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ( positive ?gen39 & : ( >= ?gen39 1 ) ) ) ( test ( > ?Money 3000 ) ) ( object ( name ?gen42 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "standard" ) ( positive ?gen41 & : ( >= ?gen41 1 ) ) ) ( object ( name ?gen31 ) ( is-a robbery_min_imprisonment_lv2_3 ) ( positive-defeated $?gen33 & : ( not ( member$ rule2 $?gen33 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen34 (create$) ) ) ) ( not ( object ( name ?gen31 ) ( is-a robbery_min_imprisonment_lv2_3 ) ( negative-overruled $?gen36 & : ( eq $?gen36 ( delete-member$ $?gen35 ( create$ rule2-overruled $?gen34 ) ) ) ) ) ) ( test ( instance-existp ?gen31 ) ) => ( bind $?gen36 ( delete-member$ $?gen35 ( create$ rule2-overruled $?gen34 ) ) ) ( message-modify-instance ?gen31 ( negative-overruled $?gen36 ) ) )
( defrule rule2-overruled-gen648 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen38 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:money ?Money ) ( positive ?gen37 & : ( >= ?gen37 1 ) ) ) ( object ( name ?gen40 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ( positive ?gen39 & : ( >= ?gen39 1 ) ) ) ( test ( > ?Money 3000 ) ) ( object ( name ?gen42 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "standard" ) ( positive ?gen41 & : ( >= ?gen41 1 ) ) ) ( object ( name ?gen31 ) ( is-a robbery_min_imprisonment_lv2_3 ) ( defendant ?Defendant ) ( negative-support $?gen34 ) ( negative-overruled $?gen35 & : ( not ( subseq-pos ( create$ rule2-overruled $?gen34 $$$ $?gen35 ) ) ) ) ( positive-defeated $?gen33 & : ( not ( member$ rule2 $?gen33 ) ) ) ) ( test ( eq ( class ?gen31 ) robbery_min_imprisonment_lv2_3 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Money (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ( neq $?gen34 (create$) ) ) ) ( not ( object ( name ?gen31 ) ( is-a robbery_min_imprisonment_lv2_3 ) ( negative-overruled $?gen36 & : ( eq $?gen36 ( create$ rule2-overruled $?gen34 $?gen35 ) ) ) ) ) ( test ( instance-existp ?gen31 ) ) => ( bind $?gen36 ( create$ rule2-overruled $?gen34 $?gen35 ) ) ( message-modify-instance ?gen31 ( negative-overruled $?gen36 ) ) )
( defrule rule2-support-gen650 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule2] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen27 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:money ?Money ) ) ( object ( name ?gen28 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ) ( test ( > ?Money 3000 ) ) ( object ( name ?gen30 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "standard" ) ) ( object ( name ?gen31 ) ( is-a robbery_min_imprisonment_lv2_3 ) ( defendant ?Defendant ) ( positive-support $?gen33 & : ( not ( subseq-pos ( create$ rule2 ?gen27 ?gen28 ?gen30 $$$ $?gen33 ) ) ) ) ) ( test ( eq ( class ?gen31 ) robbery_min_imprisonment_lv2_3 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Money (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen31 ) ( is-a robbery_min_imprisonment_lv2_3 ) ( positive-support $?gen36 & : ( eq $?gen36 ( create$ rule2 ?gen27 ?gen28 ?gen30 $?gen33 ) ) ) ) ) ( test ( instance-existp ?gen31 ) ) => ( bind $?gen36 ( create$ rule2 ?gen27 ?gen28 ?gen30 $?gen33 ) ) ( message-modify-instance ?gen31 ( positive-support $?gen36 ) ) )
( defrule rule1-defeasibly-dot-gen652 ( declare ( salience ( + 1000 ( calc-defeasible-priority -1 [rule1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen17 ) ( is-a robbery_lv1 ) ( defendant ?Defendant ) ( positive 1 ) ( positive-derivator rule1 $? ) ) ( test ( eq ( class ?gen17 ) robbery_lv1 ) ) ( not ( and ( object ( name ?gen24 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ( positive ?gen23 & : ( >= ?gen23 1 ) ) ) ( object ( name ?gen26 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "standard" ) ( positive ?gen25 & : ( >= ?gen25 1 ) ) ) ( object ( name ?gen17 ) ( is-a robbery_lv1 ) ( negative ~ 2 ) ( positive-overruled $?gen19 & : ( not ( member$ rule1 $?gen19 ) ) ) ) ) ) ( test ( neq ?Defendant nil ) ) ( not ( object ( name ?gen17 ) ( is-a robbery_lv1 ) ( positive 0 ) ) ) ( test ( instance-existp ?gen17 ) ) => ( message-modify-instance ?gen17 ( positive 0 ) ) )
( defrule rule1-defeasibly-gen654 ( declare ( salience ( + 1000 ( calc-defeasible-priority 1 [rule1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen24 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ( positive ?gen23 & : ( >= ?gen23 1 ) ) ) ( object ( name ?gen26 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "standard" ) ( positive ?gen25 & : ( >= ?gen25 1 ) ) ) ( object ( name ?gen17 ) ( is-a robbery_lv1 ) ( defendant ?Defendant ) ( positive 0 ) ( negative ~ 2 ) ( positive-overruled $?gen19 & : ( not ( member$ rule1 $?gen19 ) ) ) ) ( test ( eq ( class ?gen17 ) robbery_lv1 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen17 ) ( is-a robbery_lv1 ) ( positive 1 ) ( positive-derivator rule1 ?gen24 ?gen26 ) ) ) ( test ( instance-existp ?gen17 ) ) => ( message-modify-instance ?gen17 ( positive 1 ) ( positive-derivator rule1 ?gen24 ?gen26 ) ) )
( defrule rule1-overruled-dot-gen656 ( declare ( salience ( + 1000 ( calc-defeasible-priority -2 [rule1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen17 ) ( is-a robbery_lv1 ) ( defendant ?Defendant ) ( negative-support $?gen20 ) ( negative-overruled $?gen21 & : ( subseq-pos ( create$ rule1-overruled $?gen20 $$$ $?gen21 ) ) ) ) ( test ( eq ( class ?gen17 ) robbery_lv1 ) ) ( not ( and ( object ( name ?gen24 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ( positive ?gen23 & : ( >= ?gen23 1 ) ) ) ( object ( name ?gen26 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "standard" ) ( positive ?gen25 & : ( >= ?gen25 1 ) ) ) ( object ( name ?gen17 ) ( is-a robbery_lv1 ) ( positive-defeated $?gen19 & : ( not ( member$ rule1 $?gen19 ) ) ) ) ) ) ( test ( and ( neq ?Defendant nil ) ( neq $?gen20 (create$) ) ) ) ( not ( object ( name ?gen17 ) ( is-a robbery_lv1 ) ( negative-overruled $?gen22 & : ( eq $?gen22 ( delete-member$ $?gen21 ( create$ rule1-overruled $?gen20 ) ) ) ) ) ) ( test ( instance-existp ?gen17 ) ) => ( bind $?gen22 ( delete-member$ $?gen21 ( create$ rule1-overruled $?gen20 ) ) ) ( message-modify-instance ?gen17 ( negative-overruled $?gen22 ) ) )
( defrule rule1-overruled-gen658 ( declare ( salience ( + 1000 ( calc-defeasible-priority 2 [rule1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen24 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ( positive ?gen23 & : ( >= ?gen23 1 ) ) ) ( object ( name ?gen26 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "standard" ) ( positive ?gen25 & : ( >= ?gen25 1 ) ) ) ( object ( name ?gen17 ) ( is-a robbery_lv1 ) ( defendant ?Defendant ) ( negative-support $?gen20 ) ( negative-overruled $?gen21 & : ( not ( subseq-pos ( create$ rule1-overruled $?gen20 $$$ $?gen21 ) ) ) ) ( positive-defeated $?gen19 & : ( not ( member$ rule1 $?gen19 ) ) ) ) ( test ( eq ( class ?gen17 ) robbery_lv1 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ( neq $?gen20 (create$) ) ) ) ( not ( object ( name ?gen17 ) ( is-a robbery_lv1 ) ( negative-overruled $?gen22 & : ( eq $?gen22 ( create$ rule1-overruled $?gen20 $?gen21 ) ) ) ) ) ( test ( instance-existp ?gen17 ) ) => ( bind $?gen22 ( create$ rule1-overruled $?gen20 $?gen21 ) ) ( message-modify-instance ?gen17 ( negative-overruled $?gen22 ) ) )
( defrule rule1-support-gen660 ( declare ( salience ( + 1000 ( calc-defeasible-priority 5 [rule1] ) ) ) ) ( run-deductive-rules ) ( object ( name ?gen15 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ) ( object ( name ?gen16 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "standard" ) ) ( object ( name ?gen17 ) ( is-a robbery_lv1 ) ( defendant ?Defendant ) ( positive-support $?gen19 & : ( not ( subseq-pos ( create$ rule1 ?gen15 ?gen16 $$$ $?gen19 ) ) ) ) ) ( test ( eq ( class ?gen17 ) robbery_lv1 ) ) ( test ( and ( neq ?Defendant (create$) ) ( neq ?Defendant (create$) ) ( neq ?Defendant nil ) ) ) ( not ( object ( name ?gen17 ) ( is-a robbery_lv1 ) ( positive-support $?gen22 & : ( eq $?gen22 ( create$ rule1 ?gen15 ?gen16 $?gen19 ) ) ) ) ) ( test ( instance-existp ?gen17 ) ) => ( bind $?gen22 ( create$ rule1 ?gen15 ?gen16 $?gen19 ) ) ( message-modify-instance ?gen17 ( positive-support $?gen22 ) ) )
( defrule pen15-deductive-gen361 ( declare ( salience ( calc-salience max_imprisonment_competition_outcome_arrangement_3 ) ) ) ( run-deductive-rules ) ( object ( name ?gen323 ) ( is-a competition_outcome_arrangement_lv3 ) ( defendant ?Defendant ) ) ( not ( object ( is-a max_imprisonment_competition_outcome_arrangement_3 ) ( value 10 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat max_imprisonment_competition_outcome_arrangement_3 10 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat max_imprisonment_competition_outcome_arrangement_3 10 ) ) ) ( make-instance ?oid of max_imprisonment_competition_outcome_arrangement_3 ( value 10 ) ) )
( defrule pen14-deductive-gen360 ( declare ( salience ( calc-salience min_imprisonment_competition_outcome_arrangement_2 ) ) ) ( run-deductive-rules ) ( object ( name ?gen314 ) ( is-a competition_outcome_arrangement_lv3 ) ( defendant ?Defendant ) ) ( not ( object ( is-a min_imprisonment_competition_outcome_arrangement_2 ) ( value 1 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat min_imprisonment_competition_outcome_arrangement_2 1 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat min_imprisonment_competition_outcome_arrangement_2 1 ) ) ) ( make-instance ?oid of min_imprisonment_competition_outcome_arrangement_2 ( value 1 ) ) )
( defrule pen13-deductive-gen359 ( declare ( salience ( calc-salience max_imprisonment_competition_outcome_arrangement_2 ) ) ) ( run-deductive-rules ) ( object ( name ?gen305 ) ( is-a competition_outcome_arrangement_lv2 ) ( defendant ?Defendant ) ) ( not ( object ( is-a max_imprisonment_competition_outcome_arrangement_2 ) ( value 5 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat max_imprisonment_competition_outcome_arrangement_2 5 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat max_imprisonment_competition_outcome_arrangement_2 5 ) ) ) ( make-instance ?oid of max_imprisonment_competition_outcome_arrangement_2 ( value 5 ) ) )
( defrule pen12-deductive-gen358 ( declare ( salience ( calc-salience min_imprisonment_competition_outcome_arrangement_1 ) ) ) ( run-deductive-rules ) ( object ( name ?gen296 ) ( is-a competition_outcome_arrangement_lv2 ) ( defendant ?Defendant ) ) ( not ( object ( is-a min_imprisonment_competition_outcome_arrangement_1 ) ( value 6 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat min_imprisonment_competition_outcome_arrangement_1 6 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat min_imprisonment_competition_outcome_arrangement_1 6 ) ) ) ( make-instance ?oid of min_imprisonment_competition_outcome_arrangement_1 ( value 6 ) ) )
( defrule pen11-deductive-gen357 ( declare ( salience ( calc-salience max_imprisonment_competition_outcome_arrangement_1 ) ) ) ( run-deductive-rules ) ( object ( name ?gen287 ) ( is-a competition_outcome_arrangement_lv1 ) ( defendant ?Defendant ) ) ( not ( object ( is-a max_imprisonment_competition_outcome_arrangement_1 ) ( value 3 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat max_imprisonment_competition_outcome_arrangement_1 3 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat max_imprisonment_competition_outcome_arrangement_1 3 ) ) ) ( make-instance ?oid of max_imprisonment_competition_outcome_arrangement_1 ( value 3 ) ) )
( defrule pen10-deductive-gen356 ( declare ( salience ( calc-salience max_imprisonment_robbery_6 ) ) ) ( run-deductive-rules ) ( object ( name ?gen278 ) ( is-a robbery_lv6 ) ( defendant ?Defendant ) ) ( not ( object ( is-a max_imprisonment_robbery_6 ) ( value 3 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat max_imprisonment_robbery_6 3 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat max_imprisonment_robbery_6 3 ) ) ) ( make-instance ?oid of max_imprisonment_robbery_6 ( value 3 ) ) )
( defrule pen9-deductive-gen355 ( declare ( salience ( calc-salience max_imprisonment_robbery_5 ) ) ) ( run-deductive-rules ) ( object ( name ?gen269 ) ( is-a robbery_lv5 ) ( defendant ?Defendant ) ) ( not ( object ( is-a max_imprisonment_robbery_5 ) ( value Forever ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat max_imprisonment_robbery_5 Forever ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat max_imprisonment_robbery_5 Forever ) ) ) ( make-instance ?oid of max_imprisonment_robbery_5 ( value Forever ) ) )
( defrule pen8-deductive-gen354 ( declare ( salience ( calc-salience min_imprisonment_robbery_4 ) ) ) ( run-deductive-rules ) ( object ( name ?gen260 ) ( is-a robbery_lv5 ) ( defendant ?Defendant ) ) ( not ( object ( is-a min_imprisonment_robbery_4 ) ( value 10 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat min_imprisonment_robbery_4 10 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat min_imprisonment_robbery_4 10 ) ) ) ( make-instance ?oid of min_imprisonment_robbery_4 ( value 10 ) ) )
( defrule pen7-deductive-gen353 ( declare ( salience ( calc-salience max_imprisonment_robbery_4 ) ) ) ( run-deductive-rules ) ( object ( name ?gen251 ) ( is-a robbery_lv4 ) ( defendant ?Defendant ) ) ( not ( object ( is-a max_imprisonment_robbery_4 ) ( value 15 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat max_imprisonment_robbery_4 15 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat max_imprisonment_robbery_4 15 ) ) ) ( make-instance ?oid of max_imprisonment_robbery_4 ( value 15 ) ) )
( defrule pen6-deductive-gen352 ( declare ( salience ( calc-salience min_imprisonment_robbery_3 ) ) ) ( run-deductive-rules ) ( object ( name ?gen242 ) ( is-a robbery_lv4 ) ( defendant ?Defendant ) ) ( not ( object ( is-a min_imprisonment_robbery_3 ) ( value 3 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat min_imprisonment_robbery_3 3 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat min_imprisonment_robbery_3 3 ) ) ) ( make-instance ?oid of min_imprisonment_robbery_3 ( value 3 ) ) )
( defrule pen5-deductive-gen351 ( declare ( salience ( calc-salience max_imprisonment_robbery_3 ) ) ) ( run-deductive-rules ) ( object ( name ?gen233 ) ( is-a robbery_lv3 ) ( defendant ?Defendant ) ) ( not ( object ( is-a max_imprisonment_robbery_3 ) ( value 12 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat max_imprisonment_robbery_3 12 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat max_imprisonment_robbery_3 12 ) ) ) ( make-instance ?oid of max_imprisonment_robbery_3 ( value 12 ) ) )
( defrule pen4-deductive-gen350 ( declare ( salience ( calc-salience max_imprisonment_robbery_2 ) ) ) ( run-deductive-rules ) ( object ( name ?gen224 ) ( is-a robbery_lv2 ) ( defendant ?Defendant ) ) ( not ( object ( is-a max_imprisonment_robbery_2 ) ( value 10 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat max_imprisonment_robbery_2 10 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat max_imprisonment_robbery_2 10 ) ) ) ( make-instance ?oid of max_imprisonment_robbery_2 ( value 10 ) ) )
( defrule pen3-deductive-gen349 ( declare ( salience ( calc-salience min_imprisonment_robbery_2 ) ) ) ( run-deductive-rules ) ( object ( name ?gen215 ) ( is-a robbery_min_imprisonment_lv2_3 ) ( defendant ?Defendant ) ) ( not ( object ( is-a min_imprisonment_robbery_2 ) ( value 2 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat min_imprisonment_robbery_2 2 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat min_imprisonment_robbery_2 2 ) ) ) ( make-instance ?oid of min_imprisonment_robbery_2 ( value 2 ) ) )
( defrule pen2-deductive-gen348 ( declare ( salience ( calc-salience max_imprisonment_robbery_1 ) ) ) ( run-deductive-rules ) ( object ( name ?gen206 ) ( is-a robbery_lv1 ) ( defendant ?Defendant ) ) ( not ( object ( is-a max_imprisonment_robbery_1 ) ( value 8 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat max_imprisonment_robbery_1 8 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat max_imprisonment_robbery_1 8 ) ) ) ( make-instance ?oid of max_imprisonment_robbery_1 ( value 8 ) ) )
( defrule pen1-deductive-gen347 ( declare ( salience ( calc-salience min_imprisonment_robbery_1 ) ) ) ( run-deductive-rules ) ( object ( name ?gen197 ) ( is-a robbery_lv1 ) ( defendant ?Defendant ) ) ( not ( object ( is-a min_imprisonment_robbery_1 ) ( value 1 ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat min_imprisonment_robbery_1 1 ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat min_imprisonment_robbery_1 1 ) ) ) ( make-instance ?oid of min_imprisonment_robbery_1 ( value 1 ) ) )
( defrule rule13-deductive-gen344 ( declare ( salience ( calc-salience competition_outcome_arrangement_lv3 ) ) ) ( run-deductive-rules ) ( object ( name ?gen166 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:money ?Money ) ) ( object ( name ?gen167 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "competition_outcome_arrangement" ) ) ( test ( > ?Money 40000 ) ) ( not ( object ( is-a competition_outcome_arrangement_lv3 ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat competition_outcome_arrangement_lv3 ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat competition_outcome_arrangement_lv3 ?Defendant ) ) ) ( make-instance ?oid of competition_outcome_arrangement_lv3 ( defendant ?Defendant ) ) )
( defrule rule12-deductive-gen343 ( declare ( salience ( calc-salience competition_outcome_arrangement_lv2 ) ) ) ( run-deductive-rules ) ( object ( name ?gen152 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:money ?Money ) ) ( object ( name ?gen153 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "competition_outcome_arrangement" ) ) ( test ( > ?Money 10000 ) ) ( test ( <= ?Money 40000 ) ) ( not ( object ( is-a competition_outcome_arrangement_lv2 ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat competition_outcome_arrangement_lv2 ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat competition_outcome_arrangement_lv2 ?Defendant ) ) ) ( make-instance ?oid of competition_outcome_arrangement_lv2 ( defendant ?Defendant ) ) )
( defrule rule11-deductive-gen342 ( declare ( salience ( calc-salience competition_outcome_arrangement_lv1 ) ) ) ( run-deductive-rules ) ( object ( name ?gen143 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "competition_outcome_arrangement" ) ) ( not ( object ( is-a competition_outcome_arrangement_lv1 ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat competition_outcome_arrangement_lv1 ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat competition_outcome_arrangement_lv1 ?Defendant ) ) ) ( make-instance ?oid of competition_outcome_arrangement_lv1 ( defendant ?Defendant ) ) )
( defrule rule9-deductive-gen340 ( declare ( salience ( calc-salience robbery_lv6 ) ) ) ( run-deductive-rules ) ( object ( name ?gen118 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:money ?Money ) ) ( object ( name ?gen119 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ) ( object ( name ?gen120 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "standard" ) ) ( test ( < ?Money 150 ) ) ( not ( object ( is-a robbery_lv6 ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat robbery_lv6 ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat robbery_lv6 ?Defendant ) ) ) ( make-instance ?oid of robbery_lv6 ( defendant ?Defendant ) ) )
( defrule rule8-deductive-gen339 ( declare ( salience ( calc-salience robbery_lv5 ) ) ) ( run-deductive-rules ) ( object ( name ?gen106 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ) ( object ( name ?gen107 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "deprived_of_life" ) ) ( not ( object ( is-a robbery_lv5 ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat robbery_lv5 ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat robbery_lv5 ?Defendant ) ) ) ( make-instance ?oid of robbery_lv5 ( defendant ?Defendant ) ) )
( defrule rule7-deductive-gen338 ( declare ( salience ( calc-salience robbery_lv4 ) ) ) ( run-deductive-rules ) ( object ( name ?gen94 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ) ( object ( name ?gen95 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "group_or_seriously_injured" ) ) ( not ( object ( is-a robbery_lv4 ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat robbery_lv4 ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat robbery_lv4 ?Defendant ) ) ) ( make-instance ?oid of robbery_lv4 ( defendant ?Defendant ) ) )
( defrule rule4-deductive-gen335 ( declare ( salience ( calc-salience robbery_lv3 ) ) ) ( run-deductive-rules ) ( object ( name ?gen60 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:money ?Money ) ) ( object ( name ?gen61 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ) ( test ( > ?Money 30000 ) ) ( object ( name ?gen63 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "standard" ) ) ( not ( object ( is-a robbery_lv3 ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat robbery_lv3 ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat robbery_lv3 ?Defendant ) ) ) ( make-instance ?oid of robbery_lv3 ( defendant ?Defendant ) ) )
( defrule rule3-deductive-gen334 ( declare ( salience ( calc-salience robbery_lv2 ) ) ) ( run-deductive-rules ) ( object ( name ?gen43 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:money ?Money ) ) ( object ( name ?gen44 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ) ( test ( > ?Money 3000 ) ) ( test ( <= ?Money 30000 ) ) ( object ( name ?gen47 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "standard" ) ) ( not ( object ( is-a robbery_lv2 ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat robbery_lv2 ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat robbery_lv2 ?Defendant ) ) ) ( make-instance ?oid of robbery_lv2 ( defendant ?Defendant ) ) )
( defrule rule2-deductive-gen333 ( declare ( salience ( calc-salience robbery_min_imprisonment_lv2_3 ) ) ) ( run-deductive-rules ) ( object ( name ?gen27 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:money ?Money ) ) ( object ( name ?gen28 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ) ( test ( > ?Money 3000 ) ) ( object ( name ?gen30 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "standard" ) ) ( not ( object ( is-a robbery_min_imprisonment_lv2_3 ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat robbery_min_imprisonment_lv2_3 ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat robbery_min_imprisonment_lv2_3 ?Defendant ) ) ) ( make-instance ?oid of robbery_min_imprisonment_lv2_3 ( defendant ?Defendant ) ) )
( defrule rule1-deductive-gen332 ( declare ( salience ( calc-salience robbery_lv1 ) ) ) ( run-deductive-rules ) ( object ( name ?gen15 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_type "robbery" ) ) ( object ( name ?gen16 ) ( is-a lc:case ) ( lc:defendant ?Defendant ) ( lc:steal_way "standard" ) ) ( not ( object ( is-a robbery_lv1 ) ( defendant ?Defendant ) ) ) ( test ( not ( instance-existp ( symbol-to-instance-name ( sym-cat robbery_lv1 ?Defendant ) ) ) ) ) => ( bind ?oid ( symbol-to-instance-name ( sym-cat robbery_lv1 ?Defendant ) ) ) ( make-instance ?oid of robbery_lv1 ( defendant ?Defendant ) ) )
