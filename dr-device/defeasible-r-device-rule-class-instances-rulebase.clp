([robbery_lv1] of defeasible-class
   (class-refs rdfs:isDefinedBy rdfs:Resource rdf:type rdfs:Class rdfs:seeAlso rdfs:Resource rdfs:subClassOf rdfs:Class rules defeasible-logic-rule)
   (aliases rdfs:seeAlso rdfs:isDefinedBy)
   (positive 0)
   (negative 0)
   (positive-derivator)
   (negative-derivator)
   (positive-support)
   (negative-support)
   (positive-overruled)
   (negative-overruled)
   (positive-defeated)
   (negative-defeated)
   (proof nil)
   (uri nil)
   (source rdf)
   (lc:name)
   (lc:defendant)
   (lc:steal_type)
   (lc:intention)
   (lc:steal_way)
   (lc:money)
   (rdfs:isDefinedBy)
   (rdf:type [rdfs:Class])
   (rdf:value)
   (rdfs:comment)
   (rdfs:label robbery_lv1)
   (rdfs:seeAlso)
   (rdfs:subClassOf [defeasible-class])
   (class-name robbery_lv1)
   (rules [rule10] [rule6] [rule5] [rule1])
   (defeasible-stratum 0))

([robbery_min_imprisonment_lv2_3] of defeasible-class
   (class-refs rdfs:isDefinedBy rdfs:Resource rdf:type rdfs:Class rdfs:seeAlso rdfs:Resource rdfs:subClassOf rdfs:Class rules defeasible-logic-rule)
   (aliases rdfs:seeAlso rdfs:isDefinedBy)
   (positive 0)
   (negative 0)
   (positive-derivator)
   (negative-derivator)
   (positive-support)
   (negative-support)
   (positive-overruled)
   (negative-overruled)
   (positive-defeated)
   (negative-defeated)
   (proof nil)
   (uri nil)
   (source rdf)
   (lc:name)
   (lc:defendant)
   (lc:steal_type)
   (lc:intention)
   (lc:steal_way)
   (lc:money)
   (rdfs:isDefinedBy)
   (rdf:type [rdfs:Class])
   (rdf:value)
   (rdfs:comment)
   (rdfs:label robbery_min_imprisonment_lv2_3)
   (rdfs:seeAlso)
   (rdfs:subClassOf [defeasible-class])
   (class-name robbery_min_imprisonment_lv2_3)
   (rules [rule2])
   (defeasible-stratum 0))

([robbery_lv2] of defeasible-class
   (class-refs rdfs:isDefinedBy rdfs:Resource rdf:type rdfs:Class rdfs:seeAlso rdfs:Resource rdfs:subClassOf rdfs:Class rules defeasible-logic-rule)
   (aliases rdfs:seeAlso rdfs:isDefinedBy)
   (positive 0)
   (negative 0)
   (positive-derivator)
   (negative-derivator)
   (positive-support)
   (negative-support)
   (positive-overruled)
   (negative-overruled)
   (positive-defeated)
   (negative-defeated)
   (proof nil)
   (uri nil)
   (source rdf)
   (lc:name)
   (lc:defendant)
   (lc:steal_type)
   (lc:intention)
   (lc:steal_way)
   (lc:money)
   (rdfs:isDefinedBy)
   (rdf:type [rdfs:Class])
   (rdf:value)
   (rdfs:comment)
   (rdfs:label robbery_lv2)
   (rdfs:seeAlso)
   (rdfs:subClassOf [defeasible-class])
   (class-name robbery_lv2)
   (rules [rule3])
   (defeasible-stratum 0))

([robbery_lv3] of defeasible-class
   (class-refs rdfs:isDefinedBy rdfs:Resource rdf:type rdfs:Class rdfs:seeAlso rdfs:Resource rdfs:subClassOf rdfs:Class rules defeasible-logic-rule)
   (aliases rdfs:seeAlso rdfs:isDefinedBy)
   (positive 0)
   (negative 0)
   (positive-derivator)
   (negative-derivator)
   (positive-support)
   (negative-support)
   (positive-overruled)
   (negative-overruled)
   (positive-defeated)
   (negative-defeated)
   (proof nil)
   (uri nil)
   (source rdf)
   (lc:name)
   (lc:defendant)
   (lc:steal_type)
   (lc:intention)
   (lc:steal_way)
   (lc:money)
   (rdfs:isDefinedBy)
   (rdf:type [rdfs:Class])
   (rdf:value)
   (rdfs:comment)
   (rdfs:label robbery_lv3)
   (rdfs:seeAlso)
   (rdfs:subClassOf [defeasible-class])
   (class-name robbery_lv3)
   (rules [rule4])
   (defeasible-stratum 0))

([robbery_lv4] of defeasible-class
   (class-refs rdfs:isDefinedBy rdfs:Resource rdf:type rdfs:Class rdfs:seeAlso rdfs:Resource rdfs:subClassOf rdfs:Class rules defeasible-logic-rule)
   (aliases rdfs:seeAlso rdfs:isDefinedBy)
   (positive 0)
   (negative 0)
   (positive-derivator)
   (negative-derivator)
   (positive-support)
   (negative-support)
   (positive-overruled)
   (negative-overruled)
   (positive-defeated)
   (negative-defeated)
   (proof nil)
   (uri nil)
   (source rdf)
   (lc:name)
   (lc:defendant)
   (lc:steal_type)
   (lc:intention)
   (lc:steal_way)
   (lc:money)
   (rdfs:isDefinedBy)
   (rdf:type [rdfs:Class])
   (rdf:value)
   (rdfs:comment)
   (rdfs:label robbery_lv4)
   (rdfs:seeAlso)
   (rdfs:subClassOf [defeasible-class])
   (class-name robbery_lv4)
   (rules [rule7])
   (defeasible-stratum 0))

([robbery_lv5] of defeasible-class
   (class-refs rdfs:isDefinedBy rdfs:Resource rdf:type rdfs:Class rdfs:seeAlso rdfs:Resource rdfs:subClassOf rdfs:Class rules defeasible-logic-rule)
   (aliases rdfs:seeAlso rdfs:isDefinedBy)
   (positive 0)
   (negative 0)
   (positive-derivator)
   (negative-derivator)
   (positive-support)
   (negative-support)
   (positive-overruled)
   (negative-overruled)
   (positive-defeated)
   (negative-defeated)
   (proof nil)
   (uri nil)
   (source rdf)
   (lc:name)
   (lc:defendant)
   (lc:steal_type)
   (lc:intention)
   (lc:steal_way)
   (lc:money)
   (rdfs:isDefinedBy)
   (rdf:type [rdfs:Class])
   (rdf:value)
   (rdfs:comment)
   (rdfs:label robbery_lv5)
   (rdfs:seeAlso)
   (rdfs:subClassOf [defeasible-class])
   (class-name robbery_lv5)
   (rules [rule8])
   (defeasible-stratum 0))

([robbery_lv6] of defeasible-class
   (class-refs rdfs:isDefinedBy rdfs:Resource rdf:type rdfs:Class rdfs:seeAlso rdfs:Resource rdfs:subClassOf rdfs:Class rules defeasible-logic-rule)
   (aliases rdfs:seeAlso rdfs:isDefinedBy)
   (positive 0)
   (negative 0)
   (positive-derivator)
   (negative-derivator)
   (positive-support)
   (negative-support)
   (positive-overruled)
   (negative-overruled)
   (positive-defeated)
   (negative-defeated)
   (proof nil)
   (uri nil)
   (source rdf)
   (lc:name)
   (lc:defendant)
   (lc:steal_type)
   (lc:intention)
   (lc:steal_way)
   (lc:money)
   (rdfs:isDefinedBy)
   (rdf:type [rdfs:Class])
   (rdf:value)
   (rdfs:comment)
   (rdfs:label robbery_lv6)
   (rdfs:seeAlso)
   (rdfs:subClassOf [defeasible-class])
   (class-name robbery_lv6)
   (rules [rule9])
   (defeasible-stratum 0))

([competition_outcome_arrangement_lv1] of defeasible-class
   (class-refs rdfs:isDefinedBy rdfs:Resource rdf:type rdfs:Class rdfs:seeAlso rdfs:Resource rdfs:subClassOf rdfs:Class rules defeasible-logic-rule)
   (aliases rdfs:seeAlso rdfs:isDefinedBy)
   (positive 0)
   (negative 0)
   (positive-derivator)
   (negative-derivator)
   (positive-support)
   (negative-support)
   (positive-overruled)
   (negative-overruled)
   (positive-defeated)
   (negative-defeated)
   (proof nil)
   (uri nil)
   (source rdf)
   (lc:name)
   (lc:defendant)
   (lc:steal_type)
   (lc:intention)
   (lc:steal_way)
   (lc:money)
   (rdfs:isDefinedBy)
   (rdf:type [rdfs:Class])
   (rdf:value)
   (rdfs:comment)
   (rdfs:label competition_outcome_arrangement_lv1)
   (rdfs:seeAlso)
   (rdfs:subClassOf [defeasible-class])
   (class-name competition_outcome_arrangement_lv1)
   (rules [rule15] [rule14] [rule11])
   (defeasible-stratum 0))

([competition_outcome_arrangement_lv2] of defeasible-class
   (class-refs rdfs:isDefinedBy rdfs:Resource rdf:type rdfs:Class rdfs:seeAlso rdfs:Resource rdfs:subClassOf rdfs:Class rules defeasible-logic-rule)
   (aliases rdfs:seeAlso rdfs:isDefinedBy)
   (positive 0)
   (negative 0)
   (positive-derivator)
   (negative-derivator)
   (positive-support)
   (negative-support)
   (positive-overruled)
   (negative-overruled)
   (positive-defeated)
   (negative-defeated)
   (proof nil)
   (uri nil)
   (source rdf)
   (lc:name)
   (lc:defendant)
   (lc:steal_type)
   (lc:intention)
   (lc:steal_way)
   (lc:money)
   (rdfs:isDefinedBy)
   (rdf:type [rdfs:Class])
   (rdf:value)
   (rdfs:comment)
   (rdfs:label competition_outcome_arrangement_lv2)
   (rdfs:seeAlso)
   (rdfs:subClassOf [defeasible-class])
   (class-name competition_outcome_arrangement_lv2)
   (rules [rule12])
   (defeasible-stratum 0))

([competition_outcome_arrangement_lv3] of defeasible-class
   (class-refs rdfs:isDefinedBy rdfs:Resource rdf:type rdfs:Class rdfs:seeAlso rdfs:Resource rdfs:subClassOf rdfs:Class rules defeasible-logic-rule)
   (aliases rdfs:seeAlso rdfs:isDefinedBy)
   (positive 0)
   (negative 0)
   (positive-derivator)
   (negative-derivator)
   (positive-support)
   (negative-support)
   (positive-overruled)
   (negative-overruled)
   (positive-defeated)
   (negative-defeated)
   (proof nil)
   (uri nil)
   (source rdf)
   (lc:name)
   (lc:defendant)
   (lc:steal_type)
   (lc:intention)
   (lc:steal_way)
   (lc:money)
   (rdfs:isDefinedBy)
   (rdf:type [rdfs:Class])
   (rdf:value)
   (rdfs:comment)
   (rdfs:label competition_outcome_arrangement_lv3)
   (rdfs:seeAlso)
   (rdfs:subClassOf [defeasible-class])
   (class-name competition_outcome_arrangement_lv3)
   (rules [rule13])
   (defeasible-stratum 0))

([min_imprisonment_robbery_1] of defeasible-class
   (class-refs rdfs:isDefinedBy rdfs:Resource rdf:type rdfs:Class rdfs:seeAlso rdfs:Resource rdfs:subClassOf rdfs:Class rules defeasible-logic-rule)
   (aliases rdfs:seeAlso rdfs:isDefinedBy)
   (positive 0)
   (negative 0)
   (positive-derivator)
   (negative-derivator)
   (positive-support)
   (negative-support)
   (positive-overruled)
   (negative-overruled)
   (positive-defeated)
   (negative-defeated)
   (proof nil)
   (uri nil)
   (source rdf)
   (lc:name)
   (lc:defendant)
   (lc:steal_type)
   (lc:intention)
   (lc:steal_way)
   (lc:money)
   (rdfs:isDefinedBy)
   (rdf:type [rdfs:Class])
   (rdf:value)
   (rdfs:comment)
   (rdfs:label min_imprisonment_robbery_1)
   (rdfs:seeAlso)
   (rdfs:subClassOf [defeasible-class])
   (class-name min_imprisonment_robbery_1)
   (rules [pen1])
   (defeasible-stratum 0))

([max_imprisonment_robbery_1] of defeasible-class
   (class-refs rdfs:isDefinedBy rdfs:Resource rdf:type rdfs:Class rdfs:seeAlso rdfs:Resource rdfs:subClassOf rdfs:Class rules defeasible-logic-rule)
   (aliases rdfs:seeAlso rdfs:isDefinedBy)
   (positive 0)
   (negative 0)
   (positive-derivator)
   (negative-derivator)
   (positive-support)
   (negative-support)
   (positive-overruled)
   (negative-overruled)
   (positive-defeated)
   (negative-defeated)
   (proof nil)
   (uri nil)
   (source rdf)
   (lc:name)
   (lc:defendant)
   (lc:steal_type)
   (lc:intention)
   (lc:steal_way)
   (lc:money)
   (rdfs:isDefinedBy)
   (rdf:type [rdfs:Class])
   (rdf:value)
   (rdfs:comment)
   (rdfs:label max_imprisonment_robbery_1)
   (rdfs:seeAlso)
   (rdfs:subClassOf [defeasible-class])
   (class-name max_imprisonment_robbery_1)
   (rules [pen2])
   (defeasible-stratum 0))

([min_imprisonment_robbery_2] of defeasible-class
   (class-refs rdfs:isDefinedBy rdfs:Resource rdf:type rdfs:Class rdfs:seeAlso rdfs:Resource rdfs:subClassOf rdfs:Class rules defeasible-logic-rule)
   (aliases rdfs:seeAlso rdfs:isDefinedBy)
   (positive 0)
   (negative 0)
   (positive-derivator)
   (negative-derivator)
   (positive-support)
   (negative-support)
   (positive-overruled)
   (negative-overruled)
   (positive-defeated)
   (negative-defeated)
   (proof nil)
   (uri nil)
   (source rdf)
   (lc:name)
   (lc:defendant)
   (lc:steal_type)
   (lc:intention)
   (lc:steal_way)
   (lc:money)
   (rdfs:isDefinedBy)
   (rdf:type [rdfs:Class])
   (rdf:value)
   (rdfs:comment)
   (rdfs:label min_imprisonment_robbery_2)
   (rdfs:seeAlso)
   (rdfs:subClassOf [defeasible-class])
   (class-name min_imprisonment_robbery_2)
   (rules [pen3])
   (defeasible-stratum 0))

([max_imprisonment_robbery_2] of defeasible-class
   (class-refs rdfs:isDefinedBy rdfs:Resource rdf:type rdfs:Class rdfs:seeAlso rdfs:Resource rdfs:subClassOf rdfs:Class rules defeasible-logic-rule)
   (aliases rdfs:seeAlso rdfs:isDefinedBy)
   (positive 0)
   (negative 0)
   (positive-derivator)
   (negative-derivator)
   (positive-support)
   (negative-support)
   (positive-overruled)
   (negative-overruled)
   (positive-defeated)
   (negative-defeated)
   (proof nil)
   (uri nil)
   (source rdf)
   (lc:name)
   (lc:defendant)
   (lc:steal_type)
   (lc:intention)
   (lc:steal_way)
   (lc:money)
   (rdfs:isDefinedBy)
   (rdf:type [rdfs:Class])
   (rdf:value)
   (rdfs:comment)
   (rdfs:label max_imprisonment_robbery_2)
   (rdfs:seeAlso)
   (rdfs:subClassOf [defeasible-class])
   (class-name max_imprisonment_robbery_2)
   (rules [pen4])
   (defeasible-stratum 0))

([max_imprisonment_robbery_3] of defeasible-class
   (class-refs rdfs:isDefinedBy rdfs:Resource rdf:type rdfs:Class rdfs:seeAlso rdfs:Resource rdfs:subClassOf rdfs:Class rules defeasible-logic-rule)
   (aliases rdfs:seeAlso rdfs:isDefinedBy)
   (positive 0)
   (negative 0)
   (positive-derivator)
   (negative-derivator)
   (positive-support)
   (negative-support)
   (positive-overruled)
   (negative-overruled)
   (positive-defeated)
   (negative-defeated)
   (proof nil)
   (uri nil)
   (source rdf)
   (lc:name)
   (lc:defendant)
   (lc:steal_type)
   (lc:intention)
   (lc:steal_way)
   (lc:money)
   (rdfs:isDefinedBy)
   (rdf:type [rdfs:Class])
   (rdf:value)
   (rdfs:comment)
   (rdfs:label max_imprisonment_robbery_3)
   (rdfs:seeAlso)
   (rdfs:subClassOf [defeasible-class])
   (class-name max_imprisonment_robbery_3)
   (rules [pen5])
   (defeasible-stratum 0))

([min_imprisonment_robbery_3] of defeasible-class
   (class-refs rdfs:isDefinedBy rdfs:Resource rdf:type rdfs:Class rdfs:seeAlso rdfs:Resource rdfs:subClassOf rdfs:Class rules defeasible-logic-rule)
   (aliases rdfs:seeAlso rdfs:isDefinedBy)
   (positive 0)
   (negative 0)
   (positive-derivator)
   (negative-derivator)
   (positive-support)
   (negative-support)
   (positive-overruled)
   (negative-overruled)
   (positive-defeated)
   (negative-defeated)
   (proof nil)
   (uri nil)
   (source rdf)
   (lc:name)
   (lc:defendant)
   (lc:steal_type)
   (lc:intention)
   (lc:steal_way)
   (lc:money)
   (rdfs:isDefinedBy)
   (rdf:type [rdfs:Class])
   (rdf:value)
   (rdfs:comment)
   (rdfs:label min_imprisonment_robbery_3)
   (rdfs:seeAlso)
   (rdfs:subClassOf [defeasible-class])
   (class-name min_imprisonment_robbery_3)
   (rules [pen6])
   (defeasible-stratum 0))

([max_imprisonment_robbery_4] of defeasible-class
   (class-refs rdfs:isDefinedBy rdfs:Resource rdf:type rdfs:Class rdfs:seeAlso rdfs:Resource rdfs:subClassOf rdfs:Class rules defeasible-logic-rule)
   (aliases rdfs:seeAlso rdfs:isDefinedBy)
   (positive 0)
   (negative 0)
   (positive-derivator)
   (negative-derivator)
   (positive-support)
   (negative-support)
   (positive-overruled)
   (negative-overruled)
   (positive-defeated)
   (negative-defeated)
   (proof nil)
   (uri nil)
   (source rdf)
   (lc:name)
   (lc:defendant)
   (lc:steal_type)
   (lc:intention)
   (lc:steal_way)
   (lc:money)
   (rdfs:isDefinedBy)
   (rdf:type [rdfs:Class])
   (rdf:value)
   (rdfs:comment)
   (rdfs:label max_imprisonment_robbery_4)
   (rdfs:seeAlso)
   (rdfs:subClassOf [defeasible-class])
   (class-name max_imprisonment_robbery_4)
   (rules [pen7])
   (defeasible-stratum 0))

([min_imprisonment_robbery_4] of defeasible-class
   (class-refs rdfs:isDefinedBy rdfs:Resource rdf:type rdfs:Class rdfs:seeAlso rdfs:Resource rdfs:subClassOf rdfs:Class rules defeasible-logic-rule)
   (aliases rdfs:seeAlso rdfs:isDefinedBy)
   (positive 0)
   (negative 0)
   (positive-derivator)
   (negative-derivator)
   (positive-support)
   (negative-support)
   (positive-overruled)
   (negative-overruled)
   (positive-defeated)
   (negative-defeated)
   (proof nil)
   (uri nil)
   (source rdf)
   (lc:name)
   (lc:defendant)
   (lc:steal_type)
   (lc:intention)
   (lc:steal_way)
   (lc:money)
   (rdfs:isDefinedBy)
   (rdf:type [rdfs:Class])
   (rdf:value)
   (rdfs:comment)
   (rdfs:label min_imprisonment_robbery_4)
   (rdfs:seeAlso)
   (rdfs:subClassOf [defeasible-class])
   (class-name min_imprisonment_robbery_4)
   (rules [pen8])
   (defeasible-stratum 0))

([max_imprisonment_robbery_5] of defeasible-class
   (class-refs rdfs:isDefinedBy rdfs:Resource rdf:type rdfs:Class rdfs:seeAlso rdfs:Resource rdfs:subClassOf rdfs:Class rules defeasible-logic-rule)
   (aliases rdfs:seeAlso rdfs:isDefinedBy)
   (positive 0)
   (negative 0)
   (positive-derivator)
   (negative-derivator)
   (positive-support)
   (negative-support)
   (positive-overruled)
   (negative-overruled)
   (positive-defeated)
   (negative-defeated)
   (proof nil)
   (uri nil)
   (source rdf)
   (lc:name)
   (lc:defendant)
   (lc:steal_type)
   (lc:intention)
   (lc:steal_way)
   (lc:money)
   (rdfs:isDefinedBy)
   (rdf:type [rdfs:Class])
   (rdf:value)
   (rdfs:comment)
   (rdfs:label max_imprisonment_robbery_5)
   (rdfs:seeAlso)
   (rdfs:subClassOf [defeasible-class])
   (class-name max_imprisonment_robbery_5)
   (rules [pen9])
   (defeasible-stratum 0))

([max_imprisonment_robbery_6] of defeasible-class
   (class-refs rdfs:isDefinedBy rdfs:Resource rdf:type rdfs:Class rdfs:seeAlso rdfs:Resource rdfs:subClassOf rdfs:Class rules defeasible-logic-rule)
   (aliases rdfs:seeAlso rdfs:isDefinedBy)
   (positive 0)
   (negative 0)
   (positive-derivator)
   (negative-derivator)
   (positive-support)
   (negative-support)
   (positive-overruled)
   (negative-overruled)
   (positive-defeated)
   (negative-defeated)
   (proof nil)
   (uri nil)
   (source rdf)
   (lc:name)
   (lc:defendant)
   (lc:steal_type)
   (lc:intention)
   (lc:steal_way)
   (lc:money)
   (rdfs:isDefinedBy)
   (rdf:type [rdfs:Class])
   (rdf:value)
   (rdfs:comment)
   (rdfs:label max_imprisonment_robbery_6)
   (rdfs:seeAlso)
   (rdfs:subClassOf [defeasible-class])
   (class-name max_imprisonment_robbery_6)
   (rules [pen10])
   (defeasible-stratum 0))

([max_imprisonment_competition_outcome_arrangement_1] of defeasible-class
   (class-refs rdfs:isDefinedBy rdfs:Resource rdf:type rdfs:Class rdfs:seeAlso rdfs:Resource rdfs:subClassOf rdfs:Class rules defeasible-logic-rule)
   (aliases rdfs:seeAlso rdfs:isDefinedBy)
   (positive 0)
   (negative 0)
   (positive-derivator)
   (negative-derivator)
   (positive-support)
   (negative-support)
   (positive-overruled)
   (negative-overruled)
   (positive-defeated)
   (negative-defeated)
   (proof nil)
   (uri nil)
   (source rdf)
   (lc:name)
   (lc:defendant)
   (lc:steal_type)
   (lc:intention)
   (lc:steal_way)
   (lc:money)
   (rdfs:isDefinedBy)
   (rdf:type [rdfs:Class])
   (rdf:value)
   (rdfs:comment)
   (rdfs:label max_imprisonment_competition_outcome_arrangement_1)
   (rdfs:seeAlso)
   (rdfs:subClassOf [defeasible-class])
   (class-name max_imprisonment_competition_outcome_arrangement_1)
   (rules [pen11])
   (defeasible-stratum 0))

([min_imprisonment_competition_outcome_arrangement_1] of defeasible-class
   (class-refs rdfs:isDefinedBy rdfs:Resource rdf:type rdfs:Class rdfs:seeAlso rdfs:Resource rdfs:subClassOf rdfs:Class rules defeasible-logic-rule)
   (aliases rdfs:seeAlso rdfs:isDefinedBy)
   (positive 0)
   (negative 0)
   (positive-derivator)
   (negative-derivator)
   (positive-support)
   (negative-support)
   (positive-overruled)
   (negative-overruled)
   (positive-defeated)
   (negative-defeated)
   (proof nil)
   (uri nil)
   (source rdf)
   (lc:name)
   (lc:defendant)
   (lc:steal_type)
   (lc:intention)
   (lc:steal_way)
   (lc:money)
   (rdfs:isDefinedBy)
   (rdf:type [rdfs:Class])
   (rdf:value)
   (rdfs:comment)
   (rdfs:label min_imprisonment_competition_outcome_arrangement_1)
   (rdfs:seeAlso)
   (rdfs:subClassOf [defeasible-class])
   (class-name min_imprisonment_competition_outcome_arrangement_1)
   (rules [pen12])
   (defeasible-stratum 0))

([max_imprisonment_competition_outcome_arrangement_2] of defeasible-class
   (class-refs rdfs:isDefinedBy rdfs:Resource rdf:type rdfs:Class rdfs:seeAlso rdfs:Resource rdfs:subClassOf rdfs:Class rules defeasible-logic-rule)
   (aliases rdfs:seeAlso rdfs:isDefinedBy)
   (positive 0)
   (negative 0)
   (positive-derivator)
   (negative-derivator)
   (positive-support)
   (negative-support)
   (positive-overruled)
   (negative-overruled)
   (positive-defeated)
   (negative-defeated)
   (proof nil)
   (uri nil)
   (source rdf)
   (lc:name)
   (lc:defendant)
   (lc:steal_type)
   (lc:intention)
   (lc:steal_way)
   (lc:money)
   (rdfs:isDefinedBy)
   (rdf:type [rdfs:Class])
   (rdf:value)
   (rdfs:comment)
   (rdfs:label max_imprisonment_competition_outcome_arrangement_2)
   (rdfs:seeAlso)
   (rdfs:subClassOf [defeasible-class])
   (class-name max_imprisonment_competition_outcome_arrangement_2)
   (rules [pen13])
   (defeasible-stratum 0))

([min_imprisonment_competition_outcome_arrangement_2] of defeasible-class
   (class-refs rdfs:isDefinedBy rdfs:Resource rdf:type rdfs:Class rdfs:seeAlso rdfs:Resource rdfs:subClassOf rdfs:Class rules defeasible-logic-rule)
   (aliases rdfs:seeAlso rdfs:isDefinedBy)
   (positive 0)
   (negative 0)
   (positive-derivator)
   (negative-derivator)
   (positive-support)
   (negative-support)
   (positive-overruled)
   (negative-overruled)
   (positive-defeated)
   (negative-defeated)
   (proof nil)
   (uri nil)
   (source rdf)
   (lc:name)
   (lc:defendant)
   (lc:steal_type)
   (lc:intention)
   (lc:steal_way)
   (lc:money)
   (rdfs:isDefinedBy)
   (rdf:type [rdfs:Class])
   (rdf:value)
   (rdfs:comment)
   (rdfs:label min_imprisonment_competition_outcome_arrangement_2)
   (rdfs:seeAlso)
   (rdfs:subClassOf [defeasible-class])
   (class-name min_imprisonment_competition_outcome_arrangement_2)
   (rules [pen14])
   (defeasible-stratum 0))

([max_imprisonment_competition_outcome_arrangement_3] of defeasible-class
   (class-refs rdfs:isDefinedBy rdfs:Resource rdf:type rdfs:Class rdfs:seeAlso rdfs:Resource rdfs:subClassOf rdfs:Class rules defeasible-logic-rule)
   (aliases rdfs:seeAlso rdfs:isDefinedBy)
   (positive 0)
   (negative 0)
   (positive-derivator)
   (negative-derivator)
   (positive-support)
   (negative-support)
   (positive-overruled)
   (negative-overruled)
   (positive-defeated)
   (negative-defeated)
   (proof nil)
   (uri nil)
   (source rdf)
   (lc:name)
   (lc:defendant)
   (lc:steal_type)
   (lc:intention)
   (lc:steal_way)
   (lc:money)
   (rdfs:isDefinedBy)
   (rdf:type [rdfs:Class])
   (rdf:value)
   (rdfs:comment)
   (rdfs:label max_imprisonment_competition_outcome_arrangement_3)
   (rdfs:seeAlso)
   (rdfs:subClassOf [defeasible-class])
   (class-name max_imprisonment_competition_outcome_arrangement_3)
   (rules [pen15])
   (defeasible-stratum 0))

